{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "AddressAlreadyFiltered",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "filtered",
          "type": "address"
        }
      ],
      "name": "AddressFiltered",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "AddressNotFiltered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AlreadyRegistered",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "subscription",
          "type": "address"
        }
      ],
      "name": "AlreadySubscribed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotCopyFromSelf",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotFilterEOAs",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        }
      ],
      "name": "CannotSubscribeToRegistrantWithSubscription",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotSubscribeToSelf",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotSubscribeToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "subscription",
          "type": "address"
        }
      ],
      "name": "CannotUpdateWhileSubscribed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "codeHash",
          "type": "bytes32"
        }
      ],
      "name": "CodeHashAlreadyFiltered",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "codeHash",
          "type": "bytes32"
        }
      ],
      "name": "CodeHashFiltered",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "codeHash",
          "type": "bytes32"
        }
      ],
      "name": "CodeHashNotFiltered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwnable",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        }
      ],
      "name": "NotRegistered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotSubscribed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyAddressOrOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "codeHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "filtered",
          "type": "bool"
        }
      ],
      "name": "CodeHashUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "codeHashes",
          "type": "bytes32[]"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "filtered",
          "type": "bool"
        }
      ],
      "name": "CodeHashesUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "filtered",
          "type": "bool"
        }
      ],
      "name": "OperatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "operators",
          "type": "address[]"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "filtered",
          "type": "bool"
        }
      ],
      "name": "OperatorsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "registered",
          "type": "bool"
        }
      ],
      "name": "RegistrationUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "subscription",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "subscribed",
          "type": "bool"
        }
      ],
      "name": "SubscriptionUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "codeHashOf",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "registrantToCopy",
          "type": "address"
        }
      ],
      "name": "copyEntriesOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "filteredCodeHashAt",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        }
      ],
      "name": "filteredCodeHashes",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "filteredOperatorAt",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        }
      ],
      "name": "filteredOperators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "codeHash",
          "type": "bytes32"
        }
      ],
      "name": "isCodeHashFiltered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operatorWithCode",
          "type": "address"
        }
      ],
      "name": "isCodeHashOfFiltered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isOperatorAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isOperatorFiltered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        }
      ],
      "name": "isRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "registrantToCopy",
          "type": "address"
        }
      ],
      "name": "registerAndCopyEntries",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "subscription",
          "type": "address"
        }
      ],
      "name": "registerAndSubscribe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newSubscription",
          "type": "address"
        }
      ],
      "name": "subscribe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "subscriberAt",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        }
      ],
      "name": "subscribers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        }
      ],
      "name": "subscriptionOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "subscription",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        }
      ],
      "name": "unregister",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "copyExistingEntries",
          "type": "bool"
        }
      ],
      "name": "unsubscribe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "codeHash",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "filtered",
          "type": "bool"
        }
      ],
      "name": "updateCodeHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "codeHashes",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "filtered",
          "type": "bool"
        }
      ],
      "name": "updateCodeHashes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "filtered",
          "type": "bool"
        }
      ],
      "name": "updateOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "operators",
          "type": "address[]"
        },
        {
          "internalType": "bool",
          "name": "filtered",
          "type": "bool"
        }
      ],
      "name": "updateOperators",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/zbloss/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
    "13": "/Users/zbloss/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/structs/EnumerableSet.sol",
    "16": "contracts/IOperatorFilterRegistry.sol",
    "17": "contracts/OperatorFilterRegistry.sol",
    "18": "contracts/OperatorFilterRegistryErrorsAndEvents.sol",
    "8": "/Users/zbloss/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/OperatorFilterRegistry.sol",
    "exportedSymbols": {
      "EnumerableSet": [
        4482
      ],
      "IOperatorFilterRegistry": [
        441
      ],
      "OperatorFilterRegistry": [
        2067
      ],
      "OperatorFilterRegistryErrorsAndEvents": [
        2176
      ],
      "Ownable": [
        2799
      ]
    },
    "id": 2068,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 443,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:17"
      },
      {
        "absolutePath": "contracts/IOperatorFilterRegistry.sol",
        "file": "./IOperatorFilterRegistry.sol",
        "id": 445,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2068,
        "sourceUnit": 442,
        "src": "58:70:17",
        "symbolAliases": [
          {
            "foreign": {
              "id": 444,
              "name": "IOperatorFilterRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 441,
              "src": "66:23:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/zbloss/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 447,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2068,
        "sourceUnit": 2800,
        "src": "129:67:17",
        "symbolAliases": [
          {
            "foreign": {
              "id": 446,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2799,
              "src": "137:7:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/zbloss/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/structs/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "id": 449,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2068,
        "sourceUnit": 4483,
        "src": "197:86:17",
        "symbolAliases": [
          {
            "foreign": {
              "id": 448,
              "name": "EnumerableSet",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4482,
              "src": "205:13:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OperatorFilterRegistryErrorsAndEvents.sol",
        "file": "./OperatorFilterRegistryErrorsAndEvents.sol",
        "id": 451,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2068,
        "sourceUnit": 2177,
        "src": "284:98:17",
        "symbolAliases": [
          {
            "foreign": {
              "id": 450,
              "name": "OperatorFilterRegistryErrorsAndEvents",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2176,
              "src": "292:37:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 453,
              "name": "IOperatorFilterRegistry",
              "nameLocations": [
                "811:23:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 441,
              "src": "811:23:17"
            },
            "id": 454,
            "nodeType": "InheritanceSpecifier",
            "src": "811:23:17"
          },
          {
            "baseName": {
              "id": 455,
              "name": "OperatorFilterRegistryErrorsAndEvents",
              "nameLocations": [
                "836:37:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2176,
              "src": "836:37:17"
            },
            "id": 456,
            "nodeType": "InheritanceSpecifier",
            "src": "836:37:17"
          }
        ],
        "canonicalName": "OperatorFilterRegistry",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 452,
          "nodeType": "StructuredDocumentation",
          "src": "384:391:17",
          "text": " @title  OperatorFilterRegistry\n @notice Borrows heavily from the QQL BlacklistOperatorFilter contract:\n         https://github.com/qql-art/contracts/blob/main/contracts/BlacklistOperatorFilter.sol\n @notice This contracts allows tokens or token owners to register specific addresses or codeHashes that may be\n *       restricted according to the isOperatorAllowed function."
        },
        "fullyImplemented": true,
        "id": 2067,
        "linearizedBaseContracts": [
          2067,
          2176,
          441
        ],
        "name": "OperatorFilterRegistry",
        "nameLocation": "785:22:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 460,
            "libraryName": {
              "id": 457,
              "name": "EnumerableSet",
              "nameLocations": [
                "886:13:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4482,
              "src": "886:13:17"
            },
            "nodeType": "UsingForDirective",
            "src": "880:49:17",
            "typeName": {
              "id": 459,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 458,
                "name": "EnumerableSet.AddressSet",
                "nameLocations": [
                  "904:13:17",
                  "918:10:17"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4195,
                "src": "904:24:17"
              },
              "referencedDeclaration": 4195,
              "src": "904:24:17",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$4195_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "global": false,
            "id": 464,
            "libraryName": {
              "id": 461,
              "name": "EnumerableSet",
              "nameLocations": [
                "940:13:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4482,
              "src": "940:13:17"
            },
            "nodeType": "UsingForDirective",
            "src": "934:49:17",
            "typeName": {
              "id": 463,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 462,
                "name": "EnumerableSet.Bytes32Set",
                "nameLocations": [
                  "958:13:17",
                  "972:10:17"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4074,
                "src": "958:24:17"
              },
              "referencedDeclaration": 4074,
              "src": "958:24:17",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage_ptr",
                "typeString": "struct EnumerableSet.Bytes32Set"
              }
            }
          },
          {
            "constant": true,
            "documentation": {
              "id": 465,
              "nodeType": "StructuredDocumentation",
              "src": "989:203:17",
              "text": "@dev initialized accounts have a nonzero codehash (see https://eips.ethereum.org/EIPS/eip-1052)\n Note that this will also be a smart contract's codehash when making calls from its constructor."
            },
            "id": 470,
            "mutability": "constant",
            "name": "EOA_CODEHASH",
            "nameLocation": "1214:12:17",
            "nodeType": "VariableDeclaration",
            "scope": 2067,
            "src": "1197:45:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 466,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1197:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "",
                  "id": 468,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1239:2:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                    "typeString": "literal_string \"\""
                  },
                  "value": ""
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                    "typeString": "literal_string \"\""
                  }
                ],
                "id": 467,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1229:9:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 469,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1229:13:17",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 475,
            "mutability": "mutable",
            "name": "_filteredOperators",
            "nameLocation": "1302:18:17",
            "nodeType": "VariableDeclaration",
            "scope": 2067,
            "src": "1249:71:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
              "typeString": "mapping(address => struct EnumerableSet.AddressSet)"
            },
            "typeName": {
              "id": 474,
              "keyType": {
                "id": 471,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1257:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1249:44:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
                "typeString": "mapping(address => struct EnumerableSet.AddressSet)"
              },
              "valueType": {
                "id": 473,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 472,
                  "name": "EnumerableSet.AddressSet",
                  "nameLocations": [
                    "1268:13:17",
                    "1282:10:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4195,
                  "src": "1268:24:17"
                },
                "referencedDeclaration": 4195,
                "src": "1268:24:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AddressSet_$4195_storage_ptr",
                  "typeString": "struct EnumerableSet.AddressSet"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 480,
            "mutability": "mutable",
            "name": "_filteredCodeHashes",
            "nameLocation": "1379:19:17",
            "nodeType": "VariableDeclaration",
            "scope": 2067,
            "src": "1326:72:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bytes32Set_$4074_storage_$",
              "typeString": "mapping(address => struct EnumerableSet.Bytes32Set)"
            },
            "typeName": {
              "id": 479,
              "keyType": {
                "id": 476,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1334:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1326:44:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bytes32Set_$4074_storage_$",
                "typeString": "mapping(address => struct EnumerableSet.Bytes32Set)"
              },
              "valueType": {
                "id": 478,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 477,
                  "name": "EnumerableSet.Bytes32Set",
                  "nameLocations": [
                    "1345:13:17",
                    "1359:10:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4074,
                  "src": "1345:24:17"
                },
                "referencedDeclaration": 4074,
                "src": "1345:24:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage_ptr",
                  "typeString": "struct EnumerableSet.Bytes32Set"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 484,
            "mutability": "mutable",
            "name": "_registrations",
            "nameLocation": "1440:14:17",
            "nodeType": "VariableDeclaration",
            "scope": 2067,
            "src": "1404:50:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 483,
              "keyType": {
                "id": 481,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1412:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1404:27:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 482,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1423:7:17",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 489,
            "mutability": "mutable",
            "name": "_subscribers",
            "nameLocation": "1513:12:17",
            "nodeType": "VariableDeclaration",
            "scope": 2067,
            "src": "1460:65:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
              "typeString": "mapping(address => struct EnumerableSet.AddressSet)"
            },
            "typeName": {
              "id": 488,
              "keyType": {
                "id": 485,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1468:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1460:44:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
                "typeString": "mapping(address => struct EnumerableSet.AddressSet)"
              },
              "valueType": {
                "id": 487,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 486,
                  "name": "EnumerableSet.AddressSet",
                  "nameLocations": [
                    "1479:13:17",
                    "1493:10:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4195,
                  "src": "1479:24:17"
                },
                "referencedDeclaration": 4195,
                "src": "1479:24:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AddressSet_$4195_storage_ptr",
                  "typeString": "struct EnumerableSet.AddressSet"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 537,
              "nodeType": "Block",
              "src": "1665:591:17",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 494,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1679:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1683:6:17",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1679:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 496,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 492,
                      "src": "1693:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1679:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 535,
                  "nodeType": "IfStatement",
                  "src": "1675:564:17",
                  "trueBody": {
                    "id": 534,
                    "nodeType": "Block",
                    "src": "1699:540:17",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 515,
                              "nodeType": "Block",
                              "src": "1763:125:17",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 509,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 506,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "1785:3:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 507,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1789:6:17",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "1785:10:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "id": 508,
                                      "name": "owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 504,
                                      "src": "1799:5:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "1785:19:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 514,
                                  "nodeType": "IfStatement",
                                  "src": "1781:93:17",
                                  "trueBody": {
                                    "id": 513,
                                    "nodeType": "Block",
                                    "src": "1806:68:17",
                                    "statements": [
                                      {
                                        "errorCall": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 510,
                                            "name": "OnlyAddressOrOwner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2089,
                                            "src": "1835:18:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                              "typeString": "function () pure"
                                            }
                                          },
                                          "id": 511,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1835:20:17",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 512,
                                        "nodeType": "RevertStatement",
                                        "src": "1828:27:17"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 516,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 505,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 504,
                                  "mutability": "mutable",
                                  "name": "owner",
                                  "nameLocation": "1756:5:17",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 516,
                                  "src": "1748:13:17",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 503,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1748:7:17",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "1747:15:17"
                            },
                            "src": "1739:149:17"
                          },
                          {
                            "block": {
                              "id": 531,
                              "nodeType": "Block",
                              "src": "1917:312:17",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 523,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 520,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 518,
                                        "src": "1939:6:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 521,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1946:6:17",
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "1939:13:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 522,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1956:1:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "1939:18:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 529,
                                    "nodeType": "Block",
                                    "src": "2025:190:17",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "2111:86:17",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "2148:2:17",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2152:6:17"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2144:3:17"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "2144:15:17"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2167:6:17"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2161:5:17"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "2161:13:17"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2137:6:17"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "2137:38:17"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "2137:38:17"
                                            }
                                          ]
                                        },
                                        "documentation": "@solidity memory-safe-assembly",
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 518,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "2152:6:17",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 518,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "2167:6:17",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 528,
                                        "nodeType": "InlineAssembly",
                                        "src": "2102:95:17"
                                      }
                                    ]
                                  },
                                  "id": 530,
                                  "nodeType": "IfStatement",
                                  "src": "1935:280:17",
                                  "trueBody": {
                                    "id": 527,
                                    "nodeType": "Block",
                                    "src": "1959:60:17",
                                    "statements": [
                                      {
                                        "errorCall": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 524,
                                            "name": "NotOwnable",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2111,
                                            "src": "1988:10:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                              "typeString": "function () pure"
                                            }
                                          },
                                          "id": 525,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1988:12:17",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 526,
                                        "nodeType": "RevertStatement",
                                        "src": "1981:19:17"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 532,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 519,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 518,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "1909:6:17",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 532,
                                  "src": "1896:19:17",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 517,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1896:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "1895:21:17"
                            },
                            "src": "1889:340:17"
                          }
                        ],
                        "externalCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 499,
                                  "name": "addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 492,
                                  "src": "1725:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 498,
                                "name": "Ownable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2799,
                                "src": "1717:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Ownable_$2799_$",
                                  "typeString": "type(contract Ownable)"
                                }
                              },
                              "id": 500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1717:13:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Ownable_$2799",
                                "typeString": "contract Ownable"
                              }
                            },
                            "id": 501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1731:5:17",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2727,
                            "src": "1717:19:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1717:21:17",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 533,
                        "nodeType": "TryStatement",
                        "src": "1713:516:17"
                      }
                    ]
                  }
                },
                {
                  "id": 536,
                  "nodeType": "PlaceholderStatement",
                  "src": "2248:1:17"
                }
              ]
            },
            "documentation": {
              "id": 490,
              "nodeType": "StructuredDocumentation",
              "src": "1532:86:17",
              "text": " @notice restricts method caller to the address or EIP-173 \"owner()\""
            },
            "id": 538,
            "name": "onlyAddressOrOwner",
            "nameLocation": "1632:18:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 492,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1659:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 538,
                  "src": "1651:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 491,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1651:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1650:14:17"
            },
            "src": "1623:633:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              258
            ],
            "body": {
              "id": 621,
              "nodeType": "Block",
              "src": "2561:798:17",
              "statements": [
                {
                  "assignments": [
                    549
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 549,
                      "mutability": "mutable",
                      "name": "registration",
                      "nameLocation": "2579:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 621,
                      "src": "2571:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 548,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2571:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 553,
                  "initialValue": {
                    "baseExpression": {
                      "id": 550,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "2594:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 552,
                    "indexExpression": {
                      "id": 551,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 541,
                      "src": "2609:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2594:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2571:49:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 554,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "2634:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2658:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2650:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 555,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2650:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2650:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2634:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 618,
                  "nodeType": "IfStatement",
                  "src": "2630:702:17",
                  "trueBody": {
                    "id": 617,
                    "nodeType": "Block",
                    "src": "2662:670:17",
                    "statements": [
                      {
                        "assignments": [
                          564
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 564,
                            "mutability": "mutable",
                            "name": "filteredOperatorsRef",
                            "nameLocation": "2709:20:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 617,
                            "src": "2676:53:17",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$4195_storage_ptr",
                              "typeString": "struct EnumerableSet.AddressSet"
                            },
                            "typeName": {
                              "id": 563,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 562,
                                "name": "EnumerableSet.AddressSet",
                                "nameLocations": [
                                  "2676:13:17",
                                  "2690:10:17"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 4195,
                                "src": "2676:24:17"
                              },
                              "referencedDeclaration": 4195,
                              "src": "2676:24:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$4195_storage_ptr",
                                "typeString": "struct EnumerableSet.AddressSet"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 565,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2676:53:17"
                      },
                      {
                        "assignments": [
                          570
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 570,
                            "mutability": "mutable",
                            "name": "filteredCodeHashesRef",
                            "nameLocation": "2776:21:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 617,
                            "src": "2743:54:17",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage_ptr",
                              "typeString": "struct EnumerableSet.Bytes32Set"
                            },
                            "typeName": {
                              "id": 569,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 568,
                                "name": "EnumerableSet.Bytes32Set",
                                "nameLocations": [
                                  "2743:13:17",
                                  "2757:10:17"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 4074,
                                "src": "2743:24:17"
                              },
                              "referencedDeclaration": 4074,
                              "src": "2743:24:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage_ptr",
                                "typeString": "struct EnumerableSet.Bytes32Set"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 571,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2743:54:17"
                      },
                      {
                        "expression": {
                          "id": 576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 572,
                            "name": "filteredOperatorsRef",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 564,
                            "src": "2812:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$4195_storage_ptr",
                              "typeString": "struct EnumerableSet.AddressSet storage pointer"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 573,
                              "name": "_filteredOperators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 475,
                              "src": "2835:18:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
                                "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                              }
                            },
                            "id": 575,
                            "indexExpression": {
                              "id": 574,
                              "name": "registration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 549,
                              "src": "2854:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2835:32:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$4195_storage",
                              "typeString": "struct EnumerableSet.AddressSet storage ref"
                            }
                          },
                          "src": "2812:55:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSet_$4195_storage_ptr",
                            "typeString": "struct EnumerableSet.AddressSet storage pointer"
                          }
                        },
                        "id": 577,
                        "nodeType": "ExpressionStatement",
                        "src": "2812:55:17"
                      },
                      {
                        "expression": {
                          "id": 582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 578,
                            "name": "filteredCodeHashesRef",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 570,
                            "src": "2881:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage_ptr",
                              "typeString": "struct EnumerableSet.Bytes32Set storage pointer"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 579,
                              "name": "_filteredCodeHashes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "2905:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bytes32Set_$4074_storage_$",
                                "typeString": "mapping(address => struct EnumerableSet.Bytes32Set storage ref)"
                              }
                            },
                            "id": 581,
                            "indexExpression": {
                              "id": 580,
                              "name": "registration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 549,
                              "src": "2925:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2905:33:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage",
                              "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                            }
                          },
                          "src": "2881:57:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage_ptr",
                            "typeString": "struct EnumerableSet.Bytes32Set storage pointer"
                          }
                        },
                        "id": 583,
                        "nodeType": "ExpressionStatement",
                        "src": "2881:57:17"
                      },
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 586,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 543,
                              "src": "2987:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 584,
                              "name": "filteredOperatorsRef",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 564,
                              "src": "2957:20:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$4195_storage_ptr",
                                "typeString": "struct EnumerableSet.AddressSet storage pointer"
                              }
                            },
                            "id": 585,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2978:8:17",
                            "memberName": "contains",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4276,
                            "src": "2957:29:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$4195_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                            }
                          },
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2957:39:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 593,
                        "nodeType": "IfStatement",
                        "src": "2953:110:17",
                        "trueBody": {
                          "id": 592,
                          "nodeType": "Block",
                          "src": "2998:65:17",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 589,
                                    "name": "operator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 543,
                                    "src": "3039:8:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 588,
                                  "name": "AddressFiltered",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2115,
                                  "src": "3023:15:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 590,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3023:25:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 591,
                              "nodeType": "RevertStatement",
                              "src": "3016:32:17"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 594,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 543,
                                "src": "3080:8:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3089:4:17",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "3080:13:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3094:6:17",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3080:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3103:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3080:24:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 616,
                        "nodeType": "IfStatement",
                        "src": "3076:246:17",
                        "trueBody": {
                          "id": 615,
                          "nodeType": "Block",
                          "src": "3106:216:17",
                          "statements": [
                            {
                              "assignments": [
                                600
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 600,
                                  "mutability": "mutable",
                                  "name": "codeHash",
                                  "nameLocation": "3132:8:17",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 615,
                                  "src": "3124:16:17",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 599,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3124:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 603,
                              "initialValue": {
                                "expression": {
                                  "id": 601,
                                  "name": "operator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 543,
                                  "src": "3143:8:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3152:8:17",
                                "memberName": "codehash",
                                "nodeType": "MemberAccess",
                                "src": "3143:17:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3124:36:17"
                            },
                            {
                              "condition": {
                                "arguments": [
                                  {
                                    "id": 606,
                                    "name": "codeHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 600,
                                    "src": "3213:8:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 604,
                                    "name": "filteredCodeHashesRef",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 570,
                                    "src": "3182:21:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage_ptr",
                                      "typeString": "struct EnumerableSet.Bytes32Set storage pointer"
                                    }
                                  },
                                  "id": 605,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3204:8:17",
                                  "memberName": "contains",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4128,
                                  "src": "3182:30:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$4074_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$4074_storage_ptr_$",
                                    "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"
                                  }
                                },
                                "id": 607,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3182:40:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 614,
                              "nodeType": "IfStatement",
                              "src": "3178:130:17",
                              "trueBody": {
                                "id": 613,
                                "nodeType": "Block",
                                "src": "3224:84:17",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 609,
                                          "name": "operator",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 543,
                                          "src": "3270:8:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 610,
                                          "name": "codeHash",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 600,
                                          "src": "3280:8:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "id": 608,
                                        "name": "CodeHashFiltered",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2121,
                                        "src": "3253:16:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
                                          "typeString": "function (address,bytes32) pure"
                                        }
                                      },
                                      "id": 611,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3253:36:17",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 612,
                                    "nodeType": "RevertStatement",
                                    "src": "3246:43:17"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3348:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 547,
                  "id": 620,
                  "nodeType": "Return",
                  "src": "3341:11:17"
                }
              ]
            },
            "documentation": {
              "id": 539,
              "nodeType": "StructuredDocumentation",
              "src": "2262:200:17",
              "text": " @notice Returns true if operator is not filtered for a given token, either by address or codeHash. Also returns\n         true if supplied registrant address is not registered."
            },
            "functionSelector": "c6171134",
            "id": 622,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperatorAllowed",
            "nameLocation": "2476:17:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 541,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "2502:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "2494:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2494:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 543,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "2522:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "2514:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2514:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2493:38:17"
            },
            "returnParameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "2555:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2555:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2554:6:17"
            },
            "scope": 2067,
            "src": "2467:892:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              263
            ],
            "body": {
              "id": 655,
              "nodeType": "Block",
              "src": "3637:214:17",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 631,
                        "name": "_registrations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "3651:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 633,
                      "indexExpression": {
                        "id": 632,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "3666:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3651:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3689:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3681:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 634,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3681:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3681:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3651:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 643,
                  "nodeType": "IfStatement",
                  "src": "3647:97:17",
                  "trueBody": {
                    "id": 642,
                    "nodeType": "Block",
                    "src": "3693:51:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 639,
                            "name": "AlreadyRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2095,
                            "src": "3714:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3714:19:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 641,
                        "nodeType": "RevertStatement",
                        "src": "3707:26:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 644,
                        "name": "_registrations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "3753:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 646,
                      "indexExpression": {
                        "id": 645,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "3768:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3753:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 647,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 625,
                      "src": "3782:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3753:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "3753:39:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 651,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "3827:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3839:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 650,
                      "name": "RegistrationUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2133,
                      "src": "3807:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3807:37:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 654,
                  "nodeType": "EmitStatement",
                  "src": "3802:42:17"
                }
              ]
            },
            "documentation": {
              "id": 623,
              "nodeType": "StructuredDocumentation",
              "src": "3435:119:17",
              "text": " @notice Registers an address with the registry. May be called by address itself or by EIP-173 owner."
            },
            "functionSelector": "4420e486",
            "id": 656,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 628,
                    "name": "registrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 625,
                    "src": "3625:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 629,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 627,
                  "name": "onlyAddressOrOwner",
                  "nameLocations": [
                    "3606:18:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "3606:18:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3606:30:17"
              }
            ],
            "name": "register",
            "nameLocation": "3568:8:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 625,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "3585:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 656,
                  "src": "3577:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3577:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3576:20:17"
            },
            "returnParameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3637:0:17"
            },
            "scope": 2067,
            "src": "3559:292:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              282
            ],
            "body": {
              "id": 715,
              "nodeType": "Block",
              "src": "4323:448:17",
              "statements": [
                {
                  "assignments": [
                    666
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 666,
                      "mutability": "mutable",
                      "name": "registration",
                      "nameLocation": "4341:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 715,
                      "src": "4333:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 665,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4333:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 670,
                  "initialValue": {
                    "baseExpression": {
                      "id": 667,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "4356:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 669,
                    "indexExpression": {
                      "id": 668,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 659,
                      "src": "4371:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4356:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4333:49:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 671,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 666,
                      "src": "4396:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4420:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4412:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 672,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4412:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4412:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4396:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 682,
                  "nodeType": "IfStatement",
                  "src": "4392:89:17",
                  "trueBody": {
                    "id": 681,
                    "nodeType": "Block",
                    "src": "4424:57:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 678,
                              "name": "registrant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 659,
                              "src": "4459:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 677,
                            "name": "NotRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2093,
                            "src": "4445:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4445:25:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 680,
                        "nodeType": "RevertStatement",
                        "src": "4438:32:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 683,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 666,
                      "src": "4494:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 684,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 659,
                      "src": "4510:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4494:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 700,
                  "nodeType": "IfStatement",
                  "src": "4490:173:17",
                  "trueBody": {
                    "id": 699,
                    "nodeType": "Block",
                    "src": "4522:141:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 690,
                              "name": "registrant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 659,
                              "src": "4570:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 686,
                                "name": "_subscribers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 489,
                                "src": "4536:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                                }
                              },
                              "id": 688,
                              "indexExpression": {
                                "id": 687,
                                "name": "registration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 666,
                                "src": "4549:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4536:26:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$4195_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 689,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4563:6:17",
                            "memberName": "remove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4249,
                            "src": "4536:33:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$4195_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                            }
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4536:45:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 692,
                        "nodeType": "ExpressionStatement",
                        "src": "4536:45:17"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 694,
                              "name": "registrant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 659,
                              "src": "4620:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 695,
                              "name": "registration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 666,
                              "src": "4632:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4646:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 693,
                            "name": "SubscriptionUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2175,
                            "src": "4600:19:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,bool)"
                            }
                          },
                          "id": 697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4600:52:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 698,
                        "nodeType": "EmitStatement",
                        "src": "4595:57:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 701,
                        "name": "_registrations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "4672:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 703,
                      "indexExpression": {
                        "id": 702,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 659,
                        "src": "4687:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4672:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4709:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4701:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 704,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4701:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4701:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4672:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 709,
                  "nodeType": "ExpressionStatement",
                  "src": "4672:39:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 711,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 659,
                        "src": "4746:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4758:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 710,
                      "name": "RegistrationUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2133,
                      "src": "4726:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4726:38:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 714,
                  "nodeType": "EmitStatement",
                  "src": "4721:43:17"
                }
              ]
            },
            "documentation": {
              "id": 657,
              "nodeType": "StructuredDocumentation",
              "src": "3857:381:17",
              "text": " @notice Unregisters an address with the registry and removes its subscription. May be called by address itself or by EIP-173 owner.\n         Note that this does not remove any filtered addresses or codeHashes.\n         Also note that any subscriptions to this registrant will still be active and follow the existing filtered addresses and codehashes."
            },
            "functionSelector": "2ec2c246",
            "id": 716,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 662,
                    "name": "registrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 659,
                    "src": "4311:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 663,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 661,
                  "name": "onlyAddressOrOwner",
                  "nameLocations": [
                    "4292:18:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "4292:18:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "4292:30:17"
              }
            ],
            "name": "unregister",
            "nameLocation": "4252:10:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 659,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "4271:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "4263:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4263:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4262:20:17"
            },
            "returnParameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4323:0:17"
            },
            "scope": 2067,
            "src": "4243:528:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              270
            ],
            "body": {
              "id": 803,
              "nodeType": "Block",
              "src": "5032:805:17",
              "statements": [
                {
                  "assignments": [
                    728
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 728,
                      "mutability": "mutable",
                      "name": "registration",
                      "nameLocation": "5050:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 803,
                      "src": "5042:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 727,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5042:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 732,
                  "initialValue": {
                    "baseExpression": {
                      "id": 729,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "5065:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 731,
                    "indexExpression": {
                      "id": 730,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 719,
                      "src": "5080:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5065:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5042:49:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 733,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 728,
                      "src": "5105:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5129:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5121:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 734,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5121:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5121:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5105:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 743,
                  "nodeType": "IfStatement",
                  "src": "5101:83:17",
                  "trueBody": {
                    "id": 742,
                    "nodeType": "Block",
                    "src": "5133:51:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 739,
                            "name": "AlreadyRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2095,
                            "src": "5154:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5154:19:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 741,
                        "nodeType": "RevertStatement",
                        "src": "5147:26:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 744,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 719,
                      "src": "5197:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 745,
                      "name": "subscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 721,
                      "src": "5211:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5197:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 751,
                  "nodeType": "IfStatement",
                  "src": "5193:87:17",
                  "trueBody": {
                    "id": 750,
                    "nodeType": "Block",
                    "src": "5225:55:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 747,
                            "name": "CannotSubscribeToSelf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2107,
                            "src": "5246:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5246:23:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 749,
                        "nodeType": "RevertStatement",
                        "src": "5239:30:17"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    753
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 753,
                      "mutability": "mutable",
                      "name": "subscriptionRegistration",
                      "nameLocation": "5297:24:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 803,
                      "src": "5289:32:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 752,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5289:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 757,
                  "initialValue": {
                    "baseExpression": {
                      "id": 754,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "5324:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 756,
                    "indexExpression": {
                      "id": 755,
                      "name": "subscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 721,
                      "src": "5339:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5324:28:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5289:63:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 758,
                      "name": "subscriptionRegistration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 753,
                      "src": "5366:24:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5402:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5394:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 759,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5394:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5394:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5366:38:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 769,
                  "nodeType": "IfStatement",
                  "src": "5362:103:17",
                  "trueBody": {
                    "id": 768,
                    "nodeType": "Block",
                    "src": "5406:59:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 765,
                              "name": "subscription",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 721,
                              "src": "5441:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 764,
                            "name": "NotRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2093,
                            "src": "5427:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5427:27:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 767,
                        "nodeType": "RevertStatement",
                        "src": "5420:34:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 770,
                      "name": "subscriptionRegistration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 753,
                      "src": "5478:24:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 771,
                      "name": "subscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 721,
                      "src": "5506:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5478:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 778,
                  "nodeType": "IfStatement",
                  "src": "5474:135:17",
                  "trueBody": {
                    "id": 777,
                    "nodeType": "Block",
                    "src": "5520:89:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 774,
                              "name": "subscription",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 721,
                              "src": "5585:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 773,
                            "name": "CannotSubscribeToRegistrantWithSubscription",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2125,
                            "src": "5541:43:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5541:57:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 776,
                        "nodeType": "RevertStatement",
                        "src": "5534:64:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 779,
                        "name": "_registrations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "5619:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 781,
                      "indexExpression": {
                        "id": 780,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "5634:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5619:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 782,
                      "name": "subscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 721,
                      "src": "5648:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5619:41:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 784,
                  "nodeType": "ExpressionStatement",
                  "src": "5619:41:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 789,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "5701:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 785,
                          "name": "_subscribers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 489,
                          "src": "5670:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                          }
                        },
                        "id": 787,
                        "indexExpression": {
                          "id": 786,
                          "name": "subscription",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 721,
                          "src": "5683:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5670:26:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$4195_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 788,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5697:3:17",
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4222,
                      "src": "5670:30:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$4195_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5670:42:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 791,
                  "nodeType": "ExpressionStatement",
                  "src": "5670:42:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 793,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "5747:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5759:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 792,
                      "name": "RegistrationUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2133,
                      "src": "5727:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5727:37:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 796,
                  "nodeType": "EmitStatement",
                  "src": "5722:42:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 798,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "5799:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 799,
                        "name": "subscription",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "5811:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5825:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 797,
                      "name": "SubscriptionUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2175,
                      "src": "5779:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5779:51:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 802,
                  "nodeType": "EmitStatement",
                  "src": "5774:56:17"
                }
              ]
            },
            "documentation": {
              "id": 717,
              "nodeType": "StructuredDocumentation",
              "src": "4777:138:17",
              "text": " @notice Registers an address with the registry and \"subscribes\" to another address's filtered operators and codeHashes."
            },
            "functionSelector": "7d3e3dbe",
            "id": 804,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 724,
                    "name": "registrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 719,
                    "src": "5020:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 725,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 723,
                  "name": "onlyAddressOrOwner",
                  "nameLocations": [
                    "5001:18:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "5001:18:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "5001:30:17"
              }
            ],
            "name": "registerAndSubscribe",
            "nameLocation": "4929:20:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 719,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "4958:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 804,
                  "src": "4950:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4950:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 721,
                  "mutability": "mutable",
                  "name": "subscription",
                  "nameLocation": "4978:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 804,
                  "src": "4970:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4970:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4949:42:17"
            },
            "returnParameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5032:0:17"
            },
            "scope": 2067,
            "src": "4920:917:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              277
            ],
            "body": {
              "id": 874,
              "nodeType": "Block",
              "src": "6157:597:17",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 815,
                      "name": "registrantToCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 809,
                      "src": "6171:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 816,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 807,
                      "src": "6191:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6171:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 822,
                  "nodeType": "IfStatement",
                  "src": "6167:88:17",
                  "trueBody": {
                    "id": 821,
                    "nodeType": "Block",
                    "src": "6203:52:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 818,
                            "name": "CannotCopyFromSelf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2127,
                            "src": "6224:18:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6224:20:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 820,
                        "nodeType": "RevertStatement",
                        "src": "6217:27:17"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    824
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 824,
                      "mutability": "mutable",
                      "name": "registration",
                      "nameLocation": "6272:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 874,
                      "src": "6264:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 823,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6264:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 828,
                  "initialValue": {
                    "baseExpression": {
                      "id": 825,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "6287:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 827,
                    "indexExpression": {
                      "id": 826,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 807,
                      "src": "6302:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6287:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6264:49:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 829,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 824,
                      "src": "6327:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6351:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6343:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 830,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6343:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6343:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6327:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 839,
                  "nodeType": "IfStatement",
                  "src": "6323:83:17",
                  "trueBody": {
                    "id": 838,
                    "nodeType": "Block",
                    "src": "6355:51:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 835,
                            "name": "AlreadyRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2095,
                            "src": "6376:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6376:19:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 837,
                        "nodeType": "RevertStatement",
                        "src": "6369:26:17"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    841
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 841,
                      "mutability": "mutable",
                      "name": "registrantRegistration",
                      "nameLocation": "6423:22:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 874,
                      "src": "6415:30:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 840,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6415:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 845,
                  "initialValue": {
                    "baseExpression": {
                      "id": 842,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "6448:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 844,
                    "indexExpression": {
                      "id": 843,
                      "name": "registrantToCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 809,
                      "src": "6463:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6448:32:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6415:65:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 846,
                      "name": "registrantRegistration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 841,
                      "src": "6494:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6528:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6520:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 847,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6520:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6520:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6494:36:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 857,
                  "nodeType": "IfStatement",
                  "src": "6490:105:17",
                  "trueBody": {
                    "id": 856,
                    "nodeType": "Block",
                    "src": "6532:63:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 853,
                              "name": "registrantToCopy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 809,
                              "src": "6567:16:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 852,
                            "name": "NotRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2093,
                            "src": "6553:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6553:31:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 855,
                        "nodeType": "RevertStatement",
                        "src": "6546:38:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 858,
                        "name": "_registrations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "6604:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 860,
                      "indexExpression": {
                        "id": 859,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "6619:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6604:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 861,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 807,
                      "src": "6633:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6604:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "6604:39:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 865,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "6678:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6690:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 864,
                      "name": "RegistrationUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2133,
                      "src": "6658:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6658:37:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 868,
                  "nodeType": "EmitStatement",
                  "src": "6653:42:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 870,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "6718:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 871,
                        "name": "registrantToCopy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 809,
                        "src": "6730:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 869,
                      "name": "_copyEntries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1712,
                      "src": "6705:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6705:42:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 873,
                  "nodeType": "ExpressionStatement",
                  "src": "6705:42:17"
                }
              ]
            },
            "documentation": {
              "id": 805,
              "nodeType": "StructuredDocumentation",
              "src": "5843:171:17",
              "text": " @notice Registers an address with the registry and copies the filtered operators and codeHashes from another\n         address without subscribing."
            },
            "functionSelector": "a0af2903",
            "id": 875,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 812,
                    "name": "registrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 807,
                    "src": "6141:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 813,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 811,
                  "name": "onlyAddressOrOwner",
                  "nameLocations": [
                    "6122:18:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "6122:18:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "6122:30:17"
              }
            ],
            "name": "registerAndCopyEntries",
            "nameLocation": "6028:22:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 807,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "6059:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "6051:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6051:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 809,
                  "mutability": "mutable",
                  "name": "registrantToCopy",
                  "nameLocation": "6079:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "6071:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6071:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6050:46:17"
            },
            "returnParameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6157:0:17"
            },
            "scope": 2067,
            "src": "6019:735:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              291
            ],
            "body": {
              "id": 965,
              "nodeType": "Block",
              "src": "7031:808:17",
              "statements": [
                {
                  "assignments": [
                    889
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 889,
                      "mutability": "mutable",
                      "name": "registration",
                      "nameLocation": "7049:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 965,
                      "src": "7041:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 888,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7041:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 893,
                  "initialValue": {
                    "baseExpression": {
                      "id": 890,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "7064:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 892,
                    "indexExpression": {
                      "id": 891,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 878,
                      "src": "7079:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7064:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7041:49:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 894,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 889,
                      "src": "7104:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7128:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7120:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 895,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7120:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7120:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7104:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 905,
                  "nodeType": "IfStatement",
                  "src": "7100:89:17",
                  "trueBody": {
                    "id": 904,
                    "nodeType": "Block",
                    "src": "7132:57:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 901,
                              "name": "registrant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 878,
                              "src": "7167:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 900,
                            "name": "NotRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2093,
                            "src": "7153:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7153:25:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 903,
                        "nodeType": "RevertStatement",
                        "src": "7146:32:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 906,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 889,
                      "src": "7202:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 907,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 878,
                      "src": "7218:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7202:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 914,
                  "nodeType": "IfStatement",
                  "src": "7198:105:17",
                  "trueBody": {
                    "id": 913,
                    "nodeType": "Block",
                    "src": "7230:73:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 910,
                              "name": "registration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 889,
                              "src": "7279:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 909,
                            "name": "CannotUpdateWhileSubscribed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2105,
                            "src": "7251:27:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7251:41:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 912,
                        "nodeType": "RevertStatement",
                        "src": "7244:48:17"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    919
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 919,
                      "mutability": "mutable",
                      "name": "filteredOperatorsRef",
                      "nameLocation": "7345:20:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 965,
                      "src": "7312:53:17",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AddressSet_$4195_storage_ptr",
                        "typeString": "struct EnumerableSet.AddressSet"
                      },
                      "typeName": {
                        "id": 918,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 917,
                          "name": "EnumerableSet.AddressSet",
                          "nameLocations": [
                            "7312:13:17",
                            "7326:10:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4195,
                          "src": "7312:24:17"
                        },
                        "referencedDeclaration": 4195,
                        "src": "7312:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$4195_storage_ptr",
                          "typeString": "struct EnumerableSet.AddressSet"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 923,
                  "initialValue": {
                    "baseExpression": {
                      "id": 920,
                      "name": "_filteredOperators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "7368:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
                        "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                      }
                    },
                    "id": 922,
                    "indexExpression": {
                      "id": 921,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 878,
                      "src": "7387:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7368:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AddressSet_$4195_storage",
                      "typeString": "struct EnumerableSet.AddressSet storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7312:86:17"
                },
                {
                  "condition": {
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7413:9:17",
                    "subExpression": {
                      "id": 924,
                      "name": "filtered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 882,
                      "src": "7414:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 957,
                    "nodeType": "Block",
                    "src": "7602:169:17",
                    "statements": [
                      {
                        "assignments": [
                          943
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 943,
                            "mutability": "mutable",
                            "name": "added",
                            "nameLocation": "7621:5:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 957,
                            "src": "7616:10:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 942,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "7616:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 948,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 946,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 880,
                              "src": "7654:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 944,
                              "name": "filteredOperatorsRef",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "7629:20:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$4195_storage_ptr",
                                "typeString": "struct EnumerableSet.AddressSet storage pointer"
                              }
                            },
                            "id": 945,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7650:3:17",
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4222,
                            "src": "7629:24:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$4195_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                            }
                          },
                          "id": 947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7629:34:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7616:47:17"
                      },
                      {
                        "condition": {
                          "id": 950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "7681:6:17",
                          "subExpression": {
                            "id": 949,
                            "name": "added",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 943,
                            "src": "7682:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 956,
                        "nodeType": "IfStatement",
                        "src": "7677:84:17",
                        "trueBody": {
                          "id": 955,
                          "nodeType": "Block",
                          "src": "7689:72:17",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 952,
                                    "name": "operator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 880,
                                    "src": "7737:8:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 951,
                                  "name": "AddressAlreadyFiltered",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2075,
                                  "src": "7714:22:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 953,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7714:32:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 954,
                              "nodeType": "RevertStatement",
                              "src": "7707:39:17"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 958,
                  "nodeType": "IfStatement",
                  "src": "7409:362:17",
                  "trueBody": {
                    "id": 941,
                    "nodeType": "Block",
                    "src": "7424:172:17",
                    "statements": [
                      {
                        "assignments": [
                          927
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 927,
                            "mutability": "mutable",
                            "name": "removed",
                            "nameLocation": "7443:7:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 941,
                            "src": "7438:12:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 926,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "7438:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 932,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 930,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 880,
                              "src": "7481:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 928,
                              "name": "filteredOperatorsRef",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "7453:20:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$4195_storage_ptr",
                                "typeString": "struct EnumerableSet.AddressSet storage pointer"
                              }
                            },
                            "id": 929,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7474:6:17",
                            "memberName": "remove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4249,
                            "src": "7453:27:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$4195_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                            }
                          },
                          "id": 931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7453:37:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7438:52:17"
                      },
                      {
                        "condition": {
                          "id": 934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "7508:8:17",
                          "subExpression": {
                            "id": 933,
                            "name": "removed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 927,
                            "src": "7509:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 940,
                        "nodeType": "IfStatement",
                        "src": "7504:82:17",
                        "trueBody": {
                          "id": 939,
                          "nodeType": "Block",
                          "src": "7518:68:17",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 936,
                                    "name": "operator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 880,
                                    "src": "7562:8:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 935,
                                  "name": "AddressNotFiltered",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2079,
                                  "src": "7543:18:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 937,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7543:28:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 938,
                              "nodeType": "RevertStatement",
                              "src": "7536:35:17"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 960,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "7801:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 961,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 880,
                        "src": "7813:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 962,
                        "name": "filtered",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 882,
                        "src": "7823:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 959,
                      "name": "OperatorUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2141,
                      "src": "7785:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7785:47:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 964,
                  "nodeType": "EmitStatement",
                  "src": "7780:52:17"
                }
              ]
            },
            "documentation": {
              "id": 876,
              "nodeType": "StructuredDocumentation",
              "src": "6760:129:17",
              "text": " @notice Update an operator address for a registered address - when filtered is true, the operator is filtered."
            },
            "functionSelector": "a2f367ab",
            "id": 966,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 885,
                    "name": "registrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 878,
                    "src": "7015:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 886,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 884,
                  "name": "onlyAddressOrOwner",
                  "nameLocations": [
                    "6996:18:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "6996:18:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "6996:30:17"
              }
            ],
            "name": "updateOperator",
            "nameLocation": "6903:14:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 878,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "6926:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "6918:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 877,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6918:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 880,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6946:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "6938:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 879,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6938:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 882,
                  "mutability": "mutable",
                  "name": "filtered",
                  "nameLocation": "6961:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "6956:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6956:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6917:53:17"
            },
            "returnParameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7031:0:17"
            },
            "scope": 2067,
            "src": "6894:945:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              310
            ],
            "body": {
              "id": 1064,
              "nodeType": "Block",
              "src": "8107:903:17",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 979,
                      "name": "codeHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 971,
                      "src": "8121:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 980,
                      "name": "EOA_CODEHASH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 470,
                      "src": "8133:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "8121:24:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 986,
                  "nodeType": "IfStatement",
                  "src": "8117:80:17",
                  "trueBody": {
                    "id": 985,
                    "nodeType": "Block",
                    "src": "8147:50:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 982,
                            "name": "CannotFilterEOAs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2071,
                            "src": "8168:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8168:18:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 984,
                        "nodeType": "RevertStatement",
                        "src": "8161:25:17"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    988
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 988,
                      "mutability": "mutable",
                      "name": "registration",
                      "nameLocation": "8214:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1064,
                      "src": "8206:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 987,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8206:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 992,
                  "initialValue": {
                    "baseExpression": {
                      "id": 989,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "8229:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 991,
                    "indexExpression": {
                      "id": 990,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "8244:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8229:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8206:49:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 993,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 988,
                      "src": "8269:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8293:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8285:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 994,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8285:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8285:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8269:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1004,
                  "nodeType": "IfStatement",
                  "src": "8265:89:17",
                  "trueBody": {
                    "id": 1003,
                    "nodeType": "Block",
                    "src": "8297:57:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 1000,
                              "name": "registrant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 969,
                              "src": "8332:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 999,
                            "name": "NotRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2093,
                            "src": "8318:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 1001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8318:25:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1002,
                        "nodeType": "RevertStatement",
                        "src": "8311:32:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1005,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 988,
                      "src": "8367:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1006,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "8383:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8367:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1013,
                  "nodeType": "IfStatement",
                  "src": "8363:105:17",
                  "trueBody": {
                    "id": 1012,
                    "nodeType": "Block",
                    "src": "8395:73:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 1009,
                              "name": "registration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 988,
                              "src": "8444:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1008,
                            "name": "CannotUpdateWhileSubscribed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2105,
                            "src": "8416:27:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 1010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8416:41:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1011,
                        "nodeType": "RevertStatement",
                        "src": "8409:48:17"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1018
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1018,
                      "mutability": "mutable",
                      "name": "filteredCodeHashesRef",
                      "nameLocation": "8510:21:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1064,
                      "src": "8477:54:17",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage_ptr",
                        "typeString": "struct EnumerableSet.Bytes32Set"
                      },
                      "typeName": {
                        "id": 1017,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1016,
                          "name": "EnumerableSet.Bytes32Set",
                          "nameLocations": [
                            "8477:13:17",
                            "8491:10:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4074,
                          "src": "8477:24:17"
                        },
                        "referencedDeclaration": 4074,
                        "src": "8477:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage_ptr",
                          "typeString": "struct EnumerableSet.Bytes32Set"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1022,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1019,
                      "name": "_filteredCodeHashes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "8534:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bytes32Set_$4074_storage_$",
                        "typeString": "mapping(address => struct EnumerableSet.Bytes32Set storage ref)"
                      }
                    },
                    "id": 1021,
                    "indexExpression": {
                      "id": 1020,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "8554:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8534:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage",
                      "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8477:88:17"
                },
                {
                  "condition": {
                    "id": 1024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "8580:9:17",
                    "subExpression": {
                      "id": 1023,
                      "name": "filtered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "8581:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1056,
                    "nodeType": "Block",
                    "src": "8771:171:17",
                    "statements": [
                      {
                        "assignments": [
                          1042
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1042,
                            "mutability": "mutable",
                            "name": "added",
                            "nameLocation": "8790:5:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 1056,
                            "src": "8785:10:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1041,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "8785:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1047,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1045,
                              "name": "codeHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "8824:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 1043,
                              "name": "filteredCodeHashesRef",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1018,
                              "src": "8798:21:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage_ptr",
                                "typeString": "struct EnumerableSet.Bytes32Set storage pointer"
                              }
                            },
                            "id": 1044,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8820:3:17",
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4092,
                            "src": "8798:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$4074_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$4074_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
                            }
                          },
                          "id": 1046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8798:35:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8785:48:17"
                      },
                      {
                        "condition": {
                          "id": 1049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "8851:6:17",
                          "subExpression": {
                            "id": 1048,
                            "name": "added",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1042,
                            "src": "8852:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1055,
                        "nodeType": "IfStatement",
                        "src": "8847:85:17",
                        "trueBody": {
                          "id": 1054,
                          "nodeType": "Block",
                          "src": "8859:73:17",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 1051,
                                    "name": "codeHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 971,
                                    "src": "8908:8:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 1050,
                                  "name": "CodeHashAlreadyFiltered",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2083,
                                  "src": "8884:23:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32) pure"
                                  }
                                },
                                "id": 1052,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8884:33:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1053,
                              "nodeType": "RevertStatement",
                              "src": "8877:40:17"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1057,
                  "nodeType": "IfStatement",
                  "src": "8576:366:17",
                  "trueBody": {
                    "id": 1040,
                    "nodeType": "Block",
                    "src": "8591:174:17",
                    "statements": [
                      {
                        "assignments": [
                          1026
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1026,
                            "mutability": "mutable",
                            "name": "removed",
                            "nameLocation": "8610:7:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 1040,
                            "src": "8605:12:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1025,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "8605:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1031,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1029,
                              "name": "codeHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "8649:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 1027,
                              "name": "filteredCodeHashesRef",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1018,
                              "src": "8620:21:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage_ptr",
                                "typeString": "struct EnumerableSet.Bytes32Set storage pointer"
                              }
                            },
                            "id": 1028,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8642:6:17",
                            "memberName": "remove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4110,
                            "src": "8620:28:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$4074_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$4074_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
                            }
                          },
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8620:38:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8605:53:17"
                      },
                      {
                        "condition": {
                          "id": 1033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "8676:8:17",
                          "subExpression": {
                            "id": 1032,
                            "name": "removed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "8677:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1039,
                        "nodeType": "IfStatement",
                        "src": "8672:83:17",
                        "trueBody": {
                          "id": 1038,
                          "nodeType": "Block",
                          "src": "8686:69:17",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 1035,
                                    "name": "codeHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 971,
                                    "src": "8731:8:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 1034,
                                  "name": "CodeHashNotFiltered",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2087,
                                  "src": "8711:19:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32) pure"
                                  }
                                },
                                "id": 1036,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8711:29:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1037,
                              "nodeType": "RevertStatement",
                              "src": "8704:36:17"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1059,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 969,
                        "src": "8972:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1060,
                        "name": "codeHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "8984:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1061,
                        "name": "filtered",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 973,
                        "src": "8994:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1058,
                      "name": "CodeHashUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2158,
                      "src": "8956:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes32,bool)"
                      }
                    },
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8956:47:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1063,
                  "nodeType": "EmitStatement",
                  "src": "8951:52:17"
                }
              ]
            },
            "documentation": {
              "id": 967,
              "nodeType": "StructuredDocumentation",
              "src": "7845:120:17",
              "text": " @notice Update a codeHash for a registered address - when filtered is true, the codeHash is filtered."
            },
            "functionSelector": "712fc00b",
            "id": 1065,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 976,
                    "name": "registrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 969,
                    "src": "8091:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 977,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 975,
                  "name": "onlyAddressOrOwner",
                  "nameLocations": [
                    "8072:18:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "8072:18:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "8072:30:17"
              }
            ],
            "name": "updateCodeHash",
            "nameLocation": "7979:14:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 969,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "8002:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1065,
                  "src": "7994:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7994:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 971,
                  "mutability": "mutable",
                  "name": "codeHash",
                  "nameLocation": "8022:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1065,
                  "src": "8014:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8014:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 973,
                  "mutability": "mutable",
                  "name": "filtered",
                  "nameLocation": "8037:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1065,
                  "src": "8032:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 972,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8032:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7993:53:17"
            },
            "returnParameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8107:0:17"
            },
            "scope": 2067,
            "src": "7970:1040:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              301
            ],
            "body": {
              "id": 1198,
              "nodeType": "Block",
              "src": "9328:1237:17",
              "statements": [
                {
                  "assignments": [
                    1080
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1080,
                      "mutability": "mutable",
                      "name": "registration",
                      "nameLocation": "9346:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1198,
                      "src": "9338:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1079,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9338:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1084,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1081,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "9361:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 1083,
                    "indexExpression": {
                      "id": 1082,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1068,
                      "src": "9376:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9361:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9338:49:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1085,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1080,
                      "src": "9401:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9425:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9417:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1086,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9417:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9417:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9401:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1096,
                  "nodeType": "IfStatement",
                  "src": "9397:89:17",
                  "trueBody": {
                    "id": 1095,
                    "nodeType": "Block",
                    "src": "9429:57:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 1092,
                              "name": "registrant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1068,
                              "src": "9464:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1091,
                            "name": "NotRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2093,
                            "src": "9450:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 1093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9450:25:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1094,
                        "nodeType": "RevertStatement",
                        "src": "9443:32:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1097,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1080,
                      "src": "9499:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1098,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1068,
                      "src": "9515:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9499:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1105,
                  "nodeType": "IfStatement",
                  "src": "9495:105:17",
                  "trueBody": {
                    "id": 1104,
                    "nodeType": "Block",
                    "src": "9527:73:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 1101,
                              "name": "registration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1080,
                              "src": "9576:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1100,
                            "name": "CannotUpdateWhileSubscribed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2105,
                            "src": "9548:27:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 1102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9548:41:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1103,
                        "nodeType": "RevertStatement",
                        "src": "9541:48:17"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1110
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1110,
                      "mutability": "mutable",
                      "name": "filteredOperatorsRef",
                      "nameLocation": "9642:20:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1198,
                      "src": "9609:53:17",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AddressSet_$4195_storage_ptr",
                        "typeString": "struct EnumerableSet.AddressSet"
                      },
                      "typeName": {
                        "id": 1109,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1108,
                          "name": "EnumerableSet.AddressSet",
                          "nameLocations": [
                            "9609:13:17",
                            "9623:10:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4195,
                          "src": "9609:24:17"
                        },
                        "referencedDeclaration": 4195,
                        "src": "9609:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$4195_storage_ptr",
                          "typeString": "struct EnumerableSet.AddressSet"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1114,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1111,
                      "name": "_filteredOperators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "9665:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
                        "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                      }
                    },
                    "id": 1113,
                    "indexExpression": {
                      "id": 1112,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1068,
                      "src": "9684:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9665:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AddressSet_$4195_storage",
                      "typeString": "struct EnumerableSet.AddressSet storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9609:86:17"
                },
                {
                  "assignments": [
                    1116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1116,
                      "mutability": "mutable",
                      "name": "operatorsLength",
                      "nameLocation": "9713:15:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1198,
                      "src": "9705:23:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1115,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9705:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1119,
                  "initialValue": {
                    "expression": {
                      "id": 1117,
                      "name": "operators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1071,
                      "src": "9731:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "id": 1118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "9741:6:17",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "9731:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9705:42:17"
                },
                {
                  "id": 1191,
                  "nodeType": "UncheckedBlock",
                  "src": "9757:738:17",
                  "statements": [
                    {
                      "condition": {
                        "id": 1121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9785:9:17",
                        "subExpression": {
                          "id": 1120,
                          "name": "filtered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1073,
                          "src": "9786:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1189,
                        "nodeType": "Block",
                        "src": "10145:340:17",
                        "statements": [
                          {
                            "body": {
                              "id": 1187,
                              "nodeType": "Block",
                              "src": "10209:262:17",
                              "statements": [
                                {
                                  "assignments": [
                                    1167
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 1167,
                                      "mutability": "mutable",
                                      "name": "operator",
                                      "nameLocation": "10239:8:17",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 1187,
                                      "src": "10231:16:17",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "typeName": {
                                        "id": 1166,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10231:7:17",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 1171,
                                  "initialValue": {
                                    "baseExpression": {
                                      "id": 1168,
                                      "name": "operators",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1071,
                                      "src": "10250:9:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 1170,
                                    "indexExpression": {
                                      "id": 1169,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1157,
                                      "src": "10260:1:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10250:12:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "10231:31:17"
                                },
                                {
                                  "assignments": [
                                    1173
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 1173,
                                      "mutability": "mutable",
                                      "name": "added",
                                      "nameLocation": "10289:5:17",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 1187,
                                      "src": "10284:10:17",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "typeName": {
                                        "id": 1172,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10284:4:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 1178,
                                  "initialValue": {
                                    "arguments": [
                                      {
                                        "id": 1176,
                                        "name": "operator",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1167,
                                        "src": "10322:8:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1174,
                                        "name": "filteredOperatorsRef",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1110,
                                        "src": "10297:20:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_AddressSet_$4195_storage_ptr",
                                          "typeString": "struct EnumerableSet.AddressSet storage pointer"
                                        }
                                      },
                                      "id": 1175,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "10318:3:17",
                                      "memberName": "add",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4222,
                                      "src": "10297:24:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$4195_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                                      }
                                    },
                                    "id": 1177,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10297:34:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "10284:47:17"
                                },
                                {
                                  "condition": {
                                    "id": 1180,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "!",
                                    "prefix": true,
                                    "src": "10357:6:17",
                                    "subExpression": {
                                      "id": 1179,
                                      "name": "added",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1173,
                                      "src": "10358:5:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 1186,
                                  "nodeType": "IfStatement",
                                  "src": "10353:100:17",
                                  "trueBody": {
                                    "id": 1185,
                                    "nodeType": "Block",
                                    "src": "10365:88:17",
                                    "statements": [
                                      {
                                        "errorCall": {
                                          "arguments": [
                                            {
                                              "id": 1182,
                                              "name": "operator",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1167,
                                              "src": "10421:8:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 1181,
                                            "name": "AddressAlreadyFiltered",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2075,
                                            "src": "10398:22:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                              "typeString": "function (address) pure"
                                            }
                                          },
                                          "id": 1183,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "10398:32:17",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 1184,
                                        "nodeType": "RevertStatement",
                                        "src": "10391:39:17"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1160,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1157,
                                "src": "10183:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1161,
                                "name": "operatorsLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1116,
                                "src": "10187:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10183:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1188,
                            "initializationExpression": {
                              "assignments": [
                                1157
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1157,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "10176:1:17",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1188,
                                  "src": "10168:9:17",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1156,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10168:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1159,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 1158,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10180:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10168:13:17"
                            },
                            "loopExpression": {
                              "expression": {
                                "id": 1164,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": true,
                                "src": "10204:3:17",
                                "subExpression": {
                                  "id": 1163,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1157,
                                  "src": "10206:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1165,
                              "nodeType": "ExpressionStatement",
                              "src": "10204:3:17"
                            },
                            "nodeType": "ForStatement",
                            "src": "10163:308:17"
                          }
                        ]
                      },
                      "id": 1190,
                      "nodeType": "IfStatement",
                      "src": "9781:704:17",
                      "trueBody": {
                        "id": 1155,
                        "nodeType": "Block",
                        "src": "9796:343:17",
                        "statements": [
                          {
                            "body": {
                              "id": 1153,
                              "nodeType": "Block",
                              "src": "9860:265:17",
                              "statements": [
                                {
                                  "assignments": [
                                    1133
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 1133,
                                      "mutability": "mutable",
                                      "name": "operator",
                                      "nameLocation": "9890:8:17",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 1153,
                                      "src": "9882:16:17",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "typeName": {
                                        "id": 1132,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9882:7:17",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 1137,
                                  "initialValue": {
                                    "baseExpression": {
                                      "id": 1134,
                                      "name": "operators",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1071,
                                      "src": "9901:9:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 1136,
                                    "indexExpression": {
                                      "id": 1135,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1123,
                                      "src": "9911:1:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9901:12:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "9882:31:17"
                                },
                                {
                                  "assignments": [
                                    1139
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 1139,
                                      "mutability": "mutable",
                                      "name": "removed",
                                      "nameLocation": "9940:7:17",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 1153,
                                      "src": "9935:12:17",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "typeName": {
                                        "id": 1138,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9935:4:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 1144,
                                  "initialValue": {
                                    "arguments": [
                                      {
                                        "id": 1142,
                                        "name": "operator",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1133,
                                        "src": "9978:8:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1140,
                                        "name": "filteredOperatorsRef",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1110,
                                        "src": "9950:20:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_AddressSet_$4195_storage_ptr",
                                          "typeString": "struct EnumerableSet.AddressSet storage pointer"
                                        }
                                      },
                                      "id": 1141,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9971:6:17",
                                      "memberName": "remove",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4249,
                                      "src": "9950:27:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$4195_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                                      }
                                    },
                                    "id": 1143,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9950:37:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "9935:52:17"
                                },
                                {
                                  "condition": {
                                    "id": 1146,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "!",
                                    "prefix": true,
                                    "src": "10013:8:17",
                                    "subExpression": {
                                      "id": 1145,
                                      "name": "removed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1139,
                                      "src": "10014:7:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 1152,
                                  "nodeType": "IfStatement",
                                  "src": "10009:98:17",
                                  "trueBody": {
                                    "id": 1151,
                                    "nodeType": "Block",
                                    "src": "10023:84:17",
                                    "statements": [
                                      {
                                        "errorCall": {
                                          "arguments": [
                                            {
                                              "id": 1148,
                                              "name": "operator",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1133,
                                              "src": "10075:8:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 1147,
                                            "name": "AddressNotFiltered",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2079,
                                            "src": "10056:18:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                              "typeString": "function (address) pure"
                                            }
                                          },
                                          "id": 1149,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "10056:28:17",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 1150,
                                        "nodeType": "RevertStatement",
                                        "src": "10049:35:17"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1126,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1123,
                                "src": "9834:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1127,
                                "name": "operatorsLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1116,
                                "src": "9838:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9834:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1154,
                            "initializationExpression": {
                              "assignments": [
                                1123
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1123,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "9827:1:17",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1154,
                                  "src": "9819:9:17",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1122,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9819:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1125,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 1124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9831:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9819:13:17"
                            },
                            "loopExpression": {
                              "expression": {
                                "id": 1130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": true,
                                "src": "9855:3:17",
                                "subExpression": {
                                  "id": 1129,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1123,
                                  "src": "9857:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1131,
                              "nodeType": "ExpressionStatement",
                              "src": "9855:3:17"
                            },
                            "nodeType": "ForStatement",
                            "src": "9814:311:17"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1193,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1068,
                        "src": "10526:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1194,
                        "name": "operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "10538:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 1195,
                        "name": "filtered",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "10549:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1192,
                      "name": "OperatorsUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2150,
                      "src": "10509:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address[] memory,bool)"
                      }
                    },
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10509:49:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1197,
                  "nodeType": "EmitStatement",
                  "src": "10504:54:17"
                }
              ]
            },
            "documentation": {
              "id": 1066,
              "nodeType": "StructuredDocumentation",
              "src": "9016:157:17",
              "text": " @notice Update multiple operators for a registered address - when filtered is true, the operators will be filtered. Reverts on duplicates."
            },
            "functionSelector": "a14584c1",
            "id": 1199,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1076,
                    "name": "registrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1068,
                    "src": "9312:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1077,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1075,
                  "name": "onlyAddressOrOwner",
                  "nameLocations": [
                    "9293:18:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "9293:18:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "9293:30:17"
              }
            ],
            "name": "updateOperators",
            "nameLocation": "9187:15:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1068,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "9211:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1199,
                  "src": "9203:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9203:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1071,
                  "mutability": "mutable",
                  "name": "operators",
                  "nameLocation": "9242:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1199,
                  "src": "9223:28:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1069,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9223:7:17",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1070,
                    "nodeType": "ArrayTypeName",
                    "src": "9223:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1073,
                  "mutability": "mutable",
                  "name": "filtered",
                  "nameLocation": "9258:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1199,
                  "src": "9253:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1072,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9253:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9202:65:17"
            },
            "returnParameters": {
              "id": 1078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9328:0:17"
            },
            "scope": 2067,
            "src": "9178:1387:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              320
            ],
            "body": {
              "id": 1340,
              "nodeType": "Block",
              "src": "10887:1376:17",
              "statements": [
                {
                  "assignments": [
                    1214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1214,
                      "mutability": "mutable",
                      "name": "registration",
                      "nameLocation": "10905:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1340,
                      "src": "10897:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1213,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10897:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1218,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1215,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "10920:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 1217,
                    "indexExpression": {
                      "id": 1216,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1202,
                      "src": "10935:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10920:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10897:49:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1219,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1214,
                      "src": "10960:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10984:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10976:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1220,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10976:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10976:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10960:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1230,
                  "nodeType": "IfStatement",
                  "src": "10956:89:17",
                  "trueBody": {
                    "id": 1229,
                    "nodeType": "Block",
                    "src": "10988:57:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 1226,
                              "name": "registrant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1202,
                              "src": "11023:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1225,
                            "name": "NotRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2093,
                            "src": "11009:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 1227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11009:25:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1228,
                        "nodeType": "RevertStatement",
                        "src": "11002:32:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1231,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1214,
                      "src": "11058:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1232,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1202,
                      "src": "11074:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11058:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1239,
                  "nodeType": "IfStatement",
                  "src": "11054:105:17",
                  "trueBody": {
                    "id": 1238,
                    "nodeType": "Block",
                    "src": "11086:73:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 1235,
                              "name": "registration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1214,
                              "src": "11135:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1234,
                            "name": "CannotUpdateWhileSubscribed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2105,
                            "src": "11107:27:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 1236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11107:41:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1237,
                        "nodeType": "RevertStatement",
                        "src": "11100:48:17"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1244
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1244,
                      "mutability": "mutable",
                      "name": "filteredCodeHashesRef",
                      "nameLocation": "11201:21:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1340,
                      "src": "11168:54:17",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage_ptr",
                        "typeString": "struct EnumerableSet.Bytes32Set"
                      },
                      "typeName": {
                        "id": 1243,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1242,
                          "name": "EnumerableSet.Bytes32Set",
                          "nameLocations": [
                            "11168:13:17",
                            "11182:10:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4074,
                          "src": "11168:24:17"
                        },
                        "referencedDeclaration": 4074,
                        "src": "11168:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage_ptr",
                          "typeString": "struct EnumerableSet.Bytes32Set"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1248,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1245,
                      "name": "_filteredCodeHashes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "11225:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bytes32Set_$4074_storage_$",
                        "typeString": "mapping(address => struct EnumerableSet.Bytes32Set storage ref)"
                      }
                    },
                    "id": 1247,
                    "indexExpression": {
                      "id": 1246,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1202,
                      "src": "11245:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11225:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage",
                      "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11168:88:17"
                },
                {
                  "assignments": [
                    1250
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1250,
                      "mutability": "mutable",
                      "name": "codeHashesLength",
                      "nameLocation": "11274:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1340,
                      "src": "11266:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1249,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11266:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1253,
                  "initialValue": {
                    "expression": {
                      "id": 1251,
                      "name": "codeHashes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1205,
                      "src": "11293:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                        "typeString": "bytes32[] calldata"
                      }
                    },
                    "id": 1252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "11304:6:17",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "11293:17:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11266:44:17"
                },
                {
                  "id": 1333,
                  "nodeType": "UncheckedBlock",
                  "src": "11320:871:17",
                  "statements": [
                    {
                      "condition": {
                        "id": 1255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "11348:9:17",
                        "subExpression": {
                          "id": 1254,
                          "name": "filtered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1207,
                          "src": "11349:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1331,
                        "nodeType": "Block",
                        "src": "11712:469:17",
                        "statements": [
                          {
                            "body": {
                              "id": 1329,
                              "nodeType": "Block",
                              "src": "11777:390:17",
                              "statements": [
                                {
                                  "assignments": [
                                    1301
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 1301,
                                      "mutability": "mutable",
                                      "name": "codeHash",
                                      "nameLocation": "11807:8:17",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 1329,
                                      "src": "11799:16:17",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      "typeName": {
                                        "id": 1300,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11799:7:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 1305,
                                  "initialValue": {
                                    "baseExpression": {
                                      "id": 1302,
                                      "name": "codeHashes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1205,
                                      "src": "11818:10:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                        "typeString": "bytes32[] calldata"
                                      }
                                    },
                                    "id": 1304,
                                    "indexExpression": {
                                      "id": 1303,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1291,
                                      "src": "11829:1:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11818:13:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "11799:32:17"
                                },
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    "id": 1308,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1306,
                                      "name": "codeHash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1301,
                                      "src": "11857:8:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 1307,
                                      "name": "EOA_CODEHASH",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 470,
                                      "src": "11869:12:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "src": "11857:24:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 1313,
                                  "nodeType": "IfStatement",
                                  "src": "11853:104:17",
                                  "trueBody": {
                                    "id": 1312,
                                    "nodeType": "Block",
                                    "src": "11883:74:17",
                                    "statements": [
                                      {
                                        "errorCall": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 1309,
                                            "name": "CannotFilterEOAs",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2071,
                                            "src": "11916:16:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                              "typeString": "function () pure"
                                            }
                                          },
                                          "id": 1310,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "11916:18:17",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 1311,
                                        "nodeType": "RevertStatement",
                                        "src": "11909:25:17"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "assignments": [
                                    1315
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 1315,
                                      "mutability": "mutable",
                                      "name": "added",
                                      "nameLocation": "11983:5:17",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 1329,
                                      "src": "11978:10:17",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "typeName": {
                                        "id": 1314,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11978:4:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 1320,
                                  "initialValue": {
                                    "arguments": [
                                      {
                                        "id": 1318,
                                        "name": "codeHash",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1301,
                                        "src": "12017:8:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1316,
                                        "name": "filteredCodeHashesRef",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1244,
                                        "src": "11991:21:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage_ptr",
                                          "typeString": "struct EnumerableSet.Bytes32Set storage pointer"
                                        }
                                      },
                                      "id": 1317,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "12013:3:17",
                                      "memberName": "add",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4092,
                                      "src": "11991:25:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$4074_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$4074_storage_ptr_$",
                                        "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
                                      }
                                    },
                                    "id": 1319,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11991:35:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "11978:48:17"
                                },
                                {
                                  "condition": {
                                    "id": 1322,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "!",
                                    "prefix": true,
                                    "src": "12052:6:17",
                                    "subExpression": {
                                      "id": 1321,
                                      "name": "added",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1315,
                                      "src": "12053:5:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 1328,
                                  "nodeType": "IfStatement",
                                  "src": "12048:101:17",
                                  "trueBody": {
                                    "id": 1327,
                                    "nodeType": "Block",
                                    "src": "12060:89:17",
                                    "statements": [
                                      {
                                        "errorCall": {
                                          "arguments": [
                                            {
                                              "id": 1324,
                                              "name": "codeHash",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1301,
                                              "src": "12117:8:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            ],
                                            "id": 1323,
                                            "name": "CodeHashAlreadyFiltered",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2083,
                                            "src": "12093:23:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                                              "typeString": "function (bytes32) pure"
                                            }
                                          },
                                          "id": 1325,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12093:33:17",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 1326,
                                        "nodeType": "RevertStatement",
                                        "src": "12086:40:17"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1294,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1291,
                                "src": "11750:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1295,
                                "name": "codeHashesLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1250,
                                "src": "11754:16:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11750:20:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1330,
                            "initializationExpression": {
                              "assignments": [
                                1291
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1291,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "11743:1:17",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1330,
                                  "src": "11735:9:17",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1290,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11735:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1293,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 1292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11747:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11735:13:17"
                            },
                            "loopExpression": {
                              "expression": {
                                "id": 1298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": true,
                                "src": "11772:3:17",
                                "subExpression": {
                                  "id": 1297,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1291,
                                  "src": "11774:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1299,
                              "nodeType": "ExpressionStatement",
                              "src": "11772:3:17"
                            },
                            "nodeType": "ForStatement",
                            "src": "11730:437:17"
                          }
                        ]
                      },
                      "id": 1332,
                      "nodeType": "IfStatement",
                      "src": "11344:837:17",
                      "trueBody": {
                        "id": 1289,
                        "nodeType": "Block",
                        "src": "11359:347:17",
                        "statements": [
                          {
                            "body": {
                              "id": 1287,
                              "nodeType": "Block",
                              "src": "11424:268:17",
                              "statements": [
                                {
                                  "assignments": [
                                    1267
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 1267,
                                      "mutability": "mutable",
                                      "name": "codeHash",
                                      "nameLocation": "11454:8:17",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 1287,
                                      "src": "11446:16:17",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      "typeName": {
                                        "id": 1266,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11446:7:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 1271,
                                  "initialValue": {
                                    "baseExpression": {
                                      "id": 1268,
                                      "name": "codeHashes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1205,
                                      "src": "11465:10:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                        "typeString": "bytes32[] calldata"
                                      }
                                    },
                                    "id": 1270,
                                    "indexExpression": {
                                      "id": 1269,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1257,
                                      "src": "11476:1:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11465:13:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "11446:32:17"
                                },
                                {
                                  "assignments": [
                                    1273
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 1273,
                                      "mutability": "mutable",
                                      "name": "removed",
                                      "nameLocation": "11505:7:17",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 1287,
                                      "src": "11500:12:17",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "typeName": {
                                        "id": 1272,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11500:4:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 1278,
                                  "initialValue": {
                                    "arguments": [
                                      {
                                        "id": 1276,
                                        "name": "codeHash",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1267,
                                        "src": "11544:8:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1274,
                                        "name": "filteredCodeHashesRef",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1244,
                                        "src": "11515:21:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage_ptr",
                                          "typeString": "struct EnumerableSet.Bytes32Set storage pointer"
                                        }
                                      },
                                      "id": 1275,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "11537:6:17",
                                      "memberName": "remove",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4110,
                                      "src": "11515:28:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$4074_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$4074_storage_ptr_$",
                                        "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
                                      }
                                    },
                                    "id": 1277,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11515:38:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "11500:53:17"
                                },
                                {
                                  "condition": {
                                    "id": 1280,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "!",
                                    "prefix": true,
                                    "src": "11579:8:17",
                                    "subExpression": {
                                      "id": 1279,
                                      "name": "removed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1273,
                                      "src": "11580:7:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 1286,
                                  "nodeType": "IfStatement",
                                  "src": "11575:99:17",
                                  "trueBody": {
                                    "id": 1285,
                                    "nodeType": "Block",
                                    "src": "11589:85:17",
                                    "statements": [
                                      {
                                        "errorCall": {
                                          "arguments": [
                                            {
                                              "id": 1282,
                                              "name": "codeHash",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1267,
                                              "src": "11642:8:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            ],
                                            "id": 1281,
                                            "name": "CodeHashNotFiltered",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2087,
                                            "src": "11622:19:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                                              "typeString": "function (bytes32) pure"
                                            }
                                          },
                                          "id": 1283,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "11622:29:17",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 1284,
                                        "nodeType": "RevertStatement",
                                        "src": "11615:36:17"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1260,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1257,
                                "src": "11397:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1261,
                                "name": "codeHashesLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1250,
                                "src": "11401:16:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11397:20:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1288,
                            "initializationExpression": {
                              "assignments": [
                                1257
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1257,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "11390:1:17",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1288,
                                  "src": "11382:9:17",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1256,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11382:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1259,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 1258,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11394:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11382:13:17"
                            },
                            "loopExpression": {
                              "expression": {
                                "id": 1264,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": true,
                                "src": "11419:3:17",
                                "subExpression": {
                                  "id": 1263,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1257,
                                  "src": "11421:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1265,
                              "nodeType": "ExpressionStatement",
                              "src": "11419:3:17"
                            },
                            "nodeType": "ForStatement",
                            "src": "11377:315:17"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1335,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1202,
                        "src": "12223:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1336,
                        "name": "codeHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1205,
                        "src": "12235:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 1337,
                        "name": "filtered",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "12247:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1334,
                      "name": "CodeHashesUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2167,
                      "src": "12205:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes32[] memory,bool)"
                      }
                    },
                    "id": 1338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12205:51:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1339,
                  "nodeType": "EmitStatement",
                  "src": "12200:56:17"
                }
              ]
            },
            "documentation": {
              "id": 1200,
              "nodeType": "StructuredDocumentation",
              "src": "10571:159:17",
              "text": " @notice Update multiple codeHashes for a registered address - when filtered is true, the codeHashes will be filtered. Reverts on duplicates."
            },
            "functionSelector": "063298b6",
            "id": 1341,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1210,
                    "name": "registrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1202,
                    "src": "10871:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1211,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1209,
                  "name": "onlyAddressOrOwner",
                  "nameLocations": [
                    "10852:18:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "10852:18:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "10852:30:17"
              }
            ],
            "name": "updateCodeHashes",
            "nameLocation": "10744:16:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1202,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "10769:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1341,
                  "src": "10761:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10761:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1205,
                  "mutability": "mutable",
                  "name": "codeHashes",
                  "nameLocation": "10800:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1341,
                  "src": "10781:29:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1203,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "10781:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1204,
                    "nodeType": "ArrayTypeName",
                    "src": "10781:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1207,
                  "mutability": "mutable",
                  "name": "filtered",
                  "nameLocation": "10817:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1341,
                  "src": "10812:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1206,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10812:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10760:66:17"
            },
            "returnParameters": {
              "id": 1212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10887:0:17"
            },
            "scope": 2067,
            "src": "10735:1528:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              327
            ],
            "body": {
              "id": 1462,
              "nodeType": "Block",
              "src": "12793:1192:17",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1352,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1344,
                      "src": "12807:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1353,
                      "name": "newSubscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1346,
                      "src": "12821:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12807:29:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1359,
                  "nodeType": "IfStatement",
                  "src": "12803:90:17",
                  "trueBody": {
                    "id": 1358,
                    "nodeType": "Block",
                    "src": "12838:55:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1355,
                            "name": "CannotSubscribeToSelf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2107,
                            "src": "12859:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12859:23:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1357,
                        "nodeType": "RevertStatement",
                        "src": "12852:30:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1360,
                      "name": "newSubscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1346,
                      "src": "12906:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12933:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12925:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1361,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12925:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12925:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12906:29:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1370,
                  "nodeType": "IfStatement",
                  "src": "12902:97:17",
                  "trueBody": {
                    "id": 1369,
                    "nodeType": "Block",
                    "src": "12937:62:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1366,
                            "name": "CannotSubscribeToZeroAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2109,
                            "src": "12958:28:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12958:30:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1368,
                        "nodeType": "RevertStatement",
                        "src": "12951:37:17"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1372,
                      "mutability": "mutable",
                      "name": "registration",
                      "nameLocation": "13016:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1462,
                      "src": "13008:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1371,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13008:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1376,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1373,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "13031:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 1375,
                    "indexExpression": {
                      "id": 1374,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1344,
                      "src": "13046:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13031:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13008:49:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1377,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1372,
                      "src": "13071:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13095:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13087:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1378,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13087:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13087:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13071:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1388,
                  "nodeType": "IfStatement",
                  "src": "13067:89:17",
                  "trueBody": {
                    "id": 1387,
                    "nodeType": "Block",
                    "src": "13099:57:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 1384,
                              "name": "registrant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1344,
                              "src": "13134:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1383,
                            "name": "NotRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2093,
                            "src": "13120:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 1385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13120:25:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1386,
                        "nodeType": "RevertStatement",
                        "src": "13113:32:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1389,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1372,
                      "src": "13169:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1390,
                      "name": "newSubscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1346,
                      "src": "13185:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13169:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1397,
                  "nodeType": "IfStatement",
                  "src": "13165:103:17",
                  "trueBody": {
                    "id": 1396,
                    "nodeType": "Block",
                    "src": "13202:66:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 1393,
                              "name": "newSubscription",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1346,
                              "src": "13241:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1392,
                            "name": "AlreadySubscribed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2099,
                            "src": "13223:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 1394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13223:34:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1395,
                        "nodeType": "RevertStatement",
                        "src": "13216:41:17"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1399
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1399,
                      "mutability": "mutable",
                      "name": "newSubscriptionRegistration",
                      "nameLocation": "13285:27:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1462,
                      "src": "13277:35:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1398,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13277:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1403,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1400,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "13315:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 1402,
                    "indexExpression": {
                      "id": 1401,
                      "name": "newSubscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1346,
                      "src": "13330:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13315:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13277:69:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1404,
                      "name": "newSubscriptionRegistration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1399,
                      "src": "13360:27:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13399:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13391:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1405,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13391:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13391:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13360:41:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1415,
                  "nodeType": "IfStatement",
                  "src": "13356:109:17",
                  "trueBody": {
                    "id": 1414,
                    "nodeType": "Block",
                    "src": "13403:62:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 1411,
                              "name": "newSubscription",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1346,
                              "src": "13438:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1410,
                            "name": "NotRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2093,
                            "src": "13424:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 1412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13424:30:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1413,
                        "nodeType": "RevertStatement",
                        "src": "13417:37:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1416,
                      "name": "newSubscriptionRegistration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1399,
                      "src": "13478:27:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1417,
                      "name": "newSubscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1346,
                      "src": "13509:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13478:46:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1424,
                  "nodeType": "IfStatement",
                  "src": "13474:144:17",
                  "trueBody": {
                    "id": 1423,
                    "nodeType": "Block",
                    "src": "13526:92:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 1420,
                              "name": "newSubscription",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1346,
                              "src": "13591:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1419,
                            "name": "CannotSubscribeToRegistrantWithSubscription",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2125,
                            "src": "13547:43:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 1421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13547:60:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1422,
                        "nodeType": "RevertStatement",
                        "src": "13540:67:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1425,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1372,
                      "src": "13632:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1426,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1344,
                      "src": "13648:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13632:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1442,
                  "nodeType": "IfStatement",
                  "src": "13628:173:17",
                  "trueBody": {
                    "id": 1441,
                    "nodeType": "Block",
                    "src": "13660:141:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1432,
                              "name": "registrant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1344,
                              "src": "13708:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 1428,
                                "name": "_subscribers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 489,
                                "src": "13674:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                                }
                              },
                              "id": 1430,
                              "indexExpression": {
                                "id": 1429,
                                "name": "registration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1372,
                                "src": "13687:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13674:26:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$4195_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 1431,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13701:6:17",
                            "memberName": "remove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4249,
                            "src": "13674:33:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$4195_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                            }
                          },
                          "id": 1433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13674:45:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1434,
                        "nodeType": "ExpressionStatement",
                        "src": "13674:45:17"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1436,
                              "name": "registrant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1344,
                              "src": "13758:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1437,
                              "name": "registration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1372,
                              "src": "13770:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 1438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13784:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1435,
                            "name": "SubscriptionUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2175,
                            "src": "13738:19:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,bool)"
                            }
                          },
                          "id": 1439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13738:52:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1440,
                        "nodeType": "EmitStatement",
                        "src": "13733:57:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1443,
                        "name": "_registrations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "13810:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1445,
                      "indexExpression": {
                        "id": 1444,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1344,
                        "src": "13825:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13810:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1446,
                      "name": "newSubscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1346,
                      "src": "13839:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13810:44:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1448,
                  "nodeType": "ExpressionStatement",
                  "src": "13810:44:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1453,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1344,
                        "src": "13898:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1449,
                          "name": "_subscribers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 489,
                          "src": "13864:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                          }
                        },
                        "id": 1451,
                        "indexExpression": {
                          "id": 1450,
                          "name": "newSubscription",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1346,
                          "src": "13877:15:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13864:29:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$4195_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 1452,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13894:3:17",
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4222,
                      "src": "13864:33:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$4195_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 1454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13864:45:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1455,
                  "nodeType": "ExpressionStatement",
                  "src": "13864:45:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1457,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1344,
                        "src": "13944:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1458,
                        "name": "newSubscription",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1346,
                        "src": "13956:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 1459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13973:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1456,
                      "name": "SubscriptionUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2175,
                      "src": "13924:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 1460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13924:54:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1461,
                  "nodeType": "EmitStatement",
                  "src": "13919:59:17"
                }
              ]
            },
            "documentation": {
              "id": 1342,
              "nodeType": "StructuredDocumentation",
              "src": "12269:415:17",
              "text": " @notice Subscribe an address to another registrant's filtered operators and codeHashes. Will remove previous\n         subscription if present.\n         Note that accounts with subscriptions may go on to subscribe to other accounts - in this case,\n         subscriptions will not be forwarded. Instead the former subscription's existing entries will still be\n         used."
            },
            "functionSelector": "b314d414",
            "id": 1463,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1349,
                    "name": "registrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1344,
                    "src": "12781:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1350,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1348,
                  "name": "onlyAddressOrOwner",
                  "nameLocations": [
                    "12762:18:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "12762:18:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "12762:30:17"
              }
            ],
            "name": "subscribe",
            "nameLocation": "12698:9:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1344,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "12716:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1463,
                  "src": "12708:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12708:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1346,
                  "mutability": "mutable",
                  "name": "newSubscription",
                  "nameLocation": "12736:15:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1463,
                  "src": "12728:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12728:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12707:45:17"
            },
            "returnParameters": {
              "id": 1351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12793:0:17"
            },
            "scope": 2067,
            "src": "12689:1296:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              334
            ],
            "body": {
              "id": 1527,
              "nodeType": "Block",
              "src": "14251:520:17",
              "statements": [
                {
                  "assignments": [
                    1475
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1475,
                      "mutability": "mutable",
                      "name": "registration",
                      "nameLocation": "14269:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1527,
                      "src": "14261:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1474,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14261:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1479,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1476,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "14284:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 1478,
                    "indexExpression": {
                      "id": 1477,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1466,
                      "src": "14299:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14284:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14261:49:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1480,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1475,
                      "src": "14324:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14348:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "14340:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1481,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14340:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14340:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "14324:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1491,
                  "nodeType": "IfStatement",
                  "src": "14320:89:17",
                  "trueBody": {
                    "id": 1490,
                    "nodeType": "Block",
                    "src": "14352:57:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 1487,
                              "name": "registrant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1466,
                              "src": "14387:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1486,
                            "name": "NotRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2093,
                            "src": "14373:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 1488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14373:25:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1489,
                        "nodeType": "RevertStatement",
                        "src": "14366:32:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1492,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1475,
                      "src": "14422:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1493,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1466,
                      "src": "14438:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "14422:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1499,
                  "nodeType": "IfStatement",
                  "src": "14418:79:17",
                  "trueBody": {
                    "id": 1498,
                    "nodeType": "Block",
                    "src": "14450:47:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1495,
                            "name": "NotSubscribed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2101,
                            "src": "14471:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14471:15:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1497,
                        "nodeType": "RevertStatement",
                        "src": "14464:22:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1504,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1466,
                        "src": "14540:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1500,
                          "name": "_subscribers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 489,
                          "src": "14506:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                          }
                        },
                        "id": 1502,
                        "indexExpression": {
                          "id": 1501,
                          "name": "registration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1475,
                          "src": "14519:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14506:26:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$4195_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 1503,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14533:6:17",
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4249,
                      "src": "14506:33:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$4195_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 1505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14506:45:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1506,
                  "nodeType": "ExpressionStatement",
                  "src": "14506:45:17"
                },
                {
                  "expression": {
                    "id": 1511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1507,
                        "name": "_registrations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "14561:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1509,
                      "indexExpression": {
                        "id": 1508,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1466,
                        "src": "14576:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14561:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1510,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1466,
                      "src": "14590:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "14561:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1512,
                  "nodeType": "ExpressionStatement",
                  "src": "14561:39:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1514,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1466,
                        "src": "14635:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1515,
                        "name": "registration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1475,
                        "src": "14647:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 1516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14661:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1513,
                      "name": "SubscriptionUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2175,
                      "src": "14615:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 1517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14615:52:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1518,
                  "nodeType": "EmitStatement",
                  "src": "14610:57:17"
                },
                {
                  "condition": {
                    "id": 1519,
                    "name": "copyExistingEntries",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1468,
                    "src": "14681:19:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1526,
                  "nodeType": "IfStatement",
                  "src": "14677:88:17",
                  "trueBody": {
                    "id": 1525,
                    "nodeType": "Block",
                    "src": "14702:63:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1521,
                              "name": "registrant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1466,
                              "src": "14729:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1522,
                              "name": "registration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1475,
                              "src": "14741:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1520,
                            "name": "_copyEntries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1712,
                            "src": "14716:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14716:38:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1524,
                        "nodeType": "ExpressionStatement",
                        "src": "14716:38:17"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1464,
              "nodeType": "StructuredDocumentation",
              "src": "13991:148:17",
              "text": " @notice Unsubscribe an address from its current subscribed registrant, and optionally copy its filtered operators and codeHashes."
            },
            "functionSelector": "34a0dc10",
            "id": 1528,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1471,
                    "name": "registrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1466,
                    "src": "14239:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1472,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1470,
                  "name": "onlyAddressOrOwner",
                  "nameLocations": [
                    "14220:18:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "14220:18:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "14220:30:17"
              }
            ],
            "name": "unsubscribe",
            "nameLocation": "14153:11:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1466,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "14173:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "14165:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14165:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1468,
                  "mutability": "mutable",
                  "name": "copyExistingEntries",
                  "nameLocation": "14190:19:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "14185:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1467,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14185:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14164:46:17"
            },
            "returnParameters": {
              "id": 1473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14251:0:17"
            },
            "scope": 2067,
            "src": "14144:627:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              365
            ],
            "body": {
              "id": 1597,
              "nodeType": "Block",
              "src": "14999:616:17",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1539,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1531,
                      "src": "15013:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1540,
                      "name": "registrantToCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1533,
                      "src": "15027:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15013:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1546,
                  "nodeType": "IfStatement",
                  "src": "15009:88:17",
                  "trueBody": {
                    "id": 1545,
                    "nodeType": "Block",
                    "src": "15045:52:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1542,
                            "name": "CannotCopyFromSelf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2127,
                            "src": "15066:18:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15066:20:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1544,
                        "nodeType": "RevertStatement",
                        "src": "15059:27:17"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1548
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1548,
                      "mutability": "mutable",
                      "name": "registration",
                      "nameLocation": "15114:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1597,
                      "src": "15106:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1547,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15106:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1552,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1549,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "15129:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 1551,
                    "indexExpression": {
                      "id": 1550,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1531,
                      "src": "15144:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15129:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15106:49:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1553,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1548,
                      "src": "15169:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15193:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15185:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1554,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15185:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15185:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15169:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1564,
                  "nodeType": "IfStatement",
                  "src": "15165:89:17",
                  "trueBody": {
                    "id": 1563,
                    "nodeType": "Block",
                    "src": "15197:57:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 1560,
                              "name": "registrant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1531,
                              "src": "15232:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1559,
                            "name": "NotRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2093,
                            "src": "15218:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 1561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15218:25:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1562,
                        "nodeType": "RevertStatement",
                        "src": "15211:32:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1565,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1548,
                      "src": "15267:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1566,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1531,
                      "src": "15283:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15267:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1573,
                  "nodeType": "IfStatement",
                  "src": "15263:105:17",
                  "trueBody": {
                    "id": 1572,
                    "nodeType": "Block",
                    "src": "15295:73:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 1569,
                              "name": "registration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1548,
                              "src": "15344:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1568,
                            "name": "CannotUpdateWhileSubscribed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2105,
                            "src": "15316:27:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 1570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15316:41:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1571,
                        "nodeType": "RevertStatement",
                        "src": "15309:48:17"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1575
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1575,
                      "mutability": "mutable",
                      "name": "registrantRegistration",
                      "nameLocation": "15385:22:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1597,
                      "src": "15377:30:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1574,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15377:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1579,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1576,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "15410:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 1578,
                    "indexExpression": {
                      "id": 1577,
                      "name": "registrantToCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1533,
                      "src": "15425:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15410:32:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15377:65:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1580,
                      "name": "registrantRegistration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1575,
                      "src": "15456:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15490:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15482:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1581,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15482:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15482:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15456:36:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1591,
                  "nodeType": "IfStatement",
                  "src": "15452:105:17",
                  "trueBody": {
                    "id": 1590,
                    "nodeType": "Block",
                    "src": "15494:63:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 1587,
                              "name": "registrantToCopy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1533,
                              "src": "15529:16:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1586,
                            "name": "NotRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2093,
                            "src": "15515:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 1588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15515:31:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1589,
                        "nodeType": "RevertStatement",
                        "src": "15508:38:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1593,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1531,
                        "src": "15579:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1594,
                        "name": "registrantToCopy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1533,
                        "src": "15591:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1592,
                      "name": "_copyEntries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1712,
                      "src": "15566:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15566:42:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1596,
                  "nodeType": "ExpressionStatement",
                  "src": "15566:42:17"
                }
              ]
            },
            "documentation": {
              "id": 1529,
              "nodeType": "StructuredDocumentation",
              "src": "14777:108:17",
              "text": " @notice Copy filtered operators and codeHashes from a different registrantToCopy to addr."
            },
            "functionSelector": "1e06b4b4",
            "id": 1598,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1536,
                    "name": "registrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1531,
                    "src": "14987:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1537,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1535,
                  "name": "onlyAddressOrOwner",
                  "nameLocations": [
                    "14968:18:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "14968:18:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "14968:30:17"
              }
            ],
            "name": "copyEntriesOf",
            "nameLocation": "14899:13:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1531,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "14921:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1598,
                  "src": "14913:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14913:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1533,
                  "mutability": "mutable",
                  "name": "registrantToCopy",
                  "nameLocation": "14941:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1598,
                  "src": "14933:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14933:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14912:46:17"
            },
            "returnParameters": {
              "id": 1538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14999:0:17"
            },
            "scope": 2067,
            "src": "14890:725:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1711,
              "nodeType": "Block",
              "src": "15785:1068:17",
              "statements": [
                {
                  "assignments": [
                    1610
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1610,
                      "mutability": "mutable",
                      "name": "filteredOperatorsRef",
                      "nameLocation": "15828:20:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1711,
                      "src": "15795:53:17",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AddressSet_$4195_storage_ptr",
                        "typeString": "struct EnumerableSet.AddressSet"
                      },
                      "typeName": {
                        "id": 1609,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1608,
                          "name": "EnumerableSet.AddressSet",
                          "nameLocations": [
                            "15795:13:17",
                            "15809:10:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4195,
                          "src": "15795:24:17"
                        },
                        "referencedDeclaration": 4195,
                        "src": "15795:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$4195_storage_ptr",
                          "typeString": "struct EnumerableSet.AddressSet"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1614,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1611,
                      "name": "_filteredOperators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "15851:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
                        "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                      }
                    },
                    "id": 1613,
                    "indexExpression": {
                      "id": 1612,
                      "name": "registrantToCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1603,
                      "src": "15870:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15851:36:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AddressSet_$4195_storage",
                      "typeString": "struct EnumerableSet.AddressSet storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15795:92:17"
                },
                {
                  "assignments": [
                    1619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1619,
                      "mutability": "mutable",
                      "name": "filteredCodeHashesRef",
                      "nameLocation": "15930:21:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1711,
                      "src": "15897:54:17",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage_ptr",
                        "typeString": "struct EnumerableSet.Bytes32Set"
                      },
                      "typeName": {
                        "id": 1618,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1617,
                          "name": "EnumerableSet.Bytes32Set",
                          "nameLocations": [
                            "15897:13:17",
                            "15911:10:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4074,
                          "src": "15897:24:17"
                        },
                        "referencedDeclaration": 4074,
                        "src": "15897:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage_ptr",
                          "typeString": "struct EnumerableSet.Bytes32Set"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1623,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1620,
                      "name": "_filteredCodeHashes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "15954:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bytes32Set_$4074_storage_$",
                        "typeString": "mapping(address => struct EnumerableSet.Bytes32Set storage ref)"
                      }
                    },
                    "id": 1622,
                    "indexExpression": {
                      "id": 1621,
                      "name": "registrantToCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1603,
                      "src": "15974:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15954:37:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage",
                      "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15897:94:17"
                },
                {
                  "assignments": [
                    1625
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1625,
                      "mutability": "mutable",
                      "name": "filteredOperatorsLength",
                      "nameLocation": "16009:23:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1711,
                      "src": "16001:31:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1624,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16001:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1629,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1626,
                        "name": "filteredOperatorsRef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1610,
                        "src": "16035:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$4195_storage_ptr",
                          "typeString": "struct EnumerableSet.AddressSet storage pointer"
                        }
                      },
                      "id": 1627,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16056:6:17",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4291,
                      "src": "16035:27:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$4195_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16035:29:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16001:63:17"
                },
                {
                  "assignments": [
                    1631
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1631,
                      "mutability": "mutable",
                      "name": "filteredCodeHashesLength",
                      "nameLocation": "16082:24:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1711,
                      "src": "16074:32:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1630,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16074:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1635,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1632,
                        "name": "filteredCodeHashesRef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1619,
                        "src": "16109:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage_ptr",
                          "typeString": "struct EnumerableSet.Bytes32Set storage pointer"
                        }
                      },
                      "id": 1633,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16131:6:17",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4143,
                      "src": "16109:28:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$4074_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Bytes32Set_$4074_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16109:30:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16074:65:17"
                },
                {
                  "id": 1710,
                  "nodeType": "UncheckedBlock",
                  "src": "16149:698:17",
                  "statements": [
                    {
                      "body": {
                        "id": 1671,
                        "nodeType": "Block",
                        "src": "16227:270:17",
                        "statements": [
                          {
                            "assignments": [
                              1647
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1647,
                                "mutability": "mutable",
                                "name": "operator",
                                "nameLocation": "16253:8:17",
                                "nodeType": "VariableDeclaration",
                                "scope": 1671,
                                "src": "16245:16:17",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "typeName": {
                                  "id": 1646,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16245:7:17",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1652,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 1650,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1637,
                                  "src": "16288:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1648,
                                  "name": "filteredOperatorsRef",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1610,
                                  "src": "16264:20:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AddressSet_$4195_storage_ptr",
                                    "typeString": "struct EnumerableSet.AddressSet storage pointer"
                                  }
                                },
                                "id": 1649,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "16285:2:17",
                                "memberName": "at",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4318,
                                "src": "16264:23:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$4195_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                                  "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                                }
                              },
                              "id": 1651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16264:26:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "16245:45:17"
                          },
                          {
                            "assignments": [
                              1654
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1654,
                                "mutability": "mutable",
                                "name": "added",
                                "nameLocation": "16313:5:17",
                                "nodeType": "VariableDeclaration",
                                "scope": 1671,
                                "src": "16308:10:17",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "typeName": {
                                  "id": 1653,
                                  "name": "bool",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16308:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1661,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 1659,
                                  "name": "operator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1647,
                                  "src": "16356:8:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "baseExpression": {
                                    "id": 1655,
                                    "name": "_filteredOperators",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 475,
                                    "src": "16321:18:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
                                      "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                                    }
                                  },
                                  "id": 1657,
                                  "indexExpression": {
                                    "id": 1656,
                                    "name": "registrant",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1601,
                                    "src": "16340:10:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16321:30:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AddressSet_$4195_storage",
                                    "typeString": "struct EnumerableSet.AddressSet storage ref"
                                  }
                                },
                                "id": 1658,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "16352:3:17",
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4222,
                                "src": "16321:34:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$4195_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                                  "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                                }
                              },
                              "id": 1660,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16321:44:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "16308:57:17"
                          },
                          {
                            "condition": {
                              "id": 1662,
                              "name": "added",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1654,
                              "src": "16387:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1670,
                            "nodeType": "IfStatement",
                            "src": "16383:100:17",
                            "trueBody": {
                              "id": 1669,
                              "nodeType": "Block",
                              "src": "16394:89:17",
                              "statements": [
                                {
                                  "eventCall": {
                                    "arguments": [
                                      {
                                        "id": 1664,
                                        "name": "registrant",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1601,
                                        "src": "16437:10:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1665,
                                        "name": "operator",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1647,
                                        "src": "16449:8:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "hexValue": "74727565",
                                        "id": 1666,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16459:4:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 1663,
                                      "name": "OperatorUpdated",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2141,
                                      "src": "16421:15:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,bool)"
                                      }
                                    },
                                    "id": 1667,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16421:43:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1668,
                                  "nodeType": "EmitStatement",
                                  "src": "16416:48:17"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1640,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1637,
                          "src": "16193:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1641,
                          "name": "filteredOperatorsLength",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1625,
                          "src": "16197:23:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16193:27:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1672,
                      "initializationExpression": {
                        "assignments": [
                          1637
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1637,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "16186:1:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 1672,
                            "src": "16178:9:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1636,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16178:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1639,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 1638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16190:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16178:13:17"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 1644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": true,
                          "src": "16222:3:17",
                          "subExpression": {
                            "id": 1643,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1637,
                            "src": "16224:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1645,
                        "nodeType": "ExpressionStatement",
                        "src": "16222:3:17"
                      },
                      "nodeType": "ForStatement",
                      "src": "16173:324:17"
                    },
                    {
                      "body": {
                        "id": 1708,
                        "nodeType": "Block",
                        "src": "16565:272:17",
                        "statements": [
                          {
                            "assignments": [
                              1684
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1684,
                                "mutability": "mutable",
                                "name": "codehash",
                                "nameLocation": "16591:8:17",
                                "nodeType": "VariableDeclaration",
                                "scope": 1708,
                                "src": "16583:16:17",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "typeName": {
                                  "id": 1683,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16583:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1689,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 1687,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1674,
                                  "src": "16627:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1685,
                                  "name": "filteredCodeHashesRef",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1619,
                                  "src": "16602:21:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage_ptr",
                                    "typeString": "struct EnumerableSet.Bytes32Set storage pointer"
                                  }
                                },
                                "id": 1686,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "16624:2:17",
                                "memberName": "at",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4161,
                                "src": "16602:24:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$4074_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Bytes32Set_$4074_storage_ptr_$",
                                  "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"
                                }
                              },
                              "id": 1688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16602:27:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "16583:46:17"
                          },
                          {
                            "assignments": [
                              1691
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1691,
                                "mutability": "mutable",
                                "name": "added",
                                "nameLocation": "16652:5:17",
                                "nodeType": "VariableDeclaration",
                                "scope": 1708,
                                "src": "16647:10:17",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "typeName": {
                                  "id": 1690,
                                  "name": "bool",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16647:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1698,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 1696,
                                  "name": "codehash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1684,
                                  "src": "16696:8:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "baseExpression": {
                                    "id": 1692,
                                    "name": "_filteredCodeHashes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 480,
                                    "src": "16660:19:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bytes32Set_$4074_storage_$",
                                      "typeString": "mapping(address => struct EnumerableSet.Bytes32Set storage ref)"
                                    }
                                  },
                                  "id": 1694,
                                  "indexExpression": {
                                    "id": 1693,
                                    "name": "registrant",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1601,
                                    "src": "16680:10:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16660:31:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage",
                                    "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                                  }
                                },
                                "id": 1695,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "16692:3:17",
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4092,
                                "src": "16660:35:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$4074_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$4074_storage_ptr_$",
                                  "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
                                }
                              },
                              "id": 1697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16660:45:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "16647:58:17"
                          },
                          {
                            "condition": {
                              "id": 1699,
                              "name": "added",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1691,
                              "src": "16727:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1707,
                            "nodeType": "IfStatement",
                            "src": "16723:100:17",
                            "trueBody": {
                              "id": 1706,
                              "nodeType": "Block",
                              "src": "16734:89:17",
                              "statements": [
                                {
                                  "eventCall": {
                                    "arguments": [
                                      {
                                        "id": 1701,
                                        "name": "registrant",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1601,
                                        "src": "16777:10:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1702,
                                        "name": "codehash",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1684,
                                        "src": "16789:8:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      {
                                        "hexValue": "74727565",
                                        "id": 1703,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16799:4:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 1700,
                                      "name": "CodeHashUpdated",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2158,
                                      "src": "16761:15:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_bool_$returns$__$",
                                        "typeString": "function (address,bytes32,bool)"
                                      }
                                    },
                                    "id": 1704,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16761:43:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1705,
                                  "nodeType": "EmitStatement",
                                  "src": "16756:48:17"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1677,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1674,
                          "src": "16530:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1678,
                          "name": "filteredCodeHashesLength",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1631,
                          "src": "16534:24:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16530:28:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1709,
                      "initializationExpression": {
                        "assignments": [
                          1674
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1674,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "16523:1:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 1709,
                            "src": "16515:9:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1673,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16515:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1676,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 1675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16527:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16515:13:17"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 1681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": true,
                          "src": "16560:3:17",
                          "subExpression": {
                            "id": 1680,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1674,
                            "src": "16562:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1682,
                        "nodeType": "ExpressionStatement",
                        "src": "16560:3:17"
                      },
                      "nodeType": "ForStatement",
                      "src": "16510:327:17"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 1599,
              "nodeType": "StructuredDocumentation",
              "src": "15621:83:17",
              "text": "@dev helper to copy entries from registrantToCopy to registrant and emit events"
            },
            "id": 1712,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_copyEntries",
            "nameLocation": "15718:12:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1601,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "15739:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1712,
                  "src": "15731:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15731:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1603,
                  "mutability": "mutable",
                  "name": "registrantToCopy",
                  "nameLocation": "15759:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1712,
                  "src": "15751:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15751:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15730:46:17"
            },
            "returnParameters": {
              "id": 1605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15785:0:17"
            },
            "scope": 2067,
            "src": "15709:1144:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              341
            ],
            "body": {
              "id": 1750,
              "nodeType": "Block",
              "src": "17109:244:17",
              "statements": [
                {
                  "expression": {
                    "id": 1724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1720,
                      "name": "subscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1718,
                      "src": "17119:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 1721,
                        "name": "_registrations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "17134:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1723,
                      "indexExpression": {
                        "id": 1722,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1715,
                        "src": "17149:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "17134:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17119:41:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1725,
                  "nodeType": "ExpressionStatement",
                  "src": "17119:41:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1726,
                      "name": "subscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1718,
                      "src": "17174:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17198:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "17190:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1727,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17190:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17190:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17174:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1737,
                        "name": "subscription",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1718,
                        "src": "17269:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1738,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1715,
                        "src": "17285:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "17269:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1748,
                    "nodeType": "IfStatement",
                    "src": "17265:82:17",
                    "trueBody": {
                      "id": 1747,
                      "nodeType": "Block",
                      "src": "17297:50:17",
                      "statements": [
                        {
                          "expression": {
                            "id": 1745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1740,
                              "name": "subscription",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1718,
                              "src": "17311:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1743,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17334:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1742,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17326:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1741,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17326:7:17",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17326:10:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "17311:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1746,
                          "nodeType": "ExpressionStatement",
                          "src": "17311:25:17"
                        }
                      ]
                    }
                  },
                  "id": 1749,
                  "nodeType": "IfStatement",
                  "src": "17170:177:17",
                  "trueBody": {
                    "id": 1736,
                    "nodeType": "Block",
                    "src": "17202:57:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 1733,
                              "name": "registrant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1715,
                              "src": "17237:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1732,
                            "name": "NotRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2093,
                            "src": "17223:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 1734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17223:25:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1735,
                        "nodeType": "RevertStatement",
                        "src": "17216:32:17"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1713,
              "nodeType": "StructuredDocumentation",
              "src": "16929:86:17",
              "text": " @notice Get the subscription address of a given registrant, if any."
            },
            "functionSelector": "3c5030bb",
            "id": 1751,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subscriptionOf",
            "nameLocation": "17029:14:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1715,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "17052:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1751,
                  "src": "17044:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17044:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17043:20:17"
            },
            "returnParameters": {
              "id": 1719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1718,
                  "mutability": "mutable",
                  "name": "subscription",
                  "nameLocation": "17095:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1751,
                  "src": "17087:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1717,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17087:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17086:22:17"
            },
            "scope": 2067,
            "src": "17020:333:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              349
            ],
            "body": {
              "id": 1766,
              "nodeType": "Block",
              "src": "17601:57:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 1760,
                          "name": "_subscribers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 489,
                          "src": "17618:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                          }
                        },
                        "id": 1762,
                        "indexExpression": {
                          "id": 1761,
                          "name": "registrant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1754,
                          "src": "17631:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17618:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$4195_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 1763,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17643:6:17",
                      "memberName": "values",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4348,
                      "src": "17618:31:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$4195_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"
                      }
                    },
                    "id": 1764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17618:33:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 1759,
                  "id": 1765,
                  "nodeType": "Return",
                  "src": "17611:40:17"
                }
              ]
            },
            "documentation": {
              "id": 1752,
              "nodeType": "StructuredDocumentation",
              "src": "17359:155:17",
              "text": " @notice Get the set of addresses subscribed to a given registrant.\n         Note that order is not guaranteed as updates are made."
            },
            "functionSelector": "5745ae28",
            "id": 1767,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subscribers",
            "nameLocation": "17528:11:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1754,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "17548:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1767,
                  "src": "17540:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17540:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17539:20:17"
            },
            "returnParameters": {
              "id": 1759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1758,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1767,
                  "src": "17583:16:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1756,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "17583:7:17",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1757,
                    "nodeType": "ArrayTypeName",
                    "src": "17583:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17582:18:17"
            },
            "scope": 2067,
            "src": "17519:139:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              358
            ],
            "body": {
              "id": 1784,
              "nodeType": "Block",
              "src": "17948:58:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1781,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1772,
                        "src": "17993:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1777,
                          "name": "_subscribers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 489,
                          "src": "17965:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                          }
                        },
                        "id": 1779,
                        "indexExpression": {
                          "id": 1778,
                          "name": "registrant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1770,
                          "src": "17978:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17965:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$4195_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 1780,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17990:2:17",
                      "memberName": "at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4318,
                      "src": "17965:27:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$4195_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                      }
                    },
                    "id": 1782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17965:34:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1776,
                  "id": 1783,
                  "nodeType": "Return",
                  "src": "17958:41:17"
                }
              ]
            },
            "documentation": {
              "id": 1768,
              "nodeType": "StructuredDocumentation",
              "src": "17664:190:17",
              "text": " @notice Get the subscriber at a given index in the set of addresses subscribed to a given registrant.\n         Note that order is not guaranteed as updates are made."
            },
            "functionSelector": "55940e51",
            "id": 1785,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subscriberAt",
            "nameLocation": "17868:12:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1770,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "17889:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1785,
                  "src": "17881:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17881:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1772,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "17909:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1785,
                  "src": "17901:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17901:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17880:35:17"
            },
            "returnParameters": {
              "id": 1776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1775,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1785,
                  "src": "17939:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17939:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17938:9:17"
            },
            "scope": 2067,
            "src": "17859:147:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              374
            ],
            "body": {
              "id": 1820,
              "nodeType": "Block",
              "src": "18215:256:17",
              "statements": [
                {
                  "assignments": [
                    1796
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1796,
                      "mutability": "mutable",
                      "name": "registration",
                      "nameLocation": "18233:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1820,
                      "src": "18225:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1795,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "18225:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1800,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1797,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "18248:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 1799,
                    "indexExpression": {
                      "id": 1798,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1788,
                      "src": "18263:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18248:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18225:49:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1801,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1796,
                      "src": "18288:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1802,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1788,
                      "src": "18304:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "18288:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1812,
                  "nodeType": "IfStatement",
                  "src": "18284:115:17",
                  "trueBody": {
                    "id": 1811,
                    "nodeType": "Block",
                    "src": "18316:83:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1808,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1790,
                              "src": "18379:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 1804,
                                "name": "_filteredOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 475,
                                "src": "18337:18:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                                }
                              },
                              "id": 1806,
                              "indexExpression": {
                                "id": 1805,
                                "name": "registration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1796,
                                "src": "18356:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18337:32:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$4195_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 1807,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "18370:8:17",
                            "memberName": "contains",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4276,
                            "src": "18337:41:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$4195_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                            }
                          },
                          "id": 1809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18337:51:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1794,
                        "id": 1810,
                        "nodeType": "Return",
                        "src": "18330:58:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1817,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1790,
                        "src": "18455:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1813,
                          "name": "_filteredOperators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 475,
                          "src": "18415:18:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                          }
                        },
                        "id": 1815,
                        "indexExpression": {
                          "id": 1814,
                          "name": "registrant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1788,
                          "src": "18434:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18415:30:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$4195_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 1816,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18446:8:17",
                      "memberName": "contains",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4276,
                      "src": "18415:39:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$4195_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                      }
                    },
                    "id": 1818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18415:49:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1794,
                  "id": 1819,
                  "nodeType": "Return",
                  "src": "18408:56:17"
                }
              ]
            },
            "documentation": {
              "id": 1786,
              "nodeType": "StructuredDocumentation",
              "src": "18012:103:17",
              "text": " @notice Returns true if operator is filtered by a given address or its subscription."
            },
            "functionSelector": "e4aecb54",
            "id": 1821,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperatorFiltered",
            "nameLocation": "18129:18:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1788,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "18156:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1821,
                  "src": "18148:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18148:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1790,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "18176:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1821,
                  "src": "18168:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18168:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18147:38:17"
            },
            "returnParameters": {
              "id": 1794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1793,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1821,
                  "src": "18209:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1792,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18209:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18208:6:17"
            },
            "scope": 2067,
            "src": "18120:351:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              392
            ],
            "body": {
              "id": 1856,
              "nodeType": "Block",
              "src": "18682:258:17",
              "statements": [
                {
                  "assignments": [
                    1832
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1832,
                      "mutability": "mutable",
                      "name": "registration",
                      "nameLocation": "18700:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1856,
                      "src": "18692:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1831,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "18692:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1836,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1833,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "18715:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 1835,
                    "indexExpression": {
                      "id": 1834,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1824,
                      "src": "18730:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18715:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18692:49:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1837,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1832,
                      "src": "18755:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1838,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1824,
                      "src": "18771:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "18755:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1848,
                  "nodeType": "IfStatement",
                  "src": "18751:116:17",
                  "trueBody": {
                    "id": 1847,
                    "nodeType": "Block",
                    "src": "18783:84:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1844,
                              "name": "codeHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1826,
                              "src": "18847:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 1840,
                                "name": "_filteredCodeHashes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 480,
                                "src": "18804:19:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bytes32Set_$4074_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.Bytes32Set storage ref)"
                                }
                              },
                              "id": 1842,
                              "indexExpression": {
                                "id": 1841,
                                "name": "registration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1832,
                                "src": "18824:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18804:33:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage",
                                "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                              }
                            },
                            "id": 1843,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "18838:8:17",
                            "memberName": "contains",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4128,
                            "src": "18804:42:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$4074_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$4074_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"
                            }
                          },
                          "id": 1845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18804:52:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1830,
                        "id": 1846,
                        "nodeType": "Return",
                        "src": "18797:59:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1853,
                        "name": "codeHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1826,
                        "src": "18924:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1849,
                          "name": "_filteredCodeHashes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 480,
                          "src": "18883:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bytes32Set_$4074_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.Bytes32Set storage ref)"
                          }
                        },
                        "id": 1851,
                        "indexExpression": {
                          "id": 1850,
                          "name": "registrant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1824,
                          "src": "18903:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18883:31:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage",
                          "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                        }
                      },
                      "id": 1852,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18915:8:17",
                      "memberName": "contains",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4128,
                      "src": "18883:40:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$4074_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$4074_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"
                      }
                    },
                    "id": 1854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18883:50:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1830,
                  "id": 1855,
                  "nodeType": "Return",
                  "src": "18876:57:17"
                }
              ]
            },
            "documentation": {
              "id": 1822,
              "nodeType": "StructuredDocumentation",
              "src": "18477:105:17",
              "text": " @notice Returns true if a codeHash is filtered by a given address or its subscription."
            },
            "functionSelector": "6af0c315",
            "id": 1857,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCodeHashFiltered",
            "nameLocation": "18596:18:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1824,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "18623:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1857,
                  "src": "18615:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18615:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1826,
                  "mutability": "mutable",
                  "name": "codeHash",
                  "nameLocation": "18643:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1857,
                  "src": "18635:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1825,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "18635:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18614:38:17"
            },
            "returnParameters": {
              "id": 1830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1829,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1857,
                  "src": "18676:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1828,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18676:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18675:6:17"
            },
            "scope": 2067,
            "src": "18587:353:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              383
            ],
            "body": {
              "id": 1897,
              "nodeType": "Block",
              "src": "19180:312:17",
              "statements": [
                {
                  "assignments": [
                    1868
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1868,
                      "mutability": "mutable",
                      "name": "codeHash",
                      "nameLocation": "19198:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1897,
                      "src": "19190:16:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1867,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19190:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1871,
                  "initialValue": {
                    "expression": {
                      "id": 1869,
                      "name": "operatorWithCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1862,
                      "src": "19209:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "19226:8:17",
                    "memberName": "codehash",
                    "nodeType": "MemberAccess",
                    "src": "19209:25:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19190:44:17"
                },
                {
                  "assignments": [
                    1873
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1873,
                      "mutability": "mutable",
                      "name": "registration",
                      "nameLocation": "19252:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1897,
                      "src": "19244:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1872,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "19244:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1877,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1874,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "19267:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 1876,
                    "indexExpression": {
                      "id": 1875,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1860,
                      "src": "19282:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19267:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19244:49:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1878,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1873,
                      "src": "19307:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1879,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1860,
                      "src": "19323:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "19307:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1889,
                  "nodeType": "IfStatement",
                  "src": "19303:116:17",
                  "trueBody": {
                    "id": 1888,
                    "nodeType": "Block",
                    "src": "19335:84:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1885,
                              "name": "codeHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1868,
                              "src": "19399:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 1881,
                                "name": "_filteredCodeHashes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 480,
                                "src": "19356:19:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bytes32Set_$4074_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.Bytes32Set storage ref)"
                                }
                              },
                              "id": 1883,
                              "indexExpression": {
                                "id": 1882,
                                "name": "registration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1873,
                                "src": "19376:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "19356:33:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage",
                                "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                              }
                            },
                            "id": 1884,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19390:8:17",
                            "memberName": "contains",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4128,
                            "src": "19356:42:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$4074_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$4074_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"
                            }
                          },
                          "id": 1886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19356:52:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1866,
                        "id": 1887,
                        "nodeType": "Return",
                        "src": "19349:59:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1894,
                        "name": "codeHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1868,
                        "src": "19476:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1890,
                          "name": "_filteredCodeHashes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 480,
                          "src": "19435:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bytes32Set_$4074_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.Bytes32Set storage ref)"
                          }
                        },
                        "id": 1892,
                        "indexExpression": {
                          "id": 1891,
                          "name": "registrant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1860,
                          "src": "19455:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19435:31:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage",
                          "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                        }
                      },
                      "id": 1893,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19467:8:17",
                      "memberName": "contains",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4128,
                      "src": "19435:40:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$4074_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$4074_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"
                      }
                    },
                    "id": 1895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19435:50:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1866,
                  "id": 1896,
                  "nodeType": "Return",
                  "src": "19428:57:17"
                }
              ]
            },
            "documentation": {
              "id": 1858,
              "nodeType": "StructuredDocumentation",
              "src": "18946:124:17",
              "text": " @notice Returns true if the hash of an address's code is filtered by a given address or its subscription."
            },
            "functionSelector": "5eae3173",
            "id": 1898,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCodeHashOfFiltered",
            "nameLocation": "19084:20:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1860,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "19113:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "19105:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1859,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19105:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1862,
                  "mutability": "mutable",
                  "name": "operatorWithCode",
                  "nameLocation": "19133:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "19125:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19125:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19104:46:17"
            },
            "returnParameters": {
              "id": 1866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1865,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "19174:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1864,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19174:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19173:6:17"
            },
            "scope": 2067,
            "src": "19075:417:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              433
            ],
            "body": {
              "id": 1915,
              "nodeType": "Block",
              "src": "19642:64:17",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1906,
                        "name": "_registrations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "19659:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1908,
                      "indexExpression": {
                        "id": 1907,
                        "name": "registrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1901,
                        "src": "19674:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "19659:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19697:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "19689:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1909,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19689:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19689:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "19659:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1905,
                  "id": 1914,
                  "nodeType": "Return",
                  "src": "19652:47:17"
                }
              ]
            },
            "documentation": {
              "id": 1899,
              "nodeType": "StructuredDocumentation",
              "src": "19498:68:17",
              "text": " @notice Returns true if an address has registered"
            },
            "functionSelector": "c3c5a547",
            "id": 1916,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegistered",
            "nameLocation": "19580:12:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1901,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "19601:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1916,
                  "src": "19593:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1900,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19593:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19592:20:17"
            },
            "returnParameters": {
              "id": 1905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1904,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1916,
                  "src": "19636:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1903,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19636:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19635:6:17"
            },
            "scope": 2067,
            "src": "19571:135:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              400
            ],
            "body": {
              "id": 1948,
              "nodeType": "Block",
              "src": "19909:236:17",
              "statements": [
                {
                  "assignments": [
                    1926
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1926,
                      "mutability": "mutable",
                      "name": "registration",
                      "nameLocation": "19927:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1948,
                      "src": "19919:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1925,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "19919:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1930,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1927,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "19942:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 1929,
                    "indexExpression": {
                      "id": 1928,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1919,
                      "src": "19957:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19942:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19919:49:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1931,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1926,
                      "src": "19982:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1932,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1919,
                      "src": "19998:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "19982:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1941,
                  "nodeType": "IfStatement",
                  "src": "19978:105:17",
                  "trueBody": {
                    "id": 1940,
                    "nodeType": "Block",
                    "src": "20010:73:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "baseExpression": {
                                "id": 1934,
                                "name": "_filteredOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 475,
                                "src": "20031:18:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                                }
                              },
                              "id": 1936,
                              "indexExpression": {
                                "id": 1935,
                                "name": "registration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1926,
                                "src": "20050:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20031:32:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$4195_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 1937,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "20064:6:17",
                            "memberName": "values",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4348,
                            "src": "20031:39:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$4195_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"
                            }
                          },
                          "id": 1938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20031:41:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "functionReturnParameters": 1924,
                        "id": 1939,
                        "nodeType": "Return",
                        "src": "20024:48:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 1942,
                          "name": "_filteredOperators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 475,
                          "src": "20099:18:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                          }
                        },
                        "id": 1944,
                        "indexExpression": {
                          "id": 1943,
                          "name": "registrant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1919,
                          "src": "20118:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20099:30:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$4195_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 1945,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20130:6:17",
                      "memberName": "values",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4348,
                      "src": "20099:37:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$4195_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"
                      }
                    },
                    "id": 1946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20099:39:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 1924,
                  "id": 1947,
                  "nodeType": "Return",
                  "src": "20092:46:17"
                }
              ]
            },
            "documentation": {
              "id": 1917,
              "nodeType": "StructuredDocumentation",
              "src": "19712:104:17",
              "text": " @notice Returns a list of filtered operators for a given address or its subscription."
            },
            "functionSelector": "c4308805",
            "id": 1949,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "filteredOperators",
            "nameLocation": "19830:17:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1919,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "19856:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1949,
                  "src": "19848:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19848:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19847:20:17"
            },
            "returnParameters": {
              "id": 1924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1923,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1949,
                  "src": "19891:16:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1921,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "19891:7:17",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1922,
                    "nodeType": "ArrayTypeName",
                    "src": "19891:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19890:18:17"
            },
            "scope": 2067,
            "src": "19821:324:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              408
            ],
            "body": {
              "id": 1981,
              "nodeType": "Block",
              "src": "20421:238:17",
              "statements": [
                {
                  "assignments": [
                    1959
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1959,
                      "mutability": "mutable",
                      "name": "registration",
                      "nameLocation": "20439:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1981,
                      "src": "20431:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1958,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "20431:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1963,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1960,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "20454:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 1962,
                    "indexExpression": {
                      "id": 1961,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1952,
                      "src": "20469:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "20454:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20431:49:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1964,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1959,
                      "src": "20494:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1965,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1952,
                      "src": "20510:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "20494:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1974,
                  "nodeType": "IfStatement",
                  "src": "20490:106:17",
                  "trueBody": {
                    "id": 1973,
                    "nodeType": "Block",
                    "src": "20522:74:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "baseExpression": {
                                "id": 1967,
                                "name": "_filteredCodeHashes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 480,
                                "src": "20543:19:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bytes32Set_$4074_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.Bytes32Set storage ref)"
                                }
                              },
                              "id": 1969,
                              "indexExpression": {
                                "id": 1968,
                                "name": "registration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1959,
                                "src": "20563:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20543:33:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage",
                                "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                              }
                            },
                            "id": 1970,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "20577:6:17",
                            "memberName": "values",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4191,
                            "src": "20543:40:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$4074_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$bound_to$_t_struct$_Bytes32Set_$4074_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer) view returns (bytes32[] memory)"
                            }
                          },
                          "id": 1971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20543:42:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "functionReturnParameters": 1957,
                        "id": 1972,
                        "nodeType": "Return",
                        "src": "20536:49:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 1975,
                          "name": "_filteredCodeHashes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 480,
                          "src": "20612:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bytes32Set_$4074_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.Bytes32Set storage ref)"
                          }
                        },
                        "id": 1977,
                        "indexExpression": {
                          "id": 1976,
                          "name": "registrant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1952,
                          "src": "20632:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20612:31:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage",
                          "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                        }
                      },
                      "id": 1978,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20644:6:17",
                      "memberName": "values",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4191,
                      "src": "20612:38:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$4074_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$bound_to$_t_struct$_Bytes32Set_$4074_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer) view returns (bytes32[] memory)"
                      }
                    },
                    "id": 1979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20612:40:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "functionReturnParameters": 1957,
                  "id": 1980,
                  "nodeType": "Return",
                  "src": "20605:47:17"
                }
              ]
            },
            "documentation": {
              "id": 1950,
              "nodeType": "StructuredDocumentation",
              "src": "20151:176:17",
              "text": " @notice Returns the set of filtered codeHashes for a given address or its subscription.\n         Note that order is not guaranteed as updates are made."
            },
            "functionSelector": "22fa2762",
            "id": 1982,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "filteredCodeHashes",
            "nameLocation": "20341:18:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1952,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "20368:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "20360:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20360:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20359:20:17"
            },
            "returnParameters": {
              "id": 1957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1956,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "20403:16:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1954,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "20403:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1955,
                    "nodeType": "ArrayTypeName",
                    "src": "20403:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20402:18:17"
            },
            "scope": 2067,
            "src": "20332:327:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              417
            ],
            "body": {
              "id": 2017,
              "nodeType": "Block",
              "src": "20999:238:17",
              "statements": [
                {
                  "assignments": [
                    1993
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1993,
                      "mutability": "mutable",
                      "name": "registration",
                      "nameLocation": "21017:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2017,
                      "src": "21009:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1992,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "21009:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1997,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1994,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "21032:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 1996,
                    "indexExpression": {
                      "id": 1995,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1985,
                      "src": "21047:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "21032:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21009:49:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1998,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1993,
                      "src": "21072:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1999,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1985,
                      "src": "21088:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "21072:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2009,
                  "nodeType": "IfStatement",
                  "src": "21068:106:17",
                  "trueBody": {
                    "id": 2008,
                    "nodeType": "Block",
                    "src": "21100:74:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2005,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1987,
                              "src": "21157:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 2001,
                                "name": "_filteredOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 475,
                                "src": "21121:18:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                                }
                              },
                              "id": 2003,
                              "indexExpression": {
                                "id": 2002,
                                "name": "registration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1993,
                                "src": "21140:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21121:32:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$4195_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 2004,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "21154:2:17",
                            "memberName": "at",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4318,
                            "src": "21121:35:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$4195_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                            }
                          },
                          "id": 2006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21121:42:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1991,
                        "id": 2007,
                        "nodeType": "Return",
                        "src": "21114:49:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2014,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1987,
                        "src": "21224:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 2010,
                          "name": "_filteredOperators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 475,
                          "src": "21190:18:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$4195_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                          }
                        },
                        "id": 2012,
                        "indexExpression": {
                          "id": 2011,
                          "name": "registrant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1985,
                          "src": "21209:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21190:30:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$4195_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 2013,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21221:2:17",
                      "memberName": "at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4318,
                      "src": "21190:33:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$4195_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$4195_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                      }
                    },
                    "id": 2015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21190:40:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1991,
                  "id": 2016,
                  "nodeType": "Return",
                  "src": "21183:47:17"
                }
              ]
            },
            "documentation": {
              "id": 1983,
              "nodeType": "StructuredDocumentation",
              "src": "20665:234:17",
              "text": " @notice Returns the filtered operator at the given index of the set of filtered operators for a given address or\n         its subscription.\n         Note that order is not guaranteed as updates are made."
            },
            "functionSelector": "3f1cc5fa",
            "id": 2018,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "filteredOperatorAt",
            "nameLocation": "20913:18:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1985,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "20940:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2018,
                  "src": "20932:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20932:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1987,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "20960:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2018,
                  "src": "20952:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20952:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20931:35:17"
            },
            "returnParameters": {
              "id": 1991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1990,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2018,
                  "src": "20990:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20990:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20989:9:17"
            },
            "scope": 2067,
            "src": "20904:333:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              426
            ],
            "body": {
              "id": 2053,
              "nodeType": "Block",
              "src": "21579:240:17",
              "statements": [
                {
                  "assignments": [
                    2029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2029,
                      "mutability": "mutable",
                      "name": "registration",
                      "nameLocation": "21597:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2053,
                      "src": "21589:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2028,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "21589:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2033,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2030,
                      "name": "_registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "21612:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 2032,
                    "indexExpression": {
                      "id": 2031,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2021,
                      "src": "21627:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "21612:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21589:49:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2034,
                      "name": "registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2029,
                      "src": "21652:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2035,
                      "name": "registrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2021,
                      "src": "21668:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "21652:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2045,
                  "nodeType": "IfStatement",
                  "src": "21648:107:17",
                  "trueBody": {
                    "id": 2044,
                    "nodeType": "Block",
                    "src": "21680:75:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2041,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2023,
                              "src": "21738:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 2037,
                                "name": "_filteredCodeHashes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 480,
                                "src": "21701:19:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bytes32Set_$4074_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.Bytes32Set storage ref)"
                                }
                              },
                              "id": 2039,
                              "indexExpression": {
                                "id": 2038,
                                "name": "registration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2029,
                                "src": "21721:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21701:33:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage",
                                "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                              }
                            },
                            "id": 2040,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "21735:2:17",
                            "memberName": "at",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4161,
                            "src": "21701:36:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$4074_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Bytes32Set_$4074_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"
                            }
                          },
                          "id": 2042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21701:43:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 2027,
                        "id": 2043,
                        "nodeType": "Return",
                        "src": "21694:50:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2050,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2023,
                        "src": "21806:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 2046,
                          "name": "_filteredCodeHashes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 480,
                          "src": "21771:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bytes32Set_$4074_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.Bytes32Set storage ref)"
                          }
                        },
                        "id": 2048,
                        "indexExpression": {
                          "id": 2047,
                          "name": "registrant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2021,
                          "src": "21791:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21771:31:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Set_$4074_storage",
                          "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                        }
                      },
                      "id": 2049,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21803:2:17",
                      "memberName": "at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4161,
                      "src": "21771:34:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$4074_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Bytes32Set_$4074_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"
                      }
                    },
                    "id": 2051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21771:41:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2027,
                  "id": 2052,
                  "nodeType": "Return",
                  "src": "21764:48:17"
                }
              ]
            },
            "documentation": {
              "id": 2019,
              "nodeType": "StructuredDocumentation",
              "src": "21243:236:17",
              "text": " @notice Returns the filtered codeHash at the given index of the list of filtered codeHashes for a given address or\n         its subscription.\n         Note that order is not guaranteed as updates are made."
            },
            "functionSelector": "a6529eb5",
            "id": 2054,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "filteredCodeHashAt",
            "nameLocation": "21493:18:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2021,
                  "mutability": "mutable",
                  "name": "registrant",
                  "nameLocation": "21520:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2054,
                  "src": "21512:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2020,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21512:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2023,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "21540:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2054,
                  "src": "21532:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2022,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21532:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21511:35:17"
            },
            "returnParameters": {
              "id": 2027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2026,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2054,
                  "src": "21570:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2025,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21570:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21569:9:17"
            },
            "scope": 2067,
            "src": "21484:335:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              440
            ],
            "body": {
              "id": 2065,
              "nodeType": "Block",
              "src": "21970:34:17",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 2062,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2057,
                      "src": "21987:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "21989:8:17",
                    "memberName": "codehash",
                    "nodeType": "MemberAccess",
                    "src": "21987:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2061,
                  "id": 2064,
                  "nodeType": "Return",
                  "src": "21980:17:17"
                }
              ]
            },
            "documentation": {
              "id": 2055,
              "nodeType": "StructuredDocumentation",
              "src": "21825:77:17",
              "text": "@dev Convenience method to compute the code hash of an arbitrary contract"
            },
            "functionSelector": "bbd652c7",
            "id": 2066,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "codeHashOf",
            "nameLocation": "21916:10:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2057,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "21935:1:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2066,
                  "src": "21927:9:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2056,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21927:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21926:11:17"
            },
            "returnParameters": {
              "id": 2061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2060,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2066,
                  "src": "21961:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2059,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21961:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21960:9:17"
            },
            "scope": 2067,
            "src": "21907:97:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2068,
        "src": "776:21230:17",
        "usedErrors": [
          2071,
          2075,
          2079,
          2083,
          2087,
          2089,
          2093,
          2095,
          2099,
          2101,
          2105,
          2107,
          2109,
          2111,
          2115,
          2121,
          2125,
          2127
        ]
      }
    ],
    "src": "32:21975:17"
  },
  "bytecode": "608060405234801561001057600080fd5b5061275c806100206000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063712fc00b116100c3578063b314d4141161007c578063b314d4141461030e578063bbd652c714610321578063c3c5a5471461033c578063c43088051461036a578063c61711341461037d578063e4aecb541461039057600080fd5b8063712fc00b1461028e5780637d3e3dbe146102a1578063a0af2903146102b4578063a14584c1146102c7578063a2f367ab146102da578063a6529eb5146102ed57600080fd5b80633f1cc5fa116101155780633f1cc5fa146101ff5780634420e4861461021257806355940e51146102255780635745ae28146102385780635eae3173146102585780636af0c3151461027b57600080fd5b8063063298b61461015d5780631e06b4b41461017257806322fa2762146101855780632ec2c246146101ae57806334a0dc10146101c15780633c5030bb146101d4575b600080fd5b61017061016b3660046123d6565b6103a3565b005b61017061018036600461243d565b61069d565b610198610193366004612476565b610869565b6040516101a59190612493565b60405180910390f35b6101706101bc366004612476565b6108d7565b6101706101cf3660046124d7565b610a88565b6101e76101e2366004612476565b610c3f565b6040516001600160a01b0390911681526020016101a5565b6101e761020d36600461250c565b610ca5565b610170610220366004612476565b610d1f565b6101e761023336600461250c565b610e5f565b61024b610246366004612476565b610e81565b6040516101a59190612538565b61026b61026636600461243d565b610ea5565b60405190151581526020016101a5565b61026b61028936600461250c565b610f25565b61017061029c366004612579565b610f8d565b6101706102af36600461243d565b6111d6565b6101706102c236600461243d565b611420565b6101706102d53660046123d6565b6115dd565b6101706102e83660046125b7565b611874565b6103006102fb36600461250c565b611a97565b6040519081526020016101a5565b61017061031c36600461243d565b611aff565b61030061032f366004612476565b6001600160a01b03163f90565b61026b61034a366004612476565b6001600160a01b0390811660009081526002602052604090205416151590565b61024b610378366004612476565b611df8565b61026b61038b36600461243d565b611e5f565b61026b61039e36600461243d565b611f3a565b83336001600160a01b0382161461049757806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561040e575060408051601f3d908101601f1916820190925261040b918101906125f5565b60015b61046c573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b606091505b508051600003610464576040516302cb050560e61b815260040160405180910390fd5b805181602001fd5b336001600160a01b0382161461049557604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b0380861660009081526002602052604090205416806104e05760405163bfc6c33760e01b81526001600160a01b03871660048201526024015b60405180910390fd5b856001600160a01b0316816001600160a01b03161461051d576040516304af4d6960e01b81526001600160a01b03821660048201526024016104d7565b6001600160a01b038616600090815260016020526040902084846105ab5760005b818110156105a557600088888381811061055a5761055a612612565b90506020020135905060006105788286611fa290919063ffffffff16565b90508061059b576040516308f0e61560e31b8152600481018390526024016104d7565b505060010161053e565b5061064d565b60005b8181101561064b5760008888838181106105ca576105ca612612565b9050602002013590507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470810361061357604051631eaebd5b60e31b815260040160405180910390fd5b600061061f8583611fae565b90508061064157604051620c35f560e91b8152600481018390526024016104d7565b50506001016105ae565b505b841515886001600160a01b03167f34e9f70c5a16a4df2a396cf0cbc4735eb3c7fb6ae40aaa0b34be7720121d1b96898960405161068b929190612628565b60405180910390a35050505050505050565b81336001600160a01b0382161461076157806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610708575060408051601f3d908101601f19168201909252610705918101906125f5565b60015b610736573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b336001600160a01b0382161461075f57604051631f9ebdff60e31b815260040160405180910390fd5b505b816001600160a01b0316836001600160a01b0316036107935760405163035956d760e31b815260040160405180910390fd5b6001600160a01b0380841660009081526002602052604090205416806107d75760405163bfc6c33760e01b81526001600160a01b03851660048201526024016104d7565b836001600160a01b0316816001600160a01b031614610814576040516304af4d6960e01b81526001600160a01b03821660048201526024016104d7565b6001600160a01b0380841660009081526002602052604090205416806108585760405163bfc6c33760e01b81526001600160a01b03851660048201526024016104d7565b6108628585611fba565b5050505050565b6001600160a01b03808216600081815260026020526040902054606092169081146108b6576001600160a01b03811660009081526001602052604090206108af90612113565b9392505050565b6001600160a01b03831660009081526001602052604090206108af90612113565b80336001600160a01b0382161461099b57806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610942575060408051601f3d908101601f1916820190925261093f918101906125f5565b60015b610970573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b336001600160a01b0382161461099957604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b0380831660009081526002602052604090205416806109df5760405163bfc6c33760e01b81526001600160a01b03841660048201526024016104d7565b826001600160a01b0316816001600160a01b031614610a45576001600160a01b0381166000908152600360205260409020610a1a9084612120565b506040516000906001600160a01b038084169190861690600080516020612707833981519152908490a45b6001600160a01b03831660008181526002602052604080822080546001600160a01b0319169055519091906000805160206126e7833981519152908390a3505050565b81336001600160a01b03821614610b4c57806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610af3575060408051601f3d908101601f19168201909252610af0918101906125f5565b60015b610b21573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b336001600160a01b03821614610b4a57604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b038084166000908152600260205260409020541680610b905760405163bfc6c33760e01b81526001600160a01b03851660048201526024016104d7565b836001600160a01b0316816001600160a01b031603610bc25760405163046fcd8560e31b815260040160405180910390fd5b6001600160a01b0381166000908152600360205260409020610be49085612120565b506001600160a01b0380851660008181526002602052604080822080546001600160a01b0319168417905551909284169190600080516020612707833981519152908490a48215610c3957610c398482611fba565b50505050565b6001600160a01b038082166000908152600260205260409020541680610c835760405163bfc6c33760e01b81526001600160a01b03831660048201526024016104d7565b816001600160a01b0316816001600160a01b031603610ca0575060005b919050565b6001600160a01b03808316600081815260026020526040812054909216908114610cf3576001600160a01b0381166000908152602081905260409020610ceb9084612135565b915050610d19565b6001600160a01b0384166000908152602081905260409020610d159084612135565b9150505b92915050565b80336001600160a01b03821614610de357806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d8a575060408051601f3d908101601f19168201909252610d87918101906125f5565b60015b610db8573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b336001600160a01b03821614610de157604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b038281166000908152600260205260409020541615610e1c57604051630ea075bf60e21b815260040160405180910390fd5b6001600160a01b03821660008181526002602052604080822080546001600160a01b0319168417905551600192916000805160206126e783398151915291a35050565b6001600160a01b03821660009081526003602052604081206108af9083612135565b6001600160a01b0381166000908152600360205260409020606090610d1990612113565b6001600160a01b0382811660008181526002602052604081205490928085163f929116908114610efa576001600160a01b0381166000908152600160205260409020610ef19083612141565b92505050610d19565b6001600160a01b0385166000908152600160205260409020610f1c9083612141565b95945050505050565b6001600160a01b03808316600081815260026020526040812054909216908114610f6b576001600160a01b0381166000908152600160205260409020610ceb9084612141565b6001600160a01b0384166000908152600160205260409020610d159084612141565b82336001600160a01b0382161461105157806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ff8575060408051601f3d908101601f19168201909252610ff5918101906125f5565b60015b611026573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b336001600160a01b0382161461104f57604051631f9ebdff60e31b815260040160405180910390fd5b505b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470830361109157604051631eaebd5b60e31b815260040160405180910390fd5b6001600160a01b0380851660009081526002602052604090205416806110d55760405163bfc6c33760e01b81526001600160a01b03861660048201526024016104d7565b846001600160a01b0316816001600160a01b031614611112576040516304af4d6960e01b81526001600160a01b03821660048201526024016104d7565b6001600160a01b03851660009081526001602052604090208361116457600061113b8287611fa2565b90508061115e576040516308f0e61560e31b8152600481018790526024016104d7565b50611194565b60006111708287611fae565b90508061119257604051620c35f560e91b8152600481018790526024016104d7565b505b83151585876001600160a01b03167fb8036058bafea884aabc446ca15619fd86f5464a4ad96f64164ad6f77444354d60405160405180910390a4505050505050565b81336001600160a01b0382161461129a57806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611241575060408051601f3d908101601f1916820190925261123e918101906125f5565b60015b61126f573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b336001600160a01b0382161461129857604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b038084166000908152600260205260409020541680156112d457604051630ea075bf60e21b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316036113065760405163347f118f60e01b815260040160405180910390fd5b6001600160a01b03808416600090815260026020526040902054168061134a5760405163bfc6c33760e01b81526001600160a01b03851660048201526024016104d7565b836001600160a01b0316816001600160a01b03161461138757604051631da3952760e21b81526001600160a01b03851660048201526024016104d7565b6001600160a01b03858116600090815260026020908152604080832080546001600160a01b031916948916948517905592825260039052206113c99086612159565b506040516001906001600160a01b038716906000805160206126e783398151915290600090a36040516001906001600160a01b03808716919088169060008051602061270783398151915290600090a45050505050565b81336001600160a01b038216146114e457806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561148b575060408051601f3d908101601f19168201909252611488918101906125f5565b60015b6114b9573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b336001600160a01b038216146114e257604051631f9ebdff60e31b815260040160405180910390fd5b505b826001600160a01b0316826001600160a01b0316036115165760405163035956d760e31b815260040160405180910390fd5b6001600160a01b0380841660009081526002602052604090205416801561155057604051630ea075bf60e21b815260040160405180910390fd5b6001600160a01b0380841660009081526002602052604090205416806115945760405163bfc6c33760e01b81526001600160a01b03851660048201526024016104d7565b6001600160a01b03851660008181526002602052604080822080546001600160a01b0319168417905551600192916000805160206126e783398151915291a36108628585611fba565b83336001600160a01b038216146116a157806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611648575060408051601f3d908101601f19168201909252611645918101906125f5565b60015b611676573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b336001600160a01b0382161461169f57604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b0380861660009081526002602052604090205416806116e55760405163bfc6c33760e01b81526001600160a01b03871660048201526024016104d7565b856001600160a01b0316816001600160a01b031614611722576040516304af4d6960e01b81526001600160a01b03821660048201526024016104d7565b6001600160a01b038616600090815260208190526040902084846117bd5760005b818110156117b757600088888381811061175f5761175f612612565b90506020020160208101906117749190612476565b905060006117828583612120565b9050806117ad576040516322a92e0760e11b81526001600160a01b03831660048201526024016104d7565b5050600101611743565b50611836565b60005b818110156118345760008888838181106117dc576117dc612612565b90506020020160208101906117f19190612476565b905060006117ff8583612159565b90508061182a576040516302ed108d60e21b81526001600160a01b03831660048201526024016104d7565b50506001016117c0565b505b841515886001600160a01b03167f02b85afdacb82d5512c6f05566b3018677ffcbd7e5f75e498bc64081131cbd6c898960405161068b929190612661565b82336001600160a01b0382161461193857806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156118df575060408051601f3d908101601f191682019092526118dc918101906125f5565b60015b61190d573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b336001600160a01b0382161461193657604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b03808516600090815260026020526040902054168061197c5760405163bfc6c33760e01b81526001600160a01b03861660048201526024016104d7565b846001600160a01b0316816001600160a01b0316146119b9576040516304af4d6960e01b81526001600160a01b03821660048201526024016104d7565b6001600160a01b038516600090815260208190526040902083611a135760006119e28287612120565b905080611a0d576040516322a92e0760e11b81526001600160a01b03871660048201526024016104d7565b50611a4c565b6000611a1f8287612159565b905080611a4a576040516302ed108d60e21b81526001600160a01b03871660048201526024016104d7565b505b831515856001600160a01b0316876001600160a01b03167f2738289d9deecdc30eb8ffc42876633caecca1ffa166e4efa89f408e17373a1a60405160405180910390a4505050505050565b6001600160a01b03808316600081815260026020526040812054909216908114611add576001600160a01b0381166000908152600160205260409020610ceb9084612135565b6001600160a01b0384166000908152600160205260409020610d159084612135565b81336001600160a01b03821614611bc357806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611b6a575060408051601f3d908101601f19168201909252611b67918101906125f5565b60015b611b98573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b336001600160a01b03821614611bc157604051631f9ebdff60e31b815260040160405180910390fd5b505b816001600160a01b0316836001600160a01b031603611bf55760405163347f118f60e01b815260040160405180910390fd5b6001600160a01b038216611c1c5760405163b05574d360e01b815260040160405180910390fd5b6001600160a01b038084166000908152600260205260409020541680611c605760405163bfc6c33760e01b81526001600160a01b03851660048201526024016104d7565b826001600160a01b0316816001600160a01b031603611c9d576040516373a4164960e01b81526001600160a01b03841660048201526024016104d7565b6001600160a01b038084166000908152600260205260409020541680611ce15760405163bfc6c33760e01b81526001600160a01b03851660048201526024016104d7565b836001600160a01b0316816001600160a01b031614611d1e57604051631da3952760e21b81526001600160a01b03851660048201526024016104d7565b846001600160a01b0316826001600160a01b031614611d84576001600160a01b0382166000908152600360205260409020611d599086612120565b506040516000906001600160a01b038085169190881690600080516020612707833981519152908490a45b6001600160a01b03858116600090815260026020908152604080832080546001600160a01b03191694891694851790559282526003905220611dc69086612159565b506040516001906001600160a01b03808716919088169060008051602061270783398151915290600090a45050505050565b6001600160a01b0380821660008181526002602052604090205460609216908114611e3e576001600160a01b03811660009081526020819052604090206108af90612113565b6001600160a01b03831660009081526020819052604090206108af90612113565b6001600160a01b038083166000908152600260205260408120549091168015611f30576001600160a01b0381166000908152602081815260408083206001909252909120611ead828661216e565b15611ed65760405163a8cf495d60e01b81526001600160a01b03861660048201526024016104d7565b6001600160a01b0385163b15611f2d576001600160a01b0385163f611efb8282612141565b15611f2b57604051635f3853a960e01b81526001600160a01b0387166004820152602481018290526044016104d7565b505b50505b5060019392505050565b6001600160a01b03808316600081815260026020526040812054909216908114611f80576001600160a01b0381166000908152602081905260409020610ceb908461216e565b6001600160a01b0384166000908152602081905260409020610d15908461216e565b60006108af8383612190565b60006108af8383612283565b6001600160a01b038116600090815260208181526040808320600190925282209091611fe5836122d2565b90506000611ff2836122d2565b905060005b8281101561208057600061200b8683612135565b6001600160a01b0389166000908152602081905260408120919250906120319083612159565b90508015612076576040516001906001600160a01b0380851691908c16907f2738289d9deecdc30eb8ffc42876633caecca1ffa166e4efa89f408e17373a1a90600090a45b5050600101611ff7565b5060005b8181101561210a5760006120988583612135565b6001600160a01b0389166000908152600160205260408120919250906120be9083611fae565b905080156121005760405160019083906001600160a01b038c16907fb8036058bafea884aabc446ca15619fd86f5464a4ad96f64164ad6f77444354d90600090a45b5050600101612084565b50505050505050565b606060006108af836122dc565b60006108af836001600160a01b038416612190565b60006108af8383612338565b600081815260018301602052604081205415156108af565b60006108af836001600160a01b038416612283565b6001600160a01b038116600090815260018301602052604081205415156108af565b600081815260018301602052604081205480156122795760006121b46001836126af565b85549091506000906121c8906001906126af565b905081811461222d5760008660000182815481106121e8576121e8612612565b906000526020600020015490508087600001848154811061220b5761220b612612565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061223e5761223e6126d0565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610d19565b6000915050610d19565b60008181526001830160205260408120546122ca57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610d19565b506000610d19565b6000610d19825490565b60608160000180548060200260200160405190810160405280929190818152602001828054801561232c57602002820191906000526020600020905b815481526020019060010190808311612318575b50505050509050919050565b600082600001828154811061234f5761234f612612565b9060005260206000200154905092915050565b6001600160a01b038116811461237757600080fd5b50565b60008083601f84011261238c57600080fd5b50813567ffffffffffffffff8111156123a457600080fd5b6020830191508360208260051b85010111156123bf57600080fd5b9250929050565b80358015158114610ca057600080fd5b600080600080606085870312156123ec57600080fd5b84356123f781612362565b9350602085013567ffffffffffffffff81111561241357600080fd5b61241f8782880161237a565b90945092506124329050604086016123c6565b905092959194509250565b6000806040838503121561245057600080fd5b823561245b81612362565b9150602083013561246b81612362565b809150509250929050565b60006020828403121561248857600080fd5b81356108af81612362565b6020808252825182820181905260009190848201906040850190845b818110156124cb578351835292840192918401916001016124af565b50909695505050505050565b600080604083850312156124ea57600080fd5b82356124f581612362565b9150612503602084016123c6565b90509250929050565b6000806040838503121561251f57600080fd5b823561252a81612362565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b818110156124cb5783516001600160a01b031683529284019291840191600101612554565b60008060006060848603121561258e57600080fd5b833561259981612362565b9250602084013591506125ae604085016123c6565b90509250925092565b6000806000606084860312156125cc57600080fd5b83356125d781612362565b925060208401356125e781612362565b91506125ae604085016123c6565b60006020828403121561260757600080fd5b81516108af81612362565b634e487b7160e01b600052603260045260246000fd5b6020808252810182905260006001600160fb1b0383111561264857600080fd5b8260051b80856040850137919091016040019392505050565b60208082528181018390526000908460408401835b868110156126a457823561268981612362565b6001600160a01b031682529183019190830190600101612676565b509695505050505050565b81810381811115610d1957634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fdfe86d03f430c7616021073d7a71766f632f1ce19f289aa989534d9f4732253eb590038c54977604f1a5c0a3604cbbecd0153c81e3131799ead95755e8bb5d5b9e8a2646970667358221220cbace472916ec2cd8f356962b35e0f0a547d8fb33ff9b8625a58989c689719a864736f6c63430008110033",
  "bytecodeSha1": "34944c666047b9889395e35803bb70fea79f8fa0",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "OperatorFilterRegistry",
  "coverageMap": {
    "branches": {
      "0": {},
      "13": {
        "EnumerableSet._remove": {
          "171": [
            3015,
            3030,
            false
          ],
          "172": [
            3497,
            3523,
            false
          ]
        }
      },
      "16": {},
      "17": {
        "OperatorFilterRegistry._copyEntries": {
          "169": [
            16387,
            16392,
            false
          ],
          "170": [
            16727,
            16732,
            false
          ]
        },
        "OperatorFilterRegistry.copyEntriesOf": {
          "126": [
            15013,
            15043,
            false
          ],
          "127": [
            15267,
            15293,
            false
          ]
        },
        "OperatorFilterRegistry.filteredCodeHashAt": {
          "155": [
            21652,
            21678,
            false
          ]
        },
        "OperatorFilterRegistry.filteredCodeHashes": {
          "128": [
            20494,
            20520,
            false
          ]
        },
        "OperatorFilterRegistry.filteredOperatorAt": {
          "133": [
            21072,
            21098,
            false
          ]
        },
        "OperatorFilterRegistry.filteredOperators": {
          "163": [
            19982,
            20008,
            false
          ]
        },
        "OperatorFilterRegistry.isCodeHashFiltered": {
          "136": [
            18755,
            18781,
            false
          ]
        },
        "OperatorFilterRegistry.isCodeHashOfFiltered": {
          "135": [
            19307,
            19333,
            false
          ]
        },
        "OperatorFilterRegistry.isOperatorAllowed": {
          "164": [
            2634,
            2660,
            false
          ],
          "165": [
            2957,
            2996,
            false
          ],
          "166": [
            3080,
            3104,
            false
          ],
          "167": [
            3182,
            3222,
            false
          ]
        },
        "OperatorFilterRegistry.isOperatorFiltered": {
          "168": [
            18288,
            18314,
            false
          ]
        },
        "OperatorFilterRegistry.register": {
          "134": [
            3651,
            3691,
            false
          ]
        },
        "OperatorFilterRegistry.registerAndCopyEntries": {
          "145": [
            6171,
            6201,
            false
          ],
          "146": [
            6327,
            6353,
            false
          ]
        },
        "OperatorFilterRegistry.registerAndSubscribe": {
          "142": [
            5105,
            5131,
            false
          ],
          "143": [
            5197,
            5223,
            false
          ],
          "144": [
            5478,
            5518,
            false
          ]
        },
        "OperatorFilterRegistry.subscribe": {
          "156": [
            1679,
            1697,
            false
          ],
          "157": [
            1785,
            1804,
            false
          ],
          "158": [
            12807,
            12836,
            false
          ],
          "159": [
            12906,
            12935,
            false
          ],
          "160": [
            13169,
            13200,
            false
          ],
          "161": [
            13478,
            13524,
            false
          ],
          "162": [
            13632,
            13658,
            false
          ]
        },
        "OperatorFilterRegistry.subscriptionOf": {
          "132": [
            17269,
            17295,
            false
          ]
        },
        "OperatorFilterRegistry.unregister": {
          "129": [
            4494,
            4520,
            false
          ]
        },
        "OperatorFilterRegistry.unsubscribe": {
          "130": [
            14422,
            14448,
            false
          ],
          "131": [
            14681,
            14700,
            false
          ]
        },
        "OperatorFilterRegistry.updateCodeHash": {
          "137": [
            8121,
            8145,
            false
          ],
          "138": [
            8367,
            8393,
            false
          ],
          "139": [
            8581,
            8589,
            false
          ],
          "140": [
            8677,
            8684,
            false
          ],
          "141": [
            8852,
            8857,
            false
          ]
        },
        "OperatorFilterRegistry.updateCodeHashes": {
          "121": [
            11058,
            11084,
            false
          ],
          "122": [
            11349,
            11357,
            false
          ],
          "123": [
            11580,
            11587,
            false
          ],
          "124": [
            11857,
            11881,
            false
          ],
          "125": [
            12053,
            12058,
            false
          ]
        },
        "OperatorFilterRegistry.updateOperator": {
          "151": [
            7202,
            7228,
            false
          ],
          "152": [
            7414,
            7422,
            false
          ],
          "153": [
            7509,
            7516,
            false
          ],
          "154": [
            7682,
            7687,
            false
          ]
        },
        "OperatorFilterRegistry.updateOperators": {
          "147": [
            9499,
            9525,
            false
          ],
          "148": [
            9786,
            9794,
            false
          ],
          "149": [
            10014,
            10021,
            false
          ],
          "150": [
            10358,
            10363,
            false
          ]
        }
      },
      "18": {},
      "8": {}
    },
    "statements": {
      "0": {},
      "13": {
        "EnumerableSet._add": {
          "113": [
            2327,
            2350
          ],
          "114": [
            2485,
            2525
          ],
          "115": [
            2539,
            2550
          ],
          "116": [
            2581,
            2593
          ]
        },
        "EnumerableSet._at": {
          "120": [
            4990,
            5015
          ]
        },
        "EnumerableSet._contains": {
          "103": [
            4336,
            4367
          ]
        },
        "EnumerableSet._length": {
          "118": [
            4530,
            4555
          ]
        },
        "EnumerableSet._remove": {
          "107": [
            3685,
            3723
          ],
          "108": [
            3797,
            3833
          ],
          "109": [
            3969,
            3986
          ],
          "110": [
            4054,
            4080
          ],
          "111": [
            4095,
            4106
          ],
          "112": [
            4137,
            4149
          ]
        },
        "EnumerableSet._values": {
          "119": [
            5646,
            5664
          ]
        },
        "EnumerableSet.add": {
          "96": [
            5997,
            6027
          ],
          "105": [
            8383,
            8440
          ]
        },
        "EnumerableSet.at": {
          "102": [
            9648,
            9704
          ]
        },
        "EnumerableSet.contains": {
          "104": [
            6508,
            6543
          ],
          "106": [
            8948,
            9010
          ]
        },
        "EnumerableSet.length": {
          "117": [
            9180,
            9206
          ]
        },
        "EnumerableSet.remove": {
          "95": [
            6291,
            6324
          ],
          "101": [
            8704,
            8764
          ]
        }
      },
      "16": {},
      "17": {
        "OperatorFilterRegistry._copyEntries": {
          "97": [
            16416,
            16464
          ],
          "98": [
            16222,
            16225
          ],
          "99": [
            16756,
            16804
          ],
          "100": [
            16560,
            16563
          ]
        },
        "OperatorFilterRegistry.codeHashOf": {
          "0": [
            21980,
            21997
          ]
        },
        "OperatorFilterRegistry.copyEntriesOf": {
          "10": [
            15009,
            15097
          ],
          "11": [
            15165,
            15254
          ],
          "12": [
            15263,
            15368
          ],
          "13": [
            15452,
            15557
          ],
          "14": [
            15566,
            15608
          ]
        },
        "OperatorFilterRegistry.filteredCodeHashAt": {
          "73": [
            21694,
            21744
          ],
          "74": [
            21764,
            21812
          ]
        },
        "OperatorFilterRegistry.filteredCodeHashes": {
          "15": [
            20536,
            20585
          ],
          "16": [
            20605,
            20652
          ]
        },
        "OperatorFilterRegistry.filteredOperatorAt": {
          "30": [
            21114,
            21163
          ],
          "31": [
            21183,
            21230
          ]
        },
        "OperatorFilterRegistry.filteredOperators": {
          "86": [
            20024,
            20072
          ],
          "87": [
            20092,
            20138
          ]
        },
        "OperatorFilterRegistry.isCodeHashFiltered": {
          "39": [
            18797,
            18856
          ],
          "40": [
            18876,
            18933
          ]
        },
        "OperatorFilterRegistry.isCodeHashOfFiltered": {
          "37": [
            19349,
            19408
          ],
          "38": [
            19428,
            19485
          ]
        },
        "OperatorFilterRegistry.isOperatorAllowed": {
          "88": [
            2812,
            2867
          ],
          "89": [
            2881,
            2938
          ],
          "90": [
            2953,
            3063
          ],
          "91": [
            3178,
            3308
          ],
          "92": [
            3341,
            3352
          ]
        },
        "OperatorFilterRegistry.isOperatorFiltered": {
          "93": [
            18330,
            18388
          ],
          "94": [
            18408,
            18464
          ]
        },
        "OperatorFilterRegistry.isRegistered": {
          "1": [
            19652,
            19699
          ]
        },
        "OperatorFilterRegistry.register": {
          "32": [
            3647,
            3744
          ],
          "33": [
            3753,
            3792
          ],
          "34": [
            3802,
            3844
          ]
        },
        "OperatorFilterRegistry.registerAndCopyEntries": {
          "55": [
            6167,
            6255
          ],
          "56": [
            6323,
            6406
          ],
          "57": [
            6490,
            6595
          ],
          "58": [
            6604,
            6643
          ],
          "59": [
            6653,
            6695
          ],
          "60": [
            6705,
            6747
          ]
        },
        "OperatorFilterRegistry.registerAndSubscribe": {
          "47": [
            5101,
            5184
          ],
          "48": [
            5193,
            5280
          ],
          "49": [
            5362,
            5465
          ],
          "50": [
            5474,
            5609
          ],
          "51": [
            5619,
            5660
          ],
          "52": [
            5670,
            5712
          ],
          "53": [
            5722,
            5764
          ],
          "54": [
            5774,
            5830
          ]
        },
        "OperatorFilterRegistry.subscribe": {
          "75": [
            12803,
            12893
          ],
          "76": [
            12902,
            12999
          ],
          "77": [
            13067,
            13156
          ],
          "78": [
            13165,
            13268
          ],
          "79": [
            13356,
            13465
          ],
          "80": [
            13474,
            13618
          ],
          "81": [
            13674,
            13719
          ],
          "82": [
            13733,
            13790
          ],
          "83": [
            13810,
            13854
          ],
          "84": [
            13864,
            13909
          ],
          "85": [
            13919,
            13978
          ]
        },
        "OperatorFilterRegistry.subscriberAt": {
          "35": [
            17958,
            17999
          ]
        },
        "OperatorFilterRegistry.subscribers": {
          "36": [
            17611,
            17651
          ]
        },
        "OperatorFilterRegistry.subscriptionOf": {
          "28": [
            17119,
            17160
          ],
          "29": [
            17311,
            17336
          ]
        },
        "OperatorFilterRegistry.unregister": {
          "17": [
            4392,
            4481
          ],
          "18": [
            4536,
            4581
          ],
          "19": [
            4595,
            4652
          ],
          "20": [
            4672,
            4711
          ],
          "21": [
            4721,
            4764
          ]
        },
        "OperatorFilterRegistry.unsubscribe": {
          "22": [
            14320,
            14409
          ],
          "23": [
            14418,
            14497
          ],
          "24": [
            14506,
            14551
          ],
          "25": [
            14561,
            14600
          ],
          "26": [
            14610,
            14667
          ],
          "27": [
            14716,
            14754
          ]
        },
        "OperatorFilterRegistry.updateCodeHash": {
          "41": [
            8117,
            8197
          ],
          "42": [
            8265,
            8354
          ],
          "43": [
            8363,
            8468
          ],
          "44": [
            8672,
            8755
          ],
          "45": [
            8847,
            8932
          ],
          "46": [
            8951,
            9003
          ]
        },
        "OperatorFilterRegistry.updateCodeHashes": {
          "2": [
            10956,
            11045
          ],
          "3": [
            11054,
            11159
          ],
          "4": [
            11575,
            11674
          ],
          "5": [
            11419,
            11422
          ],
          "6": [
            11853,
            11957
          ],
          "7": [
            12048,
            12149
          ],
          "8": [
            11772,
            11775
          ],
          "9": [
            12200,
            12256
          ]
        },
        "OperatorFilterRegistry.updateOperator": {
          "68": [
            7100,
            7189
          ],
          "69": [
            7198,
            7303
          ],
          "70": [
            7504,
            7586
          ],
          "71": [
            7677,
            7761
          ],
          "72": [
            7780,
            7832
          ]
        },
        "OperatorFilterRegistry.updateOperators": {
          "61": [
            9397,
            9486
          ],
          "62": [
            9495,
            9600
          ],
          "63": [
            10009,
            10107
          ],
          "64": [
            9855,
            9858
          ],
          "65": [
            10353,
            10453
          ],
          "66": [
            10204,
            10207
          ],
          "67": [
            10504,
            10558
          ]
        }
      },
      "18": {},
      "8": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/EnumerableSet",
    "IOperatorFilterRegistry",
    "OperatorFilterRegistryErrorsAndEvents",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Ownable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "776:21230:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10735:1528;;;;;;:::i;:::-;;:::i;:::-;;14890:725;;;;;;:::i;:::-;;:::i;20332:327::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4243:528;;;;;;:::i;:::-;;:::i;14144:627::-;;;;;;:::i;:::-;;:::i;17020:333::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3098:32:24;;;3080:51;;3068:2;3053:18;17020:333:17;2934:203:24;20904:333:17;;;;;;:::i;:::-;;:::i;3559:292::-;;;;;;:::i;:::-;;:::i;17859:147::-;;;;;;:::i;:::-;;:::i;17519:139::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;19075:417::-;;;;;;:::i;:::-;;:::i;:::-;;;4290:14:24;;4283:22;4265:41;;4253:2;4238:18;19075:417:17;4125:187:24;18587:353:17;;;;;;:::i;:::-;;:::i;7970:1040::-;;;;;;:::i;:::-;;:::i;4920:917::-;;;;;;:::i;:::-;;:::i;6019:735::-;;;;;;:::i;:::-;;:::i;9178:1387::-;;;;;;:::i;:::-;;:::i;6894:945::-;;;;;;:::i;:::-;;:::i;21484:335::-;;;;;;:::i;:::-;;:::i;:::-;;;6277:25:24;;;6265:2;6250:18;21484:335:17;6131:177:24;12689:1296:17;;;;;;:::i;:::-;;:::i;21907:97::-;;;;;;:::i;:::-;-1:-1:-1;;;;;21987:10:17;;;21907:97;19571:135;;;;;;:::i;:::-;-1:-1:-1;;;;;19659:26:17;;;19636:4;19659:26;;;:14;:26;;;;;;;:40;;;19571:135;19821:324;;;;;;:::i;:::-;;:::i;2467:892::-;;;;;;:::i;:::-;;:::i;18120:351::-;;;;;;:::i;:::-;;:::i;10735:1528::-;10871:10;1679;-1:-1:-1;;;;;1679:18:17;;;1675:564;;1725:4;-1:-1:-1;;;;;1717:19:17;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1717:21:17;;;;;;;;-1:-1:-1;;1717:21:17;;;;;;;;;;;;:::i;:::-;;;1713:516;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1939:6;:13;1956:1;1939:18;1935:280;;1988:12;;-1:-1:-1;;;1988:12:17;;;;;;;;;;;1935:280;2167:6;2161:13;2152:6;2148:2;2144:15;2137:38;1713:516;1785:10;-1:-1:-1;;;;;1785:19:17;;;1781:93;;1835:20;;-1:-1:-1;;;1835:20:17;;;;;;;;;;;1781:93;1739:149;1713:516;-1:-1:-1;;;;;10920:26:17;;::::1;10897:20;10920:26:::0;;;:14:::1;:26;::::0;;;;;::::1;::::0;10956:89:::1;;11009:25;::::0;-1:-1:-1;;;11009:25:17;;-1:-1:-1;;;;;3098:32:24;;11009:25:17::1;::::0;::::1;3080:51:24::0;3053:18;;11009:25:17::1;;;;;;;;10956:89;11074:10;-1:-1:-1::0;;;;;11058:26:17::1;:12;-1:-1:-1::0;;;;;11058:26:17::1;;11054:105;;11107:41;::::0;-1:-1:-1;;;11107:41:17;;-1:-1:-1;;;;;3098:32:24;;11107:41:17::1;::::0;::::1;3080:51:24::0;3053:18;;11107:41:17::1;2934:203:24::0;11054:105:17::1;-1:-1:-1::0;;;;;11225:31:17;::::1;11168:54;11225:31:::0;;;:19:::1;:31;::::0;;;;11293:10;11349:8;11344:837:::1;;11382:9;11377:315;11401:16;11397:1;:20;11377:315;;;11446:16;11465:10;;11476:1;11465:13;;;;;;;:::i;:::-;;;;;;;11446:32;;11500:12;11515:38;11544:8;11515:21;:28;;:38;;;;:::i;:::-;11500:53;;11580:7;11575:99;;11622:29;::::0;-1:-1:-1;;;11622:29:17;;::::1;::::0;::::1;6277:25:24::0;;;6250:18;;11622:29:17::1;6131:177:24::0;11575:99:17::1;-1:-1:-1::0;;11419:3:17::1;;11377:315;;;;11344:837;;;11735:9;11730:437;11754:16;11750:1;:20;11730:437;;;11799:16;11818:10;;11829:1;11818:13;;;;;;;:::i;:::-;;;;;;;11799:32;;1229:13;11857:8;:24:::0;11853:104:::1;;11916:18;;-1:-1:-1::0;;;11916:18:17::1;;;;;;;;;;;11853:104;11978:10;11991:35;:21:::0;12017:8;11991:25:::1;:35::i;:::-;11978:48;;12053:5;12048:101;;12093:33;::::0;-1:-1:-1;;;12093:33:17;;::::1;::::0;::::1;6277:25:24::0;;;6250:18;;12093:33:17::1;6131:177:24::0;12048:101:17::1;-1:-1:-1::0;;11772:3:17::1;;11730:437;;;;11344:837;12247:8;12205:51;;12223:10;-1:-1:-1::0;;;;;12205:51:17::1;;12235:10;;12205:51;;;;;;;:::i;:::-;;;;;;;;10887:1376;;;10735:1528:::0;;;;;:::o;14890:725::-;14987:10;1679;-1:-1:-1;;;;;1679:18:17;;;1675:564;;1725:4;-1:-1:-1;;;;;1717:19:17;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1717:21:17;;;;;;;;-1:-1:-1;;1717:21:17;;;;;;;;;;;;:::i;:::-;;;1713:516;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1785:10;-1:-1:-1;;;;;1785:19:17;;;1781:93;;1835:20;;-1:-1:-1;;;1835:20:17;;;;;;;;;;;1781:93;1739:149;1713:516;15027:16:::1;-1:-1:-1::0;;;;;15013:30:17::1;:10;-1:-1:-1::0;;;;;15013:30:17::1;::::0;15009:88:::1;;15066:20;;-1:-1:-1::0;;;15066:20:17::1;;;;;;;;;;;15009:88;-1:-1:-1::0;;;;;15129:26:17;;::::1;15106:20;15129:26:::0;;;:14:::1;:26;::::0;;;;;::::1;::::0;15165:89:::1;;15218:25;::::0;-1:-1:-1;;;15218:25:17;;-1:-1:-1;;;;;3098:32:24;;15218:25:17::1;::::0;::::1;3080:51:24::0;3053:18;;15218:25:17::1;2934:203:24::0;15165:89:17::1;15283:10;-1:-1:-1::0;;;;;15267:26:17::1;:12;-1:-1:-1::0;;;;;15267:26:17::1;;15263:105;;15316:41;::::0;-1:-1:-1;;;15316:41:17;;-1:-1:-1;;;;;3098:32:24;;15316:41:17::1;::::0;::::1;3080:51:24::0;3053:18;;15316:41:17::1;2934:203:24::0;15263:105:17::1;-1:-1:-1::0;;;;;15410:32:17;;::::1;15377:30;15410:32:::0;;;:14:::1;:32;::::0;;;;;::::1;::::0;15452:105:::1;;15515:31;::::0;-1:-1:-1;;;15515:31:17;;-1:-1:-1;;;;;3098:32:24;;15515:31:17::1;::::0;::::1;3080:51:24::0;3053:18;;15515:31:17::1;2934:203:24::0;15452:105:17::1;15566:42;15579:10;15591:16;15566:12;:42::i;:::-;14999:616;;14890:725:::0;;;:::o;20332:327::-;-1:-1:-1;;;;;20454:26:17;;;20431:20;20454:26;;;:14;:26;;;;;;20403:16;;20454:26;;20494;;20490:106;;-1:-1:-1;;;;;20543:33:17;;;;;;:19;:33;;;;;:42;;:40;:42::i;:::-;20536:49;20332:327;-1:-1:-1;;;20332:327:17:o;20490:106::-;-1:-1:-1;;;;;20612:31:17;;;;;;:19;:31;;;;;:40;;:38;:40::i;4243:528::-;4311:10;1679;-1:-1:-1;;;;;1679:18:17;;;1675:564;;1725:4;-1:-1:-1;;;;;1717:19:17;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1717:21:17;;;;;;;;-1:-1:-1;;1717:21:17;;;;;;;;;;;;:::i;:::-;;;1713:516;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1785:10;-1:-1:-1;;;;;1785:19:17;;;1781:93;;1835:20;;-1:-1:-1;;;1835:20:17;;;;;;;;;;;1781:93;1739:149;1713:516;-1:-1:-1;;;;;4356:26:17;;::::1;4333:20;4356:26:::0;;;:14:::1;:26;::::0;;;;;::::1;::::0;4392:89:::1;;4445:25;::::0;-1:-1:-1;;;4445:25:17;;-1:-1:-1;;;;;3098:32:24;;4445:25:17::1;::::0;::::1;3080:51:24::0;3053:18;;4445:25:17::1;2934:203:24::0;4392:89:17::1;4510:10;-1:-1:-1::0;;;;;4494:26:17::1;:12;-1:-1:-1::0;;;;;4494:26:17::1;;4490:173;;-1:-1:-1::0;;;;;4536:26:17;::::1;;::::0;;;:12:::1;:26;::::0;;;;:45:::1;::::0;4570:10;4536:33:::1;:45::i;:::-;-1:-1:-1::0;4600:52:17::1;::::0;4646:5:::1;::::0;-1:-1:-1;;;;;4600:52:17;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;;;;;;;4600:52:17;4646:5;;4600:52:::1;4490:173;-1:-1:-1::0;;;;;4672:26:17;::::1;4709:1;4672:26:::0;;;:14:::1;:26;::::0;;;;;:39;;-1:-1:-1;;;;;;4672:39:17::1;::::0;;4726:38;4709:1;;4672:26;-1:-1:-1;;;;;;;;;;;4726:38:17;4709:1;;4726:38:::1;4323:448;4243:528:::0;;:::o;14144:627::-;14239:10;1679;-1:-1:-1;;;;;1679:18:17;;;1675:564;;1725:4;-1:-1:-1;;;;;1717:19:17;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1717:21:17;;;;;;;;-1:-1:-1;;1717:21:17;;;;;;;;;;;;:::i;:::-;;;1713:516;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1785:10;-1:-1:-1;;;;;1785:19:17;;;1781:93;;1835:20;;-1:-1:-1;;;1835:20:17;;;;;;;;;;;1781:93;1739:149;1713:516;-1:-1:-1;;;;;14284:26:17;;::::1;14261:20;14284:26:::0;;;:14:::1;:26;::::0;;;;;::::1;::::0;14320:89:::1;;14373:25;::::0;-1:-1:-1;;;14373:25:17;;-1:-1:-1;;;;;3098:32:24;;14373:25:17::1;::::0;::::1;3080:51:24::0;3053:18;;14373:25:17::1;2934:203:24::0;14320:89:17::1;14438:10;-1:-1:-1::0;;;;;14422:26:17::1;:12;-1:-1:-1::0;;;;;14422:26:17::1;::::0;14418:79:::1;;14471:15;;-1:-1:-1::0;;;14471:15:17::1;;;;;;;;;;;14418:79;-1:-1:-1::0;;;;;14506:26:17;::::1;;::::0;;;:12:::1;:26;::::0;;;;:45:::1;::::0;14540:10;14506:33:::1;:45::i;:::-;-1:-1:-1::0;;;;;;14561:26:17;;::::1;;::::0;;;:14:::1;:26;::::0;;;;;:39;;-1:-1:-1;;;;;;14561:39:17::1;::::0;::::1;::::0;;14615:52;14561:26;;14615:52;::::1;::::0;14561:26;-1:-1:-1;;;;;;;;;;;14615:52:17;14561:26;;14615:52:::1;14681:19;14677:88;;;14716:38;14729:10;14741:12;14716;:38::i;:::-;14251:520;14144:627:::0;;;:::o;17020:333::-;-1:-1:-1;;;;;17134:26:17;;;17087:20;17134:26;;;:14;:26;;;;;;;;17170:177;;17223:25;;-1:-1:-1;;;17223:25:17;;-1:-1:-1;;;;;3098:32:24;;17223:25:17;;;3080:51:24;3053:18;;17223:25:17;2934:203:24;17170:177:17;17285:10;-1:-1:-1;;;;;17269:26:17;:12;-1:-1:-1;;;;;17269:26:17;;17265:82;;-1:-1:-1;17334:1:17;17265:82;17020:333;;;:::o;20904:::-;-1:-1:-1;;;;;21032:26:17;;;20990:7;21032:26;;;:14;:26;;;;;;20990:7;;21032:26;;21072;;21068:106;;-1:-1:-1;;;;;21121:32:17;;:18;:32;;;;;;;;;;:42;;21157:5;21121:35;:42::i;:::-;21114:49;;;;;21068:106;-1:-1:-1;;;;;21190:30:17;;:18;:30;;;;;;;;;;:40;;21224:5;21190:33;:40::i;:::-;21183:47;;;20904:333;;;;;:::o;3559:292::-;3625:10;1679;-1:-1:-1;;;;;1679:18:17;;;1675:564;;1725:4;-1:-1:-1;;;;;1717:19:17;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1717:21:17;;;;;;;;-1:-1:-1;;1717:21:17;;;;;;;;;;;;:::i;:::-;;;1713:516;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1785:10;-1:-1:-1;;;;;1785:19:17;;;1781:93;;1835:20;;-1:-1:-1;;;1835:20:17;;;;;;;;;;;1781:93;1739:149;1713:516;-1:-1:-1;;;;;3651:26:17;;::::1;3689:1;3651:26:::0;;;:14:::1;:26;::::0;;;;;::::1;:40:::0;3647:97:::1;;3714:19;;-1:-1:-1::0;;;3714:19:17::1;;;;;;;;;;;3647:97;-1:-1:-1::0;;;;;3753:26:17;::::1;;::::0;;;:14:::1;:26;::::0;;;;;:39;;-1:-1:-1;;;;;;3753:39:17::1;::::0;::::1;::::0;;3807:37;3753:39;;:26;-1:-1:-1;;;;;;;;;;;3807:37:17;::::1;3559:292:::0;;:::o;17859:147::-;-1:-1:-1;;;;;17965:24:17;;17939:7;17965:24;;;:12;:24;;;;;:34;;17993:5;17965:27;:34::i;17519:139::-;-1:-1:-1;;;;;17618:24:17;;;;;;:12;:24;;;;;17583:16;;17618:33;;:31;:33::i;19075:417::-;-1:-1:-1;;;;;19267:26:17;;;19174:4;19267:26;;;:14;:26;;;;;;19174:4;;19209:25;;;;;19267:26;;;19307;;19303:116;;-1:-1:-1;;;;;19356:33:17;;;;;;:19;:33;;;;;:52;;19399:8;19356:42;:52::i;:::-;19349:59;;;;;;19303:116;-1:-1:-1;;;;;19435:31:17;;;;;;:19;:31;;;;;:50;;19476:8;19435:40;:50::i;:::-;19428:57;19075:417;-1:-1:-1;;;;;19075:417:17:o;18587:353::-;-1:-1:-1;;;;;18715:26:17;;;18676:4;18715:26;;;:14;:26;;;;;;18676:4;;18715:26;;18755;;18751:116;;-1:-1:-1;;;;;18804:33:17;;;;;;:19;:33;;;;;:52;;18847:8;18804:42;:52::i;18751:116::-;-1:-1:-1;;;;;18883:31:17;;;;;;:19;:31;;;;;:50;;18924:8;18883:40;:50::i;7970:1040::-;8091:10;1679;-1:-1:-1;;;;;1679:18:17;;;1675:564;;1725:4;-1:-1:-1;;;;;1717:19:17;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1717:21:17;;;;;;;;-1:-1:-1;;1717:21:17;;;;;;;;;;;;:::i;:::-;;;1713:516;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1785:10;-1:-1:-1;;;;;1785:19:17;;;1781:93;;1835:20;;-1:-1:-1;;;1835:20:17;;;;;;;;;;;1781:93;1739:149;1713:516;1229:13:::1;8121:8;:24:::0;8117:80:::1;;8168:18;;-1:-1:-1::0;;;8168:18:17::1;;;;;;;;;;;8117:80;-1:-1:-1::0;;;;;8229:26:17;;::::1;8206:20;8229:26:::0;;;:14:::1;:26;::::0;;;;;::::1;::::0;8265:89:::1;;8318:25;::::0;-1:-1:-1;;;8318:25:17;;-1:-1:-1;;;;;3098:32:24;;8318:25:17::1;::::0;::::1;3080:51:24::0;3053:18;;8318:25:17::1;2934:203:24::0;8265:89:17::1;8383:10;-1:-1:-1::0;;;;;8367:26:17::1;:12;-1:-1:-1::0;;;;;8367:26:17::1;;8363:105;;8416:41;::::0;-1:-1:-1;;;8416:41:17;;-1:-1:-1;;;;;3098:32:24;;8416:41:17::1;::::0;::::1;3080:51:24::0;3053:18;;8416:41:17::1;2934:203:24::0;8363:105:17::1;-1:-1:-1::0;;;;;8534:31:17;::::1;8477:54;8534:31:::0;;;:19:::1;:31;::::0;;;;8581:8;8576:366:::1;;8605:12;8620:38;:21:::0;8649:8;8620:28:::1;:38::i;:::-;8605:53;;8677:7;8672:83;;8711:29;::::0;-1:-1:-1;;;8711:29:17;;::::1;::::0;::::1;6277:25:24::0;;;6250:18;;8711:29:17::1;6131:177:24::0;8672:83:17::1;8591:174;8576:366;;;8785:10;8798:35;:21:::0;8824:8;8798:25:::1;:35::i;:::-;8785:48;;8852:5;8847:85;;8884:33;::::0;-1:-1:-1;;;8884:33:17;;::::1;::::0;::::1;6277:25:24::0;;;6250:18;;8884:33:17::1;6131:177:24::0;8847:85:17::1;8771:171;8576:366;8994:8;8956:47;;8984:8;8972:10;-1:-1:-1::0;;;;;8956:47:17::1;;;;;;;;;;;8107:903;;7970:1040:::0;;;;:::o;4920:917::-;5020:10;1679;-1:-1:-1;;;;;1679:18:17;;;1675:564;;1725:4;-1:-1:-1;;;;;1717:19:17;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1717:21:17;;;;;;;;-1:-1:-1;;1717:21:17;;;;;;;;;;;;:::i;:::-;;;1713:516;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1785:10;-1:-1:-1;;;;;1785:19:17;;;1781:93;;1835:20;;-1:-1:-1;;;1835:20:17;;;;;;;;;;;1781:93;1739:149;1713:516;-1:-1:-1;;;;;5065:26:17;;::::1;5042:20;5065:26:::0;;;:14:::1;:26;::::0;;;;;::::1;5105::::0;;5101:83:::1;;5154:19;;-1:-1:-1::0;;;5154:19:17::1;;;;;;;;;;;5101:83;5211:12;-1:-1:-1::0;;;;;5197:26:17::1;:10;-1:-1:-1::0;;;;;5197:26:17::1;::::0;5193:87:::1;;5246:23;;-1:-1:-1::0;;;5246:23:17::1;;;;;;;;;;;5193:87;-1:-1:-1::0;;;;;5324:28:17;;::::1;5289:32;5324:28:::0;;;:14:::1;:28;::::0;;;;;::::1;::::0;5362:103:::1;;5427:27;::::0;-1:-1:-1;;;5427:27:17;;-1:-1:-1;;;;;3098:32:24;;5427:27:17::1;::::0;::::1;3080:51:24::0;3053:18;;5427:27:17::1;2934:203:24::0;5362:103:17::1;5506:12;-1:-1:-1::0;;;;;5478:40:17::1;:24;-1:-1:-1::0;;;;;5478:40:17::1;;5474:135;;5541:57;::::0;-1:-1:-1;;;5541:57:17;;-1:-1:-1;;;;;3098:32:24;;5541:57:17::1;::::0;::::1;3080:51:24::0;3053:18;;5541:57:17::1;2934:203:24::0;5474:135:17::1;-1:-1:-1::0;;;;;5619:26:17;;::::1;;::::0;;;:14:::1;:26;::::0;;;;;;;:41;;-1:-1:-1;;;;;;5619:41:17::1;::::0;;::::1;::::0;;::::1;::::0;;5670:26;;;:12:::1;:26:::0;;;:42:::1;::::0;5619:26;5670:30:::1;:42::i;:::-;-1:-1:-1::0;5727:37:17::1;::::0;5759:4:::1;::::0;-1:-1:-1;;;;;5727:37:17;::::1;::::0;-1:-1:-1;;;;;;;;;;;5727:37:17;;;::::1;5779:51;::::0;5825:4:::1;::::0;-1:-1:-1;;;;;5779:51:17;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;;;;;;;5779:51:17;;;::::1;5032:805;;4920:917:::0;;;:::o;6019:735::-;6141:10;1679;-1:-1:-1;;;;;1679:18:17;;;1675:564;;1725:4;-1:-1:-1;;;;;1717:19:17;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1717:21:17;;;;;;;;-1:-1:-1;;1717:21:17;;;;;;;;;;;;:::i;:::-;;;1713:516;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1785:10;-1:-1:-1;;;;;1785:19:17;;;1781:93;;1835:20;;-1:-1:-1;;;1835:20:17;;;;;;;;;;;1781:93;1739:149;1713:516;6191:10:::1;-1:-1:-1::0;;;;;6171:30:17::1;:16;-1:-1:-1::0;;;;;6171:30:17::1;::::0;6167:88:::1;;6224:20;;-1:-1:-1::0;;;6224:20:17::1;;;;;;;;;;;6167:88;-1:-1:-1::0;;;;;6287:26:17;;::::1;6264:20;6287:26:::0;;;:14:::1;:26;::::0;;;;;::::1;6327::::0;;6323:83:::1;;6376:19;;-1:-1:-1::0;;;6376:19:17::1;;;;;;;;;;;6323:83;-1:-1:-1::0;;;;;6448:32:17;;::::1;6415:30;6448:32:::0;;;:14:::1;:32;::::0;;;;;::::1;::::0;6490:105:::1;;6553:31;::::0;-1:-1:-1;;;6553:31:17;;-1:-1:-1;;;;;3098:32:24;;6553:31:17::1;::::0;::::1;3080:51:24::0;3053:18;;6553:31:17::1;2934:203:24::0;6490:105:17::1;-1:-1:-1::0;;;;;6604:26:17;::::1;;::::0;;;:14:::1;:26;::::0;;;;;:39;;-1:-1:-1;;;;;;6604:39:17::1;::::0;::::1;::::0;;6658:37;6604:39;;:26;-1:-1:-1;;;;;;;;;;;6658:37:17;::::1;6705:42;6718:10;6730:16;6705:12;:42::i;9178:1387::-:0;9312:10;1679;-1:-1:-1;;;;;1679:18:17;;;1675:564;;1725:4;-1:-1:-1;;;;;1717:19:17;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1717:21:17;;;;;;;;-1:-1:-1;;1717:21:17;;;;;;;;;;;;:::i;:::-;;;1713:516;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1785:10;-1:-1:-1;;;;;1785:19:17;;;1781:93;;1835:20;;-1:-1:-1;;;1835:20:17;;;;;;;;;;;1781:93;1739:149;1713:516;-1:-1:-1;;;;;9361:26:17;;::::1;9338:20;9361:26:::0;;;:14:::1;:26;::::0;;;;;::::1;::::0;9397:89:::1;;9450:25;::::0;-1:-1:-1;;;9450:25:17;;-1:-1:-1;;;;;3098:32:24;;9450:25:17::1;::::0;::::1;3080:51:24::0;3053:18;;9450:25:17::1;2934:203:24::0;9397:89:17::1;9515:10;-1:-1:-1::0;;;;;9499:26:17::1;:12;-1:-1:-1::0;;;;;9499:26:17::1;;9495:105;;9548:41;::::0;-1:-1:-1;;;9548:41:17;;-1:-1:-1;;;;;3098:32:24;;9548:41:17::1;::::0;::::1;3080:51:24::0;3053:18;;9548:41:17::1;2934:203:24::0;9495:105:17::1;-1:-1:-1::0;;;;;9665:30:17;::::1;9609:53;9665:30:::0;;;::::1;::::0;;;;;;9731:9;9786:8;9781:704:::1;;9819:9;9814:311;9838:15;9834:1;:19;9814:311;;;9882:16;9901:9;;9911:1;9901:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;9882:31:::0;-1:-1:-1;9935:12:17::1;9950:37;:20:::0;9882:31;9950:27:::1;:37::i;:::-;9935:52;;10014:7;10009:98;;10056:28;::::0;-1:-1:-1;;;10056:28:17;;-1:-1:-1;;;;;3098:32:24;;10056:28:17::1;::::0;::::1;3080:51:24::0;3053:18;;10056:28:17::1;2934:203:24::0;10009:98:17::1;-1:-1:-1::0;;9855:3:17::1;;9814:311;;;;9781:704;;;10168:9;10163:308;10187:15;10183:1;:19;10163:308;;;10231:16;10250:9;;10260:1;10250:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;10231:31:::0;-1:-1:-1;10284:10:17::1;10297:34;:20:::0;10231:31;10297:24:::1;:34::i;:::-;10284:47;;10358:5;10353:100;;10398:32;::::0;-1:-1:-1;;;10398:32:17;;-1:-1:-1;;;;;3098:32:24;;10398::17::1;::::0;::::1;3080:51:24::0;3053:18;;10398:32:17::1;2934:203:24::0;10353:100:17::1;-1:-1:-1::0;;10204:3:17::1;;10163:308;;;;9781:704;10549:8;10509:49;;10526:10;-1:-1:-1::0;;;;;10509:49:17::1;;10538:9;;10509:49;;;;;;;:::i;6894:945::-:0;7015:10;1679;-1:-1:-1;;;;;1679:18:17;;;1675:564;;1725:4;-1:-1:-1;;;;;1717:19:17;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1717:21:17;;;;;;;;-1:-1:-1;;1717:21:17;;;;;;;;;;;;:::i;:::-;;;1713:516;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1785:10;-1:-1:-1;;;;;1785:19:17;;;1781:93;;1835:20;;-1:-1:-1;;;1835:20:17;;;;;;;;;;;1781:93;1739:149;1713:516;-1:-1:-1;;;;;7064:26:17;;::::1;7041:20;7064:26:::0;;;:14:::1;:26;::::0;;;;;::::1;::::0;7100:89:::1;;7153:25;::::0;-1:-1:-1;;;7153:25:17;;-1:-1:-1;;;;;3098:32:24;;7153:25:17::1;::::0;::::1;3080:51:24::0;3053:18;;7153:25:17::1;2934:203:24::0;7100:89:17::1;7218:10;-1:-1:-1::0;;;;;7202:26:17::1;:12;-1:-1:-1::0;;;;;7202:26:17::1;;7198:105;;7251:41;::::0;-1:-1:-1;;;7251:41:17;;-1:-1:-1;;;;;3098:32:24;;7251:41:17::1;::::0;::::1;3080:51:24::0;3053:18;;7251:41:17::1;2934:203:24::0;7198:105:17::1;-1:-1:-1::0;;;;;7368:30:17;::::1;7312:53;7368:30:::0;;;::::1;::::0;;;;;;7414:8;7409:362:::1;;7438:12;7453:37;:20:::0;7481:8;7453:27:::1;:37::i;:::-;7438:52;;7509:7;7504:82;;7543:28;::::0;-1:-1:-1;;;7543:28:17;;-1:-1:-1;;;;;3098:32:24;;7543:28:17::1;::::0;::::1;3080:51:24::0;3053:18;;7543:28:17::1;2934:203:24::0;7504:82:17::1;7424:172;7409:362;;;7616:10;7629:34;:20:::0;7654:8;7629:24:::1;:34::i;:::-;7616:47;;7682:5;7677:84;;7714:32;::::0;-1:-1:-1;;;7714:32:17;;-1:-1:-1;;;;;3098:32:24;;7714::17::1;::::0;::::1;3080:51:24::0;3053:18;;7714:32:17::1;2934:203:24::0;7677:84:17::1;7602:169;7409:362;7823:8;7785:47;;7813:8;-1:-1:-1::0;;;;;7785:47:17::1;7801:10;-1:-1:-1::0;;;;;7785:47:17::1;;;;;;;;;;;7031:808;;6894:945:::0;;;;:::o;21484:335::-;-1:-1:-1;;;;;21612:26:17;;;21570:7;21612:26;;;:14;:26;;;;;;21570:7;;21612:26;;21652;;21648:107;;-1:-1:-1;;;;;21701:33:17;;;;;;:19;:33;;;;;:43;;21738:5;21701:36;:43::i;21648:107::-;-1:-1:-1;;;;;21771:31:17;;;;;;:19;:31;;;;;:41;;21806:5;21771:34;:41::i;12689:1296::-;12781:10;1679;-1:-1:-1;;;;;1679:18:17;;;1675:564;;1725:4;-1:-1:-1;;;;;1717:19:17;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1717:21:17;;;;;;;;-1:-1:-1;;1717:21:17;;;;;;;;;;;;:::i;:::-;;;1713:516;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1785:10;-1:-1:-1;;;;;1785:19:17;;;1781:93;;1835:20;;-1:-1:-1;;;1835:20:17;;;;;;;;;;;1781:93;1739:149;1713:516;12821:15:::1;-1:-1:-1::0;;;;;12807:29:17::1;:10;-1:-1:-1::0;;;;;12807:29:17::1;::::0;12803:90:::1;;12859:23;;-1:-1:-1::0;;;12859:23:17::1;;;;;;;;;;;12803:90;-1:-1:-1::0;;;;;12906:29:17;::::1;12902:97;;12958:30;;-1:-1:-1::0;;;12958:30:17::1;;;;;;;;;;;12902:97;-1:-1:-1::0;;;;;13031:26:17;;::::1;13008:20;13031:26:::0;;;:14:::1;:26;::::0;;;;;::::1;::::0;13067:89:::1;;13120:25;::::0;-1:-1:-1;;;13120:25:17;;-1:-1:-1;;;;;3098:32:24;;13120:25:17::1;::::0;::::1;3080:51:24::0;3053:18;;13120:25:17::1;2934:203:24::0;13067:89:17::1;13185:15;-1:-1:-1::0;;;;;13169:31:17::1;:12;-1:-1:-1::0;;;;;13169:31:17::1;::::0;13165:103:::1;;13223:34;::::0;-1:-1:-1;;;13223:34:17;;-1:-1:-1;;;;;3098:32:24;;13223:34:17::1;::::0;::::1;3080:51:24::0;3053:18;;13223:34:17::1;2934:203:24::0;13165:103:17::1;-1:-1:-1::0;;;;;13315:31:17;;::::1;13277:35;13315:31:::0;;;:14:::1;:31;::::0;;;;;::::1;::::0;13356:109:::1;;13424:30;::::0;-1:-1:-1;;;13424:30:17;;-1:-1:-1;;;;;3098:32:24;;13424:30:17::1;::::0;::::1;3080:51:24::0;3053:18;;13424:30:17::1;2934:203:24::0;13356:109:17::1;13509:15;-1:-1:-1::0;;;;;13478:46:17::1;:27;-1:-1:-1::0;;;;;13478:46:17::1;;13474:144;;13547:60;::::0;-1:-1:-1;;;13547:60:17;;-1:-1:-1;;;;;3098:32:24;;13547:60:17::1;::::0;::::1;3080:51:24::0;3053:18;;13547:60:17::1;2934:203:24::0;13474:144:17::1;13648:10;-1:-1:-1::0;;;;;13632:26:17::1;:12;-1:-1:-1::0;;;;;13632:26:17::1;;13628:173;;-1:-1:-1::0;;;;;13674:26:17;::::1;;::::0;;;:12:::1;:26;::::0;;;;:45:::1;::::0;13708:10;13674:33:::1;:45::i;:::-;-1:-1:-1::0;13738:52:17::1;::::0;13784:5:::1;::::0;-1:-1:-1;;;;;13738:52:17;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;;;;;;;13738:52:17;13784:5;;13738:52:::1;13628:173;-1:-1:-1::0;;;;;13810:26:17;;::::1;;::::0;;;:14:::1;:26;::::0;;;;;;;:44;;-1:-1:-1;;;;;;13810:44:17::1;::::0;;::::1;::::0;;::::1;::::0;;13864:29;;;:12:::1;:29:::0;;;:45:::1;::::0;13810:26;13864:33:::1;:45::i;:::-;-1:-1:-1::0;13924:54:17::1;::::0;13973:4:::1;::::0;-1:-1:-1;;;;;13924:54:17;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;;;;;;;13924:54:17;;;::::1;12793:1192;;12689:1296:::0;;;:::o;19821:324::-;-1:-1:-1;;;;;19942:26:17;;;19919:20;19942:26;;;:14;:26;;;;;;19891:16;;19942:26;;19982;;19978:105;;-1:-1:-1;;;;;20031:32:17;;:18;:32;;;;;;;;;;:41;;:39;:41::i;19978:105::-;-1:-1:-1;;;;;20099:30:17;;:18;:30;;;;;;;;;;:39;;:37;:39::i;2467:892::-;-1:-1:-1;;;;;2594:26:17;;;2555:4;2594:26;;;:14;:26;;;;;;2555:4;;2594:26;2634;;2630:702;;-1:-1:-1;;;;;2835:32:17;;2676:53;2835:32;;;;;;;;;;;2905:19;:33;;;;;;2957:39;2835:32;2987:8;2957:29;:39::i;:::-;2953:110;;;3023:25;;-1:-1:-1;;;3023:25:17;;-1:-1:-1;;;;;3098:32:24;;3023:25:17;;;3080:51:24;3053:18;;3023:25:17;2934:203:24;2953:110:17;-1:-1:-1;;;;;3080:20:17;;;:24;3076:246;;-1:-1:-1;;;;;3143:17:17;;;3182:40;:21;3143:17;3182:30;:40::i;:::-;3178:130;;;3253:36;;-1:-1:-1;;;3253:36:17;;-1:-1:-1;;;;;8051:32:24;;3253:36:17;;;8033:51:24;8100:18;;;8093:34;;;8006:18;;3253:36:17;7859:274:24;3178:130:17;3106:216;3076:246;2662:670;;2630:702;-1:-1:-1;3348:4:17;;2467:892;-1:-1:-1;;;2467:892:17:o;18120:351::-;-1:-1:-1;;;;;18248:26:17;;;18209:4;18248:26;;;:14;:26;;;;;;18209:4;;18248:26;;18288;;18284:115;;-1:-1:-1;;;;;18337:32:17;;:18;:32;;;;;;;;;;:51;;18379:8;18337:41;:51::i;18284:115::-;-1:-1:-1;;;;;18415:30:17;;:18;:30;;;;;;;;;;:49;;18455:8;18415:39;:49::i;6202:129:13:-;6275:4;6298:26;6306:3;6318:5;6298:7;:26::i;5911:123::-;5981:4;6004:23;6009:3;6021:5;6004:4;:23::i;15709:1144:17:-;-1:-1:-1;;;;;15851:36:17;;15795:53;15851:36;;;;;;;;;;;15954:19;:37;;;;;15851:36;;16035:29;15851:36;16035:27;:29::i;:::-;16001:63;;16074:32;16109:30;:21;:28;:30::i;:::-;16074:65;;16178:9;16173:324;16197:23;16193:1;:27;16173:324;;;16245:16;16264:26;:20;16288:1;16264:23;:26::i;:::-;-1:-1:-1;;;;;16321:30:17;;16308:10;16321:30;;;;;;;;;;16245:45;;-1:-1:-1;16308:10:17;16321:44;;16245:45;16321:34;:44::i;:::-;16308:57;;16387:5;16383:100;;;16421:43;;16459:4;;-1:-1:-1;;;;;16421:43:17;;;;;;;;;;;;;16383:100;-1:-1:-1;;16222:3:17;;16173:324;;;;16515:9;16510:327;16534:24;16530:1;:28;16510:327;;;16583:16;16602:27;:21;16627:1;16602:24;:27::i;:::-;-1:-1:-1;;;;;16660:31:17;;16647:10;16660:31;;;:19;:31;;;;;16583:46;;-1:-1:-1;16647:10:17;16660:45;;16583:46;16660:35;:45::i;:::-;16647:58;;16727:5;16723:100;;;16761:43;;16799:4;;16789:8;;-1:-1:-1;;;;;16761:43:17;;;;;;;;16723:100;-1:-1:-1;;16560:3:17;;16510:327;;;;15785:1068;;;;15709:1144;;:::o;7757:300:13:-;7820:16;7848:22;7873:19;7881:3;7873:7;:19::i;8615:156::-;8688:4;8711:53;8719:3;-1:-1:-1;;;;;8739:23:13;;8711:7;:53::i;9555:156::-;9629:7;9679:22;9683:3;9695:5;9679:3;:22::i;6412:138::-;6492:4;4343:19;;;:12;;;:19;;;;;;:24;;6515:28;4247:127;8297:150;8367:4;8390:50;8395:3;-1:-1:-1;;;;;8415:23:13;;8390:4;:50::i;8852:165::-;-1:-1:-1;;;;;8985:23:13;;8932:4;4343:19;;;:12;;;:19;;;;;;:24;;8955:55;4247:127;2778:1388;2844:4;2981:19;;;:12;;;:19;;;;;;3015:15;;3011:1149;;3384:21;3408:14;3421:1;3408:10;:14;:::i;:::-;3456:18;;3384:38;;-1:-1:-1;3436:17:13;;3456:22;;3477:1;;3456:22;:::i;:::-;3436:42;;3510:13;3497:9;:26;3493:398;;3543:17;3563:3;:11;;3575:9;3563:22;;;;;;;;:::i;:::-;;;;;;;;;3543:42;;3714:9;3685:3;:11;;3697:13;3685:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3797:23;;;:12;;;:23;;;;;:36;;;3493:398;3969:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4061:3;:12;;:19;4074:5;4061:19;;;;;;;;;;;4054:26;;;4102:4;4095:11;;;;;;;3011:1149;4144:5;4137:12;;;;;2206:404;2269:4;4343:19;;;:12;;;:19;;;;;;2285:319;;-1:-1:-1;2327:23:13;;;;;;;;:11;:23;;;;;;;;;;;;;2507:18;;2485:19;;;:12;;;:19;;;;;;:40;;;;2539:11;;2285:319;-1:-1:-1;2588:5:13;2581:12;;9098:115;9161:7;9187:19;9195:3;4537:18;;4455:107;5562:109;5618:16;5653:3;:11;;5646:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5562:109;;;:::o;4904:118::-;4971:7;4997:3;:11;;5009:5;4997:18;;;;;;;;:::i;:::-;;;;;;;;;4990:25;;4904:118;;;;:::o;14:131:24:-;-1:-1:-1;;;;;89:31:24;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:367::-;213:8;223:6;277:3;270:4;262:6;258:17;254:27;244:55;;295:1;292;285:12;244:55;-1:-1:-1;318:20:24;;361:18;350:30;;347:50;;;393:1;390;383:12;347:50;430:4;422:6;418:17;406:29;;490:3;483:4;473:6;470:1;466:14;458:6;454:27;450:38;447:47;444:67;;;507:1;504;497:12;444:67;150:367;;;;;:::o;522:160::-;587:20;;643:13;;636:21;626:32;;616:60;;672:1;669;662:12;687:640;788:6;796;804;812;865:2;853:9;844:7;840:23;836:32;833:52;;;881:1;878;871:12;833:52;920:9;907:23;939:31;964:5;939:31;:::i;:::-;989:5;-1:-1:-1;1045:2:24;1030:18;;1017:32;1072:18;1061:30;;1058:50;;;1104:1;1101;1094:12;1058:50;1143:70;1205:7;1196:6;1185:9;1181:22;1143:70;:::i;:::-;1232:8;;-1:-1:-1;1117:96:24;-1:-1:-1;1286:35:24;;-1:-1:-1;1317:2:24;1302:18;;1286:35;:::i;:::-;1276:45;;687:640;;;;;;;:::o;1332:388::-;1400:6;1408;1461:2;1449:9;1440:7;1436:23;1432:32;1429:52;;;1477:1;1474;1467:12;1429:52;1516:9;1503:23;1535:31;1560:5;1535:31;:::i;:::-;1585:5;-1:-1:-1;1642:2:24;1627:18;;1614:32;1655:33;1614:32;1655:33;:::i;:::-;1707:7;1697:17;;;1332:388;;;;;:::o;1725:247::-;1784:6;1837:2;1825:9;1816:7;1812:23;1808:32;1805:52;;;1853:1;1850;1843:12;1805:52;1892:9;1879:23;1911:31;1936:5;1911:31;:::i;1977:632::-;2148:2;2200:21;;;2270:13;;2173:18;;;2292:22;;;2119:4;;2148:2;2371:15;;;;2345:2;2330:18;;;2119:4;2414:169;2428:6;2425:1;2422:13;2414:169;;;2489:13;;2477:26;;2558:15;;;;2523:12;;;;2450:1;2443:9;2414:169;;;-1:-1:-1;2600:3:24;;1977:632;-1:-1:-1;;;;;;1977:632:24:o;2614:315::-;2679:6;2687;2740:2;2728:9;2719:7;2715:23;2711:32;2708:52;;;2756:1;2753;2746:12;2708:52;2795:9;2782:23;2814:31;2839:5;2814:31;:::i;:::-;2864:5;-1:-1:-1;2888:35:24;2919:2;2904:18;;2888:35;:::i;:::-;2878:45;;2614:315;;;;;:::o;3142:::-;3210:6;3218;3271:2;3259:9;3250:7;3246:23;3242:32;3239:52;;;3287:1;3284;3277:12;3239:52;3326:9;3313:23;3345:31;3370:5;3345:31;:::i;:::-;3395:5;3447:2;3432:18;;;;3419:32;;-1:-1:-1;;;3142:315:24:o;3462:658::-;3633:2;3685:21;;;3755:13;;3658:18;;;3777:22;;;3604:4;;3633:2;3856:15;;;;3830:2;3815:18;;;3604:4;3899:195;3913:6;3910:1;3907:13;3899:195;;;3978:13;;-1:-1:-1;;;;;3974:39:24;3962:52;;4069:15;;;;4034:12;;;;4010:1;3928:9;3899:195;;4637:383;4711:6;4719;4727;4780:2;4768:9;4759:7;4755:23;4751:32;4748:52;;;4796:1;4793;4786:12;4748:52;4835:9;4822:23;4854:31;4879:5;4854:31;:::i;:::-;4904:5;-1:-1:-1;4956:2:24;4941:18;;4928:32;;-1:-1:-1;4979:35:24;5010:2;4995:18;;4979:35;:::i;:::-;4969:45;;4637:383;;;;;:::o;5670:456::-;5744:6;5752;5760;5813:2;5801:9;5792:7;5788:23;5784:32;5781:52;;;5829:1;5826;5819:12;5781:52;5868:9;5855:23;5887:31;5912:5;5887:31;:::i;:::-;5937:5;-1:-1:-1;5994:2:24;5979:18;;5966:32;6007:33;5966:32;6007:33;:::i;:::-;6059:7;-1:-1:-1;6085:35:24;6116:2;6101:18;;6085:35;:::i;6313:251::-;6383:6;6436:2;6424:9;6415:7;6411:23;6407:32;6404:52;;;6452:1;6449;6442:12;6404:52;6484:9;6478:16;6503:31;6528:5;6503:31;:::i;6569:127::-;6630:10;6625:3;6621:20;6618:1;6611:31;6661:4;6658:1;6651:15;6685:4;6682:1;6675:15;6701:443;6890:2;6872:21;;;6909:18;;6902:34;;;-1:-1:-1;;;;;;6948:31:24;;6945:51;;;6992:1;6989;6982:12;6945:51;7026:6;7023:1;7019:14;7083:6;7075;7070:2;7059:9;7055:18;7042:48;7111:22;;;;7135:2;7107:31;;6701:443;-1:-1:-1;;;6701:443:24:o;7149:705::-;7330:2;7382:21;;;7355:18;;;7438:22;;;7301:4;;7517:6;7491:2;7476:18;;7301:4;7551:277;7565:6;7562:1;7559:13;7551:277;;;7640:6;7627:20;7660:31;7685:5;7660:31;:::i;:::-;-1:-1:-1;;;;;7716:31:24;7704:44;;7803:15;;;;7768:12;;;;7744:1;7580:9;7551:277;;;-1:-1:-1;7845:3:24;7149:705;-1:-1:-1;;;;;;7149:705:24:o;8138:225::-;8205:9;;;8226:11;;;8223:134;;;8279:10;8274:3;8270:20;8267:1;8260:31;8314:4;8311:1;8304:15;8342:4;8339:1;8332:15;8368:127;8429:10;8424:3;8420:20;8417:1;8410:31;8460:4;8457:1;8450:15;8484:4;8481:1;8474:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "codeHashOf(address)": {
        "details": "Convenience method to compute the code hash of an arbitrary contract"
      },
      "copyEntriesOf(address,address)": {
        "notice": "Copy filtered operators and codeHashes from a different registrantToCopy to addr."
      },
      "filteredCodeHashAt(address,uint256)": {
        "notice": "Returns the filtered codeHash at the given index of the list of filtered codeHashes for a given address or         its subscription.         Note that order is not guaranteed as updates are made."
      },
      "filteredCodeHashes(address)": {
        "notice": "Returns the set of filtered codeHashes for a given address or its subscription.         Note that order is not guaranteed as updates are made."
      },
      "filteredOperatorAt(address,uint256)": {
        "notice": "Returns the filtered operator at the given index of the set of filtered operators for a given address or         its subscription.         Note that order is not guaranteed as updates are made."
      },
      "filteredOperators(address)": {
        "notice": "Returns a list of filtered operators for a given address or its subscription."
      },
      "isCodeHashFiltered(address,bytes32)": {
        "notice": "Returns true if a codeHash is filtered by a given address or its subscription."
      },
      "isCodeHashOfFiltered(address,address)": {
        "notice": "Returns true if the hash of an address's code is filtered by a given address or its subscription."
      },
      "isOperatorAllowed(address,address)": {
        "notice": "Returns true if operator is not filtered for a given token, either by address or codeHash. Also returns         true if supplied registrant address is not registered."
      },
      "isOperatorFiltered(address,address)": {
        "notice": "Returns true if operator is filtered by a given address or its subscription."
      },
      "isRegistered(address)": {
        "notice": "Returns true if an address has registered"
      },
      "register(address)": {
        "notice": "Registers an address with the registry. May be called by address itself or by EIP-173 owner."
      },
      "registerAndCopyEntries(address,address)": {
        "notice": "Registers an address with the registry and copies the filtered operators and codeHashes from another         address without subscribing."
      },
      "registerAndSubscribe(address,address)": {
        "notice": "Registers an address with the registry and \"subscribes\" to another address's filtered operators and codeHashes."
      },
      "subscribe(address,address)": {
        "notice": "Subscribe an address to another registrant's filtered operators and codeHashes. Will remove previous         subscription if present.         Note that accounts with subscriptions may go on to subscribe to other accounts - in this case,         subscriptions will not be forwarded. Instead the former subscription's existing entries will still be         used."
      },
      "subscriberAt(address,uint256)": {
        "notice": "Get the subscriber at a given index in the set of addresses subscribed to a given registrant.         Note that order is not guaranteed as updates are made."
      },
      "subscribers(address)": {
        "notice": "Get the set of addresses subscribed to a given registrant.         Note that order is not guaranteed as updates are made."
      },
      "subscriptionOf(address)": {
        "notice": "Get the subscription address of a given registrant, if any."
      },
      "unregister(address)": {
        "notice": "Unregisters an address with the registry and removes its subscription. May be called by address itself or by EIP-173 owner.         Note that this does not remove any filtered addresses or codeHashes.         Also note that any subscriptions to this registrant will still be active and follow the existing filtered addresses and codehashes."
      },
      "unsubscribe(address,bool)": {
        "notice": "Unsubscribe an address from its current subscribed registrant, and optionally copy its filtered operators and codeHashes."
      },
      "updateCodeHash(address,bytes32,bool)": {
        "notice": "Update a codeHash for a registered address - when filtered is true, the codeHash is filtered."
      },
      "updateCodeHashes(address,bytes32[],bool)": {
        "notice": "Update multiple codeHashes for a registered address - when filtered is true, the codeHashes will be filtered. Reverts on duplicates."
      },
      "updateOperator(address,address,bool)": {
        "notice": "Update an operator address for a registered address - when filtered is true, the operator is filtered."
      },
      "updateOperators(address,address[],bool)": {
        "notice": "Update multiple operators for a registered address - when filtered is true, the operators will be filtered. Reverts on duplicates."
      }
    },
    "notice": "Borrows heavily from the QQL BlacklistOperatorFilter contract:         https://github.com/qql-art/contracts/blob/main/contracts/BlacklistOperatorFilter.solThis contracts allows tokens or token owners to register specific addresses or codeHashes that may be *       restricted according to the isOperatorAllowed function.",
    "stateVariables": {
      "EOA_CODEHASH": {
        "details": "initialized accounts have a nonzero codehash (see https://eips.ethereum.org/EIPS/eip-1052) Note that this will also be a smart contract's codehash when making calls from its constructor."
      }
    },
    "title": "OperatorFilterRegistry",
    "version": 1
  },
  "offset": [
    776,
    22006
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x712FC00B GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xB314D414 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB314D414 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xBBD652C7 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xC3C5A547 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xC4308805 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xC6171134 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xE4AECB54 EQ PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x712FC00B EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x7D3E3DBE EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xA0AF2903 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xA14584C1 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xA2F367AB EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0xA6529EB5 EQ PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F1CC5FA GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x3F1CC5FA EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x55940E51 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x5745AE28 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x5EAE3173 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x6AF0C315 EQ PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x63298B6 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x1E06B4B4 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x22FA2762 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x2EC2C246 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x34A0DC10 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x3C5030BB EQ PUSH2 0x1D4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x23D6 JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x170 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x243D JUMP JUMPDEST PUSH2 0x69D JUMP JUMPDEST PUSH2 0x198 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x2476 JUMP JUMPDEST PUSH2 0x869 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x2493 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x2476 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x24D7 JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2476 JUMP JUMPDEST PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x250C JUMP JUMPDEST PUSH2 0xCA5 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0x2476 JUMP JUMPDEST PUSH2 0xD1F JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x250C JUMP JUMPDEST PUSH2 0xE5F JUMP JUMPDEST PUSH2 0x24B PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x2476 JUMP JUMPDEST PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x2538 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x243D JUMP JUMPDEST PUSH2 0xEA5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0x250C JUMP JUMPDEST PUSH2 0xF25 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x2579 JUMP JUMPDEST PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x170 PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x243D JUMP JUMPDEST PUSH2 0x11D6 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x243D JUMP JUMPDEST PUSH2 0x1420 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x23D6 JUMP JUMPDEST PUSH2 0x15DD JUMP JUMPDEST PUSH2 0x170 PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x25B7 JUMP JUMPDEST PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x250C JUMP JUMPDEST PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x31C CALLDATASIZE PUSH1 0x4 PUSH2 0x243D JUMP JUMPDEST PUSH2 0x1AFF JUMP JUMPDEST PUSH2 0x300 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODEHASH SWAP1 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x2476 JUMP JUMPDEST PUSH2 0x1DF8 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0x243D JUMP JUMPDEST PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0x26B PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x243D JUMP JUMPDEST PUSH2 0x1F3A JUMP JUMPDEST DUP4 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x497 JUMPI DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x40E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x40B SWAP2 DUP2 ADD SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x46C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x441 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x464 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CB0505 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F9EBDFF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBFC6C337 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4AF4D69 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 DUP5 PUSH2 0x5AB JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x55A JUMPI PUSH2 0x55A PUSH2 0x2612 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 PUSH2 0x578 DUP3 DUP7 PUSH2 0x1FA2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH4 0x8F0E615 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x53E JUMP JUMPDEST POP PUSH2 0x64D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x64B JUMPI PUSH1 0x0 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x5CA JUMPI PUSH2 0x5CA PUSH2 0x2612 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 SUB PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1EAEBD5B PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x61F DUP6 DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x641 JUMPI PUSH1 0x40 MLOAD PUSH3 0xC35F5 PUSH1 0xE9 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x5AE JUMP JUMPDEST POP JUMPDEST DUP5 ISZERO ISZERO DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x34E9F70C5A16A4DF2A396CF0CBC4735EB3C7FB6AE40AAA0B34BE7720121D1B96 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x68B SWAP3 SWAP2 SWAP1 PUSH2 0x2628 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x761 JUMPI DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x708 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x705 SWAP2 DUP2 ADD SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x736 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x441 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x75F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F9EBDFF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x793 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35956D7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0x7D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBFC6C337 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4AF4D69 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0x858 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBFC6C337 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x862 DUP6 DUP6 PUSH2 0x1FBA JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP3 AND SWAP1 DUP2 EQ PUSH2 0x8B6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x8AF SWAP1 PUSH2 0x2113 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x8AF SWAP1 PUSH2 0x2113 JUMP JUMPDEST DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x99B JUMPI DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x942 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x93F SWAP2 DUP2 ADD SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x970 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x441 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x999 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F9EBDFF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH4 0xBFC6C337 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA45 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xA1A SWAP1 DUP5 PUSH2 0x2120 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP2 SWAP1 DUP7 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2707 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP5 SWAP1 LOG4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26E7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP2 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0xB4C JUMPI DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAF3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAF0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB21 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x441 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0xB4A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F9EBDFF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0xB90 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBFC6C337 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xBC2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x46FCD85 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xBE4 SWAP1 DUP6 PUSH2 0x2120 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD SWAP1 SWAP3 DUP5 AND SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2707 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP5 SWAP1 LOG4 DUP3 ISZERO PUSH2 0xC39 JUMPI PUSH2 0xC39 DUP5 DUP3 PUSH2 0x1FBA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0xC83 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBFC6C337 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xCA0 JUMPI POP PUSH1 0x0 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP3 AND SWAP1 DUP2 EQ PUSH2 0xCF3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xCEB SWAP1 DUP5 PUSH2 0x2135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xD15 SWAP1 DUP5 PUSH2 0x2135 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0xDE3 JUMPI DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD8A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD87 SWAP2 DUP2 ADD SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xDB8 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x441 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0xDE1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F9EBDFF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0xE1C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA075BF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD PUSH1 0x1 SWAP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26E7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x8AF SWAP1 DUP4 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x60 SWAP1 PUSH2 0xD19 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP3 DUP1 DUP6 AND EXTCODEHASH SWAP3 SWAP2 AND SWAP1 DUP2 EQ PUSH2 0xEFA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xEF1 SWAP1 DUP4 PUSH2 0x2141 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xF1C SWAP1 DUP4 PUSH2 0x2141 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP3 AND SWAP1 DUP2 EQ PUSH2 0xF6B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xCEB SWAP1 DUP5 PUSH2 0x2141 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xD15 SWAP1 DUP5 PUSH2 0x2141 JUMP JUMPDEST DUP3 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1051 JUMPI DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xFF8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xFF5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1026 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x441 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x104F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F9EBDFF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP4 SUB PUSH2 0x1091 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1EAEBD5B PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0x10D5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBFC6C337 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1112 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4AF4D69 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 PUSH2 0x1164 JUMPI PUSH1 0x0 PUSH2 0x113B DUP3 DUP8 PUSH2 0x1FA2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x115E JUMPI PUSH1 0x40 MLOAD PUSH4 0x8F0E615 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST POP PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1170 DUP3 DUP8 PUSH2 0x1FAE JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1192 JUMPI PUSH1 0x40 MLOAD PUSH3 0xC35F5 PUSH1 0xE9 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST POP JUMPDEST DUP4 ISZERO ISZERO DUP6 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB8036058BAFEA884AABC446CA15619FD86F5464A4AD96F64164AD6F77444354D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST DUP2 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x129A JUMPI DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1241 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x123E SWAP2 DUP2 ADD SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x126F JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x441 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1298 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F9EBDFF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x12D4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA075BF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1306 JUMPI PUSH1 0x40 MLOAD PUSH4 0x347F118F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0x134A JUMPI PUSH1 0x40 MLOAD PUSH4 0xBFC6C337 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1387 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1DA39527 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP10 AND SWAP5 DUP6 OR SWAP1 SSTORE SWAP3 DUP3 MSTORE PUSH1 0x3 SWAP1 MSTORE KECCAK256 PUSH2 0x13C9 SWAP1 DUP7 PUSH2 0x2159 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26E7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP2 SWAP1 DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2707 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST DUP2 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x14E4 JUMPI DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x148B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1488 SWAP2 DUP2 ADD SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x14B9 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x441 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x14E2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F9EBDFF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1516 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35956D7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x1550 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA075BF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0x1594 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBFC6C337 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD PUSH1 0x1 SWAP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26E7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG3 PUSH2 0x862 DUP6 DUP6 PUSH2 0x1FBA JUMP JUMPDEST DUP4 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x16A1 JUMPI DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1648 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1645 SWAP2 DUP2 ADD SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1676 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x441 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x169F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F9EBDFF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0x16E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBFC6C337 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1722 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4AF4D69 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 DUP5 PUSH2 0x17BD JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17B7 JUMPI PUSH1 0x0 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x175F JUMPI PUSH2 0x175F PUSH2 0x2612 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1774 SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1782 DUP6 DUP4 PUSH2 0x2120 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x17AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x22A92E07 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1743 JUMP JUMPDEST POP PUSH2 0x1836 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1834 JUMPI PUSH1 0x0 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x17DC JUMPI PUSH2 0x17DC PUSH2 0x2612 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x17F1 SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17FF DUP6 DUP4 PUSH2 0x2159 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x182A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2ED108D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x17C0 JUMP JUMPDEST POP JUMPDEST DUP5 ISZERO ISZERO DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2B85AFDACB82D5512C6F05566B3018677FFCBD7E5F75E498BC64081131CBD6C DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x68B SWAP3 SWAP2 SWAP1 PUSH2 0x2661 JUMP JUMPDEST DUP3 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1938 JUMPI DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18DF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x18DC SWAP2 DUP2 ADD SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x190D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x441 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1936 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F9EBDFF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0x197C JUMPI PUSH1 0x40 MLOAD PUSH4 0xBFC6C337 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x19B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4AF4D69 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 PUSH2 0x1A13 JUMPI PUSH1 0x0 PUSH2 0x19E2 DUP3 DUP8 PUSH2 0x2120 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1A0D JUMPI PUSH1 0x40 MLOAD PUSH4 0x22A92E07 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST POP PUSH2 0x1A4C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1F DUP3 DUP8 PUSH2 0x2159 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1A4A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2ED108D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST POP JUMPDEST DUP4 ISZERO ISZERO DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2738289D9DEECDC30EB8FFC42876633CAECCA1FFA166E4EFA89F408E17373A1A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP3 AND SWAP1 DUP2 EQ PUSH2 0x1ADD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xCEB SWAP1 DUP5 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xD15 SWAP1 DUP5 PUSH2 0x2135 JUMP JUMPDEST DUP2 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1BC3 JUMPI DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1B6A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1B67 SWAP2 DUP2 ADD SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1B98 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x441 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1BC1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F9EBDFF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1BF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x347F118F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C1C JUMPI PUSH1 0x40 MLOAD PUSH4 0xB05574D3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0x1C60 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBFC6C337 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1C9D JUMPI PUSH1 0x40 MLOAD PUSH4 0x73A41649 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0x1CE1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBFC6C337 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1D1E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1DA39527 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1D84 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1D59 SWAP1 DUP7 PUSH2 0x2120 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP2 SWAP1 DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2707 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP5 SWAP1 LOG4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP10 AND SWAP5 DUP6 OR SWAP1 SSTORE SWAP3 DUP3 MSTORE PUSH1 0x3 SWAP1 MSTORE KECCAK256 PUSH2 0x1DC6 SWAP1 DUP7 PUSH2 0x2159 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP2 SWAP1 DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2707 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP3 AND SWAP1 DUP2 EQ PUSH2 0x1E3E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x8AF SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x8AF SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND DUP1 ISZERO PUSH2 0x1F30 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH2 0x1EAD DUP3 DUP7 PUSH2 0x216E JUMP JUMPDEST ISZERO PUSH2 0x1ED6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA8CF495D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE ISZERO PUSH2 0x1F2D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODEHASH PUSH2 0x1EFB DUP3 DUP3 PUSH2 0x2141 JUMP JUMPDEST ISZERO PUSH2 0x1F2B JUMPI PUSH1 0x40 MLOAD PUSH4 0x5F3853A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x4D7 JUMP JUMPDEST POP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP3 AND SWAP1 DUP2 EQ PUSH2 0x1F80 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xCEB SWAP1 DUP5 PUSH2 0x216E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xD15 SWAP1 DUP5 PUSH2 0x216E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AF DUP4 DUP4 PUSH2 0x2190 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AF DUP4 DUP4 PUSH2 0x2283 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SWAP1 SWAP2 PUSH2 0x1FE5 DUP4 PUSH2 0x22D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1FF2 DUP4 PUSH2 0x22D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2080 JUMPI PUSH1 0x0 PUSH2 0x200B DUP7 DUP4 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP SWAP1 PUSH2 0x2031 SWAP1 DUP4 PUSH2 0x2159 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2076 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP2 SWAP1 DUP13 AND SWAP1 PUSH32 0x2738289D9DEECDC30EB8FFC42876633CAECCA1FFA166E4EFA89F408E17373A1A SWAP1 PUSH1 0x0 SWAP1 LOG4 JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1FF7 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x210A JUMPI PUSH1 0x0 PUSH2 0x2098 DUP6 DUP4 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP SWAP1 PUSH2 0x20BE SWAP1 DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2100 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP1 PUSH32 0xB8036058BAFEA884AABC446CA15619FD86F5464A4AD96F64164AD6F77444354D SWAP1 PUSH1 0x0 SWAP1 LOG4 JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x2084 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x8AF DUP4 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AF DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2190 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AF DUP4 DUP4 PUSH2 0x2338 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x8AF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AF DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2283 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x8AF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x2279 JUMPI PUSH1 0x0 PUSH2 0x21B4 PUSH1 0x1 DUP4 PUSH2 0x26AF JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x21C8 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x26AF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x222D JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x21E8 JUMPI PUSH2 0x21E8 PUSH2 0x2612 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x220B JUMPI PUSH2 0x220B PUSH2 0x2612 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x223E JUMPI PUSH2 0x223E PUSH2 0x26D0 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x22CA JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xD19 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD19 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x232C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2318 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x234F JUMPI PUSH2 0x234F PUSH2 0x2612 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x238C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x23BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x23EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x23F7 DUP2 PUSH2 0x2362 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x241F DUP8 DUP3 DUP9 ADD PUSH2 0x237A JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x2432 SWAP1 POP PUSH1 0x40 DUP7 ADD PUSH2 0x23C6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x245B DUP2 PUSH2 0x2362 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x246B DUP2 PUSH2 0x2362 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8AF DUP2 PUSH2 0x2362 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24CB JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x24AF JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x24F5 DUP2 PUSH2 0x2362 JUMP JUMPDEST SWAP2 POP PUSH2 0x2503 PUSH1 0x20 DUP5 ADD PUSH2 0x23C6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x251F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x252A DUP2 PUSH2 0x2362 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24CB JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2554 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x258E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2599 DUP2 PUSH2 0x2362 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x25AE PUSH1 0x40 DUP6 ADD PUSH2 0x23C6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x25CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x25D7 DUP2 PUSH2 0x2362 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x25E7 DUP2 PUSH2 0x2362 JUMP JUMPDEST SWAP2 POP PUSH2 0x25AE PUSH1 0x40 DUP6 ADD PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x8AF DUP2 PUSH2 0x2362 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT ISZERO PUSH2 0x2648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 SHL DUP1 DUP6 PUSH1 0x40 DUP6 ADD CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP5 PUSH1 0x40 DUP5 ADD DUP4 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x26A4 JUMPI DUP3 CALLDATALOAD PUSH2 0x2689 DUP2 PUSH2 0x2362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2676 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xD19 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID DUP7 0xD0 EXTCODEHASH NUMBER 0xC PUSH23 0x16021073D7A71766F632F1CE19F289AA989534D9F47322 MSTORE8 0xEB MSIZE STOP CODESIZE 0xC5 0x49 PUSH24 0x604F1A5C0A3604CBBECD0153C81E3131799EAD95755E8BB5 0xD5 0xB9 0xE8 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xAC 0xE4 PUSH19 0x916EC2CD8F356962B35E0F0A547D8FB33FF9B8 PUSH3 0x5A5898 SWAP13 PUSH9 0x9719A864736F6C6343 STOP ADDMOD GT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        776,
        22006
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "6": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "12": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "REVERT",
      "path": "17"
    },
    "16": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "17": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "POP",
      "path": "17"
    },
    "18": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "21": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "LT",
      "path": "17"
    },
    "22": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x158"
    },
    "25": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "26": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "29": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "SHR",
      "path": "17"
    },
    "32": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "33": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x712FC00B"
    },
    "38": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "GT",
      "path": "17"
    },
    "39": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC3"
    },
    "42": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "43": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "44": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xB314D414"
    },
    "49": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "GT",
      "path": "17"
    },
    "50": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "54": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "55": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xB314D414"
    },
    "60": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "61": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x30E"
    },
    "64": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "65": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "66": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xBBD652C7"
    },
    "71": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "72": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x321"
    },
    "75": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "76": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "77": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xC3C5A547"
    },
    "82": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "83": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x33C"
    },
    "86": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "87": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "88": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xC4308805"
    },
    "93": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "94": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x36A"
    },
    "97": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "98": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "99": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xC6171134"
    },
    "104": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "105": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x37D"
    },
    "108": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "109": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "110": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xE4AECB54"
    },
    "115": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "116": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x390"
    },
    "119": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "120": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "123": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "REVERT",
      "path": "17"
    },
    "124": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "125": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "126": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x712FC00B"
    },
    "131": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "132": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x28E"
    },
    "135": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "136": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "137": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x7D3E3DBE"
    },
    "142": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "143": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2A1"
    },
    "146": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "147": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "148": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xA0AF2903"
    },
    "153": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "154": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2B4"
    },
    "157": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "158": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "159": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xA14584C1"
    },
    "164": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "165": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2C7"
    },
    "168": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "169": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "170": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xA2F367AB"
    },
    "175": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "176": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2DA"
    },
    "179": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "180": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "181": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xA6529EB5"
    },
    "186": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "187": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2ED"
    },
    "190": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "191": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "193": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "194": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "REVERT",
      "path": "17"
    },
    "195": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "196": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "197": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x3F1CC5FA"
    },
    "202": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "GT",
      "path": "17"
    },
    "203": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "207": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "208": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x3F1CC5FA"
    },
    "213": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "214": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1FF"
    },
    "217": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "218": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "219": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x4420E486"
    },
    "224": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "225": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x212"
    },
    "228": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "229": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "230": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x55940E51"
    },
    "235": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "236": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x225"
    },
    "239": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "240": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "241": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x5745AE28"
    },
    "246": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "247": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x238"
    },
    "250": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "251": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "252": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x5EAE3173"
    },
    "257": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "258": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x258"
    },
    "261": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "262": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "263": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x6AF0C315"
    },
    "268": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "269": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x27B"
    },
    "272": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "273": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "275": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "276": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "REVERT",
      "path": "17"
    },
    "277": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "278": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "279": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x63298B6"
    },
    "284": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "285": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x15D"
    },
    "288": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "289": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "290": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x1E06B4B4"
    },
    "295": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "296": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x172"
    },
    "299": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "300": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "301": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x22FA2762"
    },
    "306": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "307": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x185"
    },
    "310": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "311": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "312": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x2EC2C246"
    },
    "317": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "318": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1AE"
    },
    "321": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "322": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "323": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x34A0DC10"
    },
    "328": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "329": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1C1"
    },
    "332": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "333": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "334": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x3C5030BB"
    },
    "339": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "EQ",
      "path": "17"
    },
    "340": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1D4"
    },
    "343": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "344": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "345": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "347": {
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "DUP1",
      "path": "17"
    },
    "348": {
      "first_revert": true,
      "fn": null,
      "offset": [
        776,
        22006
      ],
      "op": "REVERT",
      "path": "17"
    },
    "349": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10735,
        12263
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "350": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10735,
        12263
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x170"
    },
    "353": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10735,
        12263
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x16B"
    },
    "356": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10735,
        12263
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "357": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10735,
        12263
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "359": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10735,
        12263
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x23D6"
    },
    "362": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "jump": "i",
      "offset": [
        10735,
        12263
      ],
      "op": "JUMP",
      "path": "17"
    },
    "363": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10735,
        12263
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "364": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10735,
        12263
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3A3"
    },
    "367": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "jump": "i",
      "offset": [
        10735,
        12263
      ],
      "op": "JUMP",
      "path": "17"
    },
    "368": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10735,
        12263
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "369": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10735,
        12263
      ],
      "op": "STOP",
      "path": "17"
    },
    "370": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        14890,
        15615
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "371": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        14890,
        15615
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x170"
    },
    "374": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        14890,
        15615
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x180"
    },
    "377": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        14890,
        15615
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "378": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        14890,
        15615
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "380": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        14890,
        15615
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x243D"
    },
    "383": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "jump": "i",
      "offset": [
        14890,
        15615
      ],
      "op": "JUMP",
      "path": "17"
    },
    "384": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        14890,
        15615
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "385": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        14890,
        15615
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x69D"
    },
    "388": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "jump": "i",
      "offset": [
        14890,
        15615
      ],
      "op": "JUMP",
      "path": "17"
    },
    "389": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "390": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x198"
    },
    "393": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x193"
    },
    "396": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "397": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "399": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2476"
    },
    "402": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "jump": "i",
      "offset": [
        20332,
        20659
      ],
      "op": "JUMP",
      "path": "17"
    },
    "403": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "404": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x869"
    },
    "407": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "jump": "i",
      "offset": [
        20332,
        20659
      ],
      "op": "JUMP",
      "path": "17"
    },
    "408": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "409": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "411": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "412": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A5"
    },
    "415": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "416": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "417": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2493"
    },
    "420": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "jump": "i",
      "offset": [
        20332,
        20659
      ],
      "op": "JUMP",
      "path": "17"
    },
    "421": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "422": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "424": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "425": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "DUP1",
      "path": "17"
    },
    "426": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "427": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "SUB",
      "path": "17"
    },
    "428": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "429": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "RETURN",
      "path": "17"
    },
    "430": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4243,
        4771
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "431": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4243,
        4771
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x170"
    },
    "434": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4243,
        4771
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1BC"
    },
    "437": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4243,
        4771
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "438": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4243,
        4771
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "440": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4243,
        4771
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2476"
    },
    "443": {
      "fn": "OperatorFilterRegistry.unregister",
      "jump": "i",
      "offset": [
        4243,
        4771
      ],
      "op": "JUMP",
      "path": "17"
    },
    "444": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4243,
        4771
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "445": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4243,
        4771
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8D7"
    },
    "448": {
      "fn": "OperatorFilterRegistry.unregister",
      "jump": "i",
      "offset": [
        4243,
        4771
      ],
      "op": "JUMP",
      "path": "17"
    },
    "449": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14144,
        14771
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "450": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14144,
        14771
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x170"
    },
    "453": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14144,
        14771
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1CF"
    },
    "456": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14144,
        14771
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "457": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14144,
        14771
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "459": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14144,
        14771
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x24D7"
    },
    "462": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "jump": "i",
      "offset": [
        14144,
        14771
      ],
      "op": "JUMP",
      "path": "17"
    },
    "463": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14144,
        14771
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "464": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14144,
        14771
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA88"
    },
    "467": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "jump": "i",
      "offset": [
        14144,
        14771
      ],
      "op": "JUMP",
      "path": "17"
    },
    "468": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17020,
        17353
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "469": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17020,
        17353
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E7"
    },
    "472": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17020,
        17353
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E2"
    },
    "475": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17020,
        17353
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "476": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17020,
        17353
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "478": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17020,
        17353
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2476"
    },
    "481": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "jump": "i",
      "offset": [
        17020,
        17353
      ],
      "op": "JUMP",
      "path": "17"
    },
    "482": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17020,
        17353
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "483": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17020,
        17353
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC3F"
    },
    "486": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "jump": "i",
      "offset": [
        17020,
        17353
      ],
      "op": "JUMP",
      "path": "17"
    },
    "487": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17020,
        17353
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "488": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17020,
        17353
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "490": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17020,
        17353
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "497": {
      "op": "SHL"
    },
    "498": {
      "op": "SUB"
    },
    "499": {
      "op": "SWAP1"
    },
    "500": {
      "op": "SWAP2"
    },
    "501": {
      "op": "AND"
    },
    "502": {
      "op": "DUP2"
    },
    "503": {
      "op": "MSTORE"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "506": {
      "op": "ADD"
    },
    "507": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17020,
        17353
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A5"
    },
    "510": {
      "op": "JUMP"
    },
    "511": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        20904,
        21237
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "512": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        20904,
        21237
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E7"
    },
    "515": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        20904,
        21237
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x20D"
    },
    "518": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        20904,
        21237
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "519": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        20904,
        21237
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "521": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        20904,
        21237
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x250C"
    },
    "524": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "jump": "i",
      "offset": [
        20904,
        21237
      ],
      "op": "JUMP",
      "path": "17"
    },
    "525": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        20904,
        21237
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "526": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        20904,
        21237
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCA5"
    },
    "529": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "jump": "i",
      "offset": [
        20904,
        21237
      ],
      "op": "JUMP",
      "path": "17"
    },
    "530": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3559,
        3851
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "531": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3559,
        3851
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x170"
    },
    "534": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3559,
        3851
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x220"
    },
    "537": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3559,
        3851
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "538": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3559,
        3851
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "540": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3559,
        3851
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2476"
    },
    "543": {
      "fn": "OperatorFilterRegistry.register",
      "jump": "i",
      "offset": [
        3559,
        3851
      ],
      "op": "JUMP",
      "path": "17"
    },
    "544": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3559,
        3851
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "545": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3559,
        3851
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD1F"
    },
    "548": {
      "fn": "OperatorFilterRegistry.register",
      "jump": "i",
      "offset": [
        3559,
        3851
      ],
      "op": "JUMP",
      "path": "17"
    },
    "549": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17859,
        18006
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "550": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17859,
        18006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E7"
    },
    "553": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17859,
        18006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x233"
    },
    "556": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17859,
        18006
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "557": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17859,
        18006
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "559": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17859,
        18006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x250C"
    },
    "562": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "jump": "i",
      "offset": [
        17859,
        18006
      ],
      "op": "JUMP",
      "path": "17"
    },
    "563": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17859,
        18006
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "564": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17859,
        18006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE5F"
    },
    "567": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "jump": "i",
      "offset": [
        17859,
        18006
      ],
      "op": "JUMP",
      "path": "17"
    },
    "568": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17519,
        17658
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "569": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17519,
        17658
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x24B"
    },
    "572": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17519,
        17658
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x246"
    },
    "575": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17519,
        17658
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "576": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17519,
        17658
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "578": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17519,
        17658
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2476"
    },
    "581": {
      "fn": "OperatorFilterRegistry.subscribers",
      "jump": "i",
      "offset": [
        17519,
        17658
      ],
      "op": "JUMP",
      "path": "17"
    },
    "582": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17519,
        17658
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "583": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17519,
        17658
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE81"
    },
    "586": {
      "fn": "OperatorFilterRegistry.subscribers",
      "jump": "i",
      "offset": [
        17519,
        17658
      ],
      "op": "JUMP",
      "path": "17"
    },
    "587": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17519,
        17658
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "588": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17519,
        17658
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "590": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17519,
        17658
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "591": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17519,
        17658
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A5"
    },
    "594": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17519,
        17658
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "595": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17519,
        17658
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "596": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17519,
        17658
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2538"
    },
    "599": {
      "fn": "OperatorFilterRegistry.subscribers",
      "jump": "i",
      "offset": [
        17519,
        17658
      ],
      "op": "JUMP",
      "path": "17"
    },
    "600": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19075,
        19492
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "601": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19075,
        19492
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x26B"
    },
    "604": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19075,
        19492
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x266"
    },
    "607": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19075,
        19492
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "608": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19075,
        19492
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "610": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19075,
        19492
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x243D"
    },
    "613": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "jump": "i",
      "offset": [
        19075,
        19492
      ],
      "op": "JUMP",
      "path": "17"
    },
    "614": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19075,
        19492
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "615": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19075,
        19492
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xEA5"
    },
    "618": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "jump": "i",
      "offset": [
        19075,
        19492
      ],
      "op": "JUMP",
      "path": "17"
    },
    "619": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19075,
        19492
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "620": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19075,
        19492
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "622": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19075,
        19492
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "623": {
      "op": "SWAP1"
    },
    "624": {
      "op": "ISZERO"
    },
    "625": {
      "op": "ISZERO"
    },
    "626": {
      "op": "DUP2"
    },
    "627": {
      "op": "MSTORE"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "630": {
      "op": "ADD"
    },
    "631": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19075,
        19492
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A5"
    },
    "634": {
      "op": "JUMP"
    },
    "635": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18587,
        18940
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "636": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18587,
        18940
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x26B"
    },
    "639": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18587,
        18940
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x289"
    },
    "642": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18587,
        18940
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "643": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18587,
        18940
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "645": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18587,
        18940
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x250C"
    },
    "648": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "jump": "i",
      "offset": [
        18587,
        18940
      ],
      "op": "JUMP",
      "path": "17"
    },
    "649": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18587,
        18940
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "650": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18587,
        18940
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF25"
    },
    "653": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "jump": "i",
      "offset": [
        18587,
        18940
      ],
      "op": "JUMP",
      "path": "17"
    },
    "654": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        7970,
        9010
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "655": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        7970,
        9010
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x170"
    },
    "658": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        7970,
        9010
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x29C"
    },
    "661": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        7970,
        9010
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "662": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        7970,
        9010
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "664": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        7970,
        9010
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2579"
    },
    "667": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "jump": "i",
      "offset": [
        7970,
        9010
      ],
      "op": "JUMP",
      "path": "17"
    },
    "668": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        7970,
        9010
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "669": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        7970,
        9010
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF8D"
    },
    "672": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "jump": "i",
      "offset": [
        7970,
        9010
      ],
      "op": "JUMP",
      "path": "17"
    },
    "673": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        4920,
        5837
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "674": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        4920,
        5837
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x170"
    },
    "677": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        4920,
        5837
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2AF"
    },
    "680": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        4920,
        5837
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "681": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        4920,
        5837
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "683": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        4920,
        5837
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x243D"
    },
    "686": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "jump": "i",
      "offset": [
        4920,
        5837
      ],
      "op": "JUMP",
      "path": "17"
    },
    "687": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        4920,
        5837
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "688": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        4920,
        5837
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x11D6"
    },
    "691": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "jump": "i",
      "offset": [
        4920,
        5837
      ],
      "op": "JUMP",
      "path": "17"
    },
    "692": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6019,
        6754
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "693": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6019,
        6754
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x170"
    },
    "696": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6019,
        6754
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2C2"
    },
    "699": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6019,
        6754
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "700": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6019,
        6754
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "702": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6019,
        6754
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x243D"
    },
    "705": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "jump": "i",
      "offset": [
        6019,
        6754
      ],
      "op": "JUMP",
      "path": "17"
    },
    "706": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6019,
        6754
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "707": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6019,
        6754
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1420"
    },
    "710": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "jump": "i",
      "offset": [
        6019,
        6754
      ],
      "op": "JUMP",
      "path": "17"
    },
    "711": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9178,
        10565
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "712": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9178,
        10565
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x170"
    },
    "715": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9178,
        10565
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2D5"
    },
    "718": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9178,
        10565
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "719": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9178,
        10565
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "721": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9178,
        10565
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x23D6"
    },
    "724": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "jump": "i",
      "offset": [
        9178,
        10565
      ],
      "op": "JUMP",
      "path": "17"
    },
    "725": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9178,
        10565
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "726": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9178,
        10565
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x15DD"
    },
    "729": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "jump": "i",
      "offset": [
        9178,
        10565
      ],
      "op": "JUMP",
      "path": "17"
    },
    "730": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        6894,
        7839
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "731": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        6894,
        7839
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x170"
    },
    "734": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        6894,
        7839
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2E8"
    },
    "737": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        6894,
        7839
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "738": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        6894,
        7839
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "740": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        6894,
        7839
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x25B7"
    },
    "743": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "jump": "i",
      "offset": [
        6894,
        7839
      ],
      "op": "JUMP",
      "path": "17"
    },
    "744": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        6894,
        7839
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "745": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        6894,
        7839
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1874"
    },
    "748": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "jump": "i",
      "offset": [
        6894,
        7839
      ],
      "op": "JUMP",
      "path": "17"
    },
    "749": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21484,
        21819
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "750": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21484,
        21819
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x300"
    },
    "753": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21484,
        21819
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2FB"
    },
    "756": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21484,
        21819
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "757": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21484,
        21819
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "759": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21484,
        21819
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x250C"
    },
    "762": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "jump": "i",
      "offset": [
        21484,
        21819
      ],
      "op": "JUMP",
      "path": "17"
    },
    "763": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21484,
        21819
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "764": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21484,
        21819
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A97"
    },
    "767": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "jump": "i",
      "offset": [
        21484,
        21819
      ],
      "op": "JUMP",
      "path": "17"
    },
    "768": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21484,
        21819
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "769": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21484,
        21819
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "771": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21484,
        21819
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "772": {
      "op": "SWAP1"
    },
    "773": {
      "op": "DUP2"
    },
    "774": {
      "op": "MSTORE"
    },
    "775": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "777": {
      "op": "ADD"
    },
    "778": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21484,
        21819
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A5"
    },
    "781": {
      "op": "JUMP"
    },
    "782": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12689,
        13985
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "783": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12689,
        13985
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x170"
    },
    "786": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12689,
        13985
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x31C"
    },
    "789": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12689,
        13985
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "790": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12689,
        13985
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "792": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12689,
        13985
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x243D"
    },
    "795": {
      "fn": "OperatorFilterRegistry.subscribe",
      "jump": "i",
      "offset": [
        12689,
        13985
      ],
      "op": "JUMP",
      "path": "17"
    },
    "796": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12689,
        13985
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "797": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12689,
        13985
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1AFF"
    },
    "800": {
      "fn": "OperatorFilterRegistry.subscribe",
      "jump": "i",
      "offset": [
        12689,
        13985
      ],
      "op": "JUMP",
      "path": "17"
    },
    "801": {
      "fn": "OperatorFilterRegistry.codeHashOf",
      "offset": [
        21907,
        22004
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "802": {
      "fn": "OperatorFilterRegistry.codeHashOf",
      "offset": [
        21907,
        22004
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x300"
    },
    "805": {
      "fn": "OperatorFilterRegistry.codeHashOf",
      "offset": [
        21907,
        22004
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x32F"
    },
    "808": {
      "fn": "OperatorFilterRegistry.codeHashOf",
      "offset": [
        21907,
        22004
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "809": {
      "fn": "OperatorFilterRegistry.codeHashOf",
      "offset": [
        21907,
        22004
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "811": {
      "fn": "OperatorFilterRegistry.codeHashOf",
      "offset": [
        21907,
        22004
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2476"
    },
    "814": {
      "fn": "OperatorFilterRegistry.codeHashOf",
      "jump": "i",
      "offset": [
        21907,
        22004
      ],
      "op": "JUMP",
      "path": "17"
    },
    "815": {
      "fn": "OperatorFilterRegistry.codeHashOf",
      "offset": [
        21907,
        22004
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "822": {
      "op": "SHL"
    },
    "823": {
      "op": "SUB"
    },
    "824": {
      "fn": "OperatorFilterRegistry.codeHashOf",
      "offset": [
        21987,
        21997
      ],
      "op": "AND",
      "path": "17",
      "statement": 0
    },
    "825": {
      "fn": "OperatorFilterRegistry.codeHashOf",
      "offset": [
        21987,
        21997
      ],
      "op": "EXTCODEHASH",
      "path": "17"
    },
    "826": {
      "fn": "OperatorFilterRegistry.codeHashOf",
      "offset": [
        21987,
        21997
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "827": {
      "fn": "OperatorFilterRegistry.codeHashOf",
      "offset": [
        21907,
        22004
      ],
      "op": "JUMP",
      "path": "17"
    },
    "828": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19571,
        19706
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "829": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19571,
        19706
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x26B"
    },
    "832": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19571,
        19706
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x34A"
    },
    "835": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19571,
        19706
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "836": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19571,
        19706
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "838": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19571,
        19706
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2476"
    },
    "841": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "jump": "i",
      "offset": [
        19571,
        19706
      ],
      "op": "JUMP",
      "path": "17"
    },
    "842": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19571,
        19706
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "849": {
      "op": "SHL"
    },
    "850": {
      "op": "SUB"
    },
    "851": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19659,
        19685
      ],
      "op": "SWAP1",
      "path": "17",
      "statement": 1
    },
    "852": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19659,
        19685
      ],
      "op": "DUP2",
      "path": "17"
    },
    "853": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19659,
        19685
      ],
      "op": "AND",
      "path": "17"
    },
    "854": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19636,
        19640
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "856": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19659,
        19685
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "857": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19659,
        19685
      ],
      "op": "DUP2",
      "path": "17"
    },
    "858": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19659,
        19685
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "859": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19659,
        19673
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "861": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19659,
        19685
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "863": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19659,
        19685
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "864": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19659,
        19685
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "866": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19659,
        19685
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "867": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19659,
        19685
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "868": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19659,
        19685
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "869": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19659,
        19685
      ],
      "op": "AND",
      "path": "17"
    },
    "870": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19659,
        19699
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "871": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19659,
        19699
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "872": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19659,
        19699
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "873": {
      "fn": "OperatorFilterRegistry.isRegistered",
      "offset": [
        19571,
        19706
      ],
      "op": "JUMP",
      "path": "17"
    },
    "874": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19821,
        20145
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "875": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19821,
        20145
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x24B"
    },
    "878": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19821,
        20145
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x378"
    },
    "881": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19821,
        20145
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "882": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19821,
        20145
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "884": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19821,
        20145
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2476"
    },
    "887": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "jump": "i",
      "offset": [
        19821,
        20145
      ],
      "op": "JUMP",
      "path": "17"
    },
    "888": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19821,
        20145
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "889": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19821,
        20145
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DF8"
    },
    "892": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "jump": "i",
      "offset": [
        19821,
        20145
      ],
      "op": "JUMP",
      "path": "17"
    },
    "893": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2467,
        3359
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "894": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2467,
        3359
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x26B"
    },
    "897": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2467,
        3359
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x38B"
    },
    "900": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2467,
        3359
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "901": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2467,
        3359
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "903": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2467,
        3359
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x243D"
    },
    "906": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "jump": "i",
      "offset": [
        2467,
        3359
      ],
      "op": "JUMP",
      "path": "17"
    },
    "907": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2467,
        3359
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "908": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2467,
        3359
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E5F"
    },
    "911": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "jump": "i",
      "offset": [
        2467,
        3359
      ],
      "op": "JUMP",
      "path": "17"
    },
    "912": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18120,
        18471
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "913": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18120,
        18471
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x26B"
    },
    "916": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18120,
        18471
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x39E"
    },
    "919": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18120,
        18471
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "920": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18120,
        18471
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "922": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18120,
        18471
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x243D"
    },
    "925": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "jump": "i",
      "offset": [
        18120,
        18471
      ],
      "op": "JUMP",
      "path": "17"
    },
    "926": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18120,
        18471
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "927": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18120,
        18471
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1F3A"
    },
    "930": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "jump": "i",
      "offset": [
        18120,
        18471
      ],
      "op": "JUMP",
      "path": "17"
    },
    "931": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10735,
        12263
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "932": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10871,
        10881
      ],
      "op": "DUP4",
      "path": "17"
    },
    "933": {
      "offset": [
        1679,
        1689
      ],
      "op": "CALLER",
      "path": "17"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "940": {
      "op": "SHL"
    },
    "941": {
      "op": "SUB"
    },
    "942": {
      "offset": [
        1679,
        1697
      ],
      "op": "DUP3",
      "path": "17"
    },
    "943": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1679,
        1697
      ],
      "op": "AND",
      "path": "17"
    },
    "944": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1679,
        1697
      ],
      "op": "EQ",
      "path": "17"
    },
    "945": {
      "offset": [
        1675,
        2239
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x497"
    },
    "948": {
      "offset": [
        1675,
        2239
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "949": {
      "offset": [
        1725,
        1729
      ],
      "op": "DUP1",
      "path": "17"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "956": {
      "op": "SHL"
    },
    "957": {
      "op": "SUB"
    },
    "958": {
      "offset": [
        1717,
        1736
      ],
      "op": "AND",
      "path": "17"
    },
    "959": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1736
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8DA5CB5B"
    },
    "964": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "966": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "967": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "968": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "973": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "974": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "976": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "SHL",
      "path": "17"
    },
    "977": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "978": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "979": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "981": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "982": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "984": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "986": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "987": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "988": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP4",
      "path": "17"
    },
    "989": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "SUB",
      "path": "17"
    },
    "990": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "991": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP7",
      "path": "17"
    },
    "992": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "GAS",
      "path": "17"
    },
    "993": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "994": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "995": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "996": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "997": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "998": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "999": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1000": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x40E"
    },
    "1003": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1004": {
      "op": "POP"
    },
    "1005": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1007": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1008": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1009": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "1011": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1012": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1013": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1014": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1017": {
      "op": "NOT"
    },
    "1018": {
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "1019": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1020": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "1021": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1022": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1023": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1024": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x40B"
    },
    "1027": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1028": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1029": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "1030": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1031": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x25F5"
    },
    "1034": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1035": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1036": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "1038": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1039": {
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x46C"
    },
    "1042": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1043": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1044": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1045": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1046": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1047": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x43C"
    },
    "1050": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1051": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1053": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1054": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1055": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "POP",
      "path": "17"
    },
    "1056": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "1058": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "NOT",
      "path": "17"
    },
    "1059": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3F"
    },
    "1061": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1062": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "1063": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "AND",
      "path": "17"
    },
    "1064": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1065": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "1066": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1068": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1069": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1070": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1071": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1072": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1073": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1075": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1077": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP5",
      "path": "17"
    },
    "1078": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "1079": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "1080": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x441"
    },
    "1083": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1084": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1085": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "1087": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1088": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "POP",
      "path": "17"
    },
    "1089": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1090": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1713,
        2229
      ],
      "op": "POP",
      "path": "17"
    },
    "1091": {
      "offset": [
        1939,
        1945
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1092": {
      "offset": [
        1939,
        1952
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1093": {
      "offset": [
        1956,
        1957
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1095": {
      "offset": [
        1939,
        1957
      ],
      "op": "SUB",
      "path": "17"
    },
    "1096": {
      "offset": [
        1935,
        2215
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x464"
    },
    "1099": {
      "offset": [
        1935,
        2215
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1100": {
      "offset": [
        1988,
        2000
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1102": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1988,
        2000
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1103": {
      "op": "PUSH4",
      "value": "0x2CB0505"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0xE6"
    },
    "1110": {
      "op": "SHL"
    },
    "1111": {
      "offset": [
        1988,
        2000
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1112": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1988,
        2000
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1113": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1988,
        2000
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1115": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1988,
        2000
      ],
      "op": "ADD",
      "path": "17"
    },
    "1116": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1988,
        2000
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1118": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1988,
        2000
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1119": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1988,
        2000
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1120": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1988,
        2000
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1121": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1988,
        2000
      ],
      "op": "SUB",
      "path": "17"
    },
    "1122": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1988,
        2000
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1123": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1988,
        2000
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1124": {
      "offset": [
        1935,
        2215
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1125": {
      "offset": [
        2167,
        2173
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1126": {
      "offset": [
        2161,
        2174
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1127": {
      "offset": [
        2152,
        2158
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1128": {
      "offset": [
        2148,
        2150
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1130": {
      "offset": [
        2144,
        2159
      ],
      "op": "ADD",
      "path": "17"
    },
    "1131": {
      "offset": [
        2137,
        2175
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1132": {
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1133": {
      "offset": [
        1785,
        1795
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1140": {
      "op": "SHL"
    },
    "1141": {
      "op": "SUB"
    },
    "1142": {
      "offset": [
        1785,
        1804
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1143": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1785,
        1804
      ],
      "op": "AND",
      "path": "17"
    },
    "1144": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1785,
        1804
      ],
      "op": "EQ",
      "path": "17"
    },
    "1145": {
      "offset": [
        1781,
        1874
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x495"
    },
    "1148": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1149": {
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1151": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1152": {
      "op": "PUSH4",
      "value": "0x1F9EBDFF"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1159": {
      "op": "SHL"
    },
    "1160": {
      "offset": [
        1835,
        1855
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1161": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1835,
        1855
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1162": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1164": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1835,
        1855
      ],
      "op": "ADD",
      "path": "17"
    },
    "1165": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1167": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1168": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1835,
        1855
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1169": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1170": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1835,
        1855
      ],
      "op": "SUB",
      "path": "17"
    },
    "1171": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1172": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        1835,
        1855
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1173": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1174": {
      "offset": [
        1739,
        1888
      ],
      "op": "POP",
      "path": "17"
    },
    "1175": {
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1182": {
      "op": "SHL"
    },
    "1183": {
      "op": "SUB"
    },
    "1184": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10920,
        10946
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1185": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10920,
        10946
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1186": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10920,
        10946
      ],
      "op": "AND",
      "path": "17"
    },
    "1187": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10897,
        10917
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1189": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10920,
        10946
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1190": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10920,
        10946
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1191": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10920,
        10946
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1192": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10920,
        10934
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "1194": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10920,
        10946
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1196": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10920,
        10946
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1197": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10920,
        10946
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1199": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10920,
        10946
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1200": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10920,
        10946
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1201": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10920,
        10946
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1202": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10920,
        10946
      ],
      "op": "AND",
      "path": "17"
    },
    "1203": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10920,
        10946
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1204": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10956,
        11045
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 2,
      "value": "0x4E0"
    },
    "1207": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10956,
        11045
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1208": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11009,
        11034
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1210": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11009,
        11034
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1211": {
      "op": "PUSH4",
      "value": "0xBFC6C337"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1218": {
      "op": "SHL"
    },
    "1219": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11009,
        11034
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1220": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11009,
        11034
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1227": {
      "op": "SHL"
    },
    "1228": {
      "op": "SUB"
    },
    "1229": {
      "op": "DUP8"
    },
    "1230": {
      "op": "AND"
    },
    "1231": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11009,
        11034
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1233": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11009,
        11034
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1234": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11009,
        11034
      ],
      "op": "ADD",
      "path": "17"
    },
    "1235": {
      "op": "MSTORE"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1238": {
      "op": "ADD"
    },
    "1239": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11009,
        11034
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1240": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11009,
        11034
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1242": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11009,
        11034
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1243": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11009,
        11034
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1244": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11009,
        11034
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1245": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11009,
        11034
      ],
      "op": "SUB",
      "path": "17"
    },
    "1246": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11009,
        11034
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1247": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11009,
        11034
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1248": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10956,
        11045
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1249": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11074,
        11084
      ],
      "op": "DUP6",
      "path": "17",
      "statement": 3
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1256": {
      "op": "SHL"
    },
    "1257": {
      "op": "SUB"
    },
    "1258": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11058,
        11084
      ],
      "op": "AND",
      "path": "17"
    },
    "1259": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11058,
        11070
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1266": {
      "op": "SHL"
    },
    "1267": {
      "op": "SUB"
    },
    "1268": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11058,
        11084
      ],
      "op": "AND",
      "path": "17"
    },
    "1269": {
      "branch": 121,
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11058,
        11084
      ],
      "op": "EQ",
      "path": "17"
    },
    "1270": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11054,
        11159
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x51D"
    },
    "1273": {
      "branch": 121,
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11054,
        11159
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1274": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11107,
        11148
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1276": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11107,
        11148
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1277": {
      "op": "PUSH4",
      "value": "0x4AF4D69"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1284": {
      "op": "SHL"
    },
    "1285": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11107,
        11148
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1286": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11107,
        11148
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1293": {
      "op": "SHL"
    },
    "1294": {
      "op": "SUB"
    },
    "1295": {
      "op": "DUP3"
    },
    "1296": {
      "op": "AND"
    },
    "1297": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11107,
        11148
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1299": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11107,
        11148
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1300": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11107,
        11148
      ],
      "op": "ADD",
      "path": "17"
    },
    "1301": {
      "op": "MSTORE"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1304": {
      "op": "ADD"
    },
    "1305": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11107,
        11148
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "1308": {
      "op": "JUMP"
    },
    "1309": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11054,
        11159
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1316": {
      "op": "SHL"
    },
    "1317": {
      "op": "SUB"
    },
    "1318": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11225,
        11256
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1319": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11225,
        11256
      ],
      "op": "AND",
      "path": "17"
    },
    "1320": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11168,
        11222
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1322": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11225,
        11256
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1323": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11225,
        11256
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1324": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11225,
        11256
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1325": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11225,
        11244
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "1327": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11225,
        11256
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1329": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11225,
        11256
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1330": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11225,
        11256
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1332": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11225,
        11256
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1333": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11225,
        11256
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1334": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11293,
        11303
      ],
      "op": "DUP5",
      "path": "17"
    },
    "1335": {
      "branch": 122,
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11349,
        11357
      ],
      "op": "DUP5",
      "path": "17"
    },
    "1336": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11344,
        12181
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5AB"
    },
    "1339": {
      "branch": 122,
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11344,
        12181
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1340": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11382,
        11391
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1342": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11377,
        11692
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1343": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11401,
        11417
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1344": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11397,
        11398
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1345": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11397,
        11417
      ],
      "op": "LT",
      "path": "17"
    },
    "1346": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11377,
        11692
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1347": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11377,
        11692
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5A5"
    },
    "1350": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11377,
        11692
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1351": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11446,
        11462
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1353": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11465,
        11475
      ],
      "op": "DUP9",
      "path": "17"
    },
    "1354": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11465,
        11475
      ],
      "op": "DUP9",
      "path": "17"
    },
    "1355": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11476,
        11477
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1356": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11465,
        11478
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1357": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11465,
        11478
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1358": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11465,
        11478
      ],
      "op": "LT",
      "path": "17"
    },
    "1359": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11465,
        11478
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x55A"
    },
    "1362": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11465,
        11478
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1363": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11465,
        11478
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x55A"
    },
    "1366": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11465,
        11478
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2612"
    },
    "1369": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "jump": "i",
      "offset": [
        11465,
        11478
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1370": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11465,
        11478
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1371": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11465,
        11478
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1372": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11465,
        11478
      ],
      "op": "POP",
      "path": "17"
    },
    "1373": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11465,
        11478
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1375": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11465,
        11478
      ],
      "op": "MUL",
      "path": "17"
    },
    "1376": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11465,
        11478
      ],
      "op": "ADD",
      "path": "17"
    },
    "1377": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11465,
        11478
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "1378": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11446,
        11478
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1379": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11446,
        11478
      ],
      "op": "POP",
      "path": "17"
    },
    "1380": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11500,
        11512
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1382": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11515,
        11553
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x578"
    },
    "1385": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11544,
        11552
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1386": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11515,
        11536
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1387": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11515,
        11543
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1FA2"
    },
    "1390": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11515,
        11543
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1391": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11515,
        11553
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1392": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11515,
        11553
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1393": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11515,
        11553
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "1398": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11515,
        11553
      ],
      "op": "AND",
      "path": "17"
    },
    "1399": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "jump": "i",
      "offset": [
        11515,
        11553
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1400": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11515,
        11553
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1401": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11500,
        11553
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1402": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11500,
        11553
      ],
      "op": "POP",
      "path": "17"
    },
    "1403": {
      "branch": 123,
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11580,
        11587
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 4
    },
    "1404": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11575,
        11674
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x59B"
    },
    "1407": {
      "branch": 123,
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11575,
        11674
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1408": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11622,
        11651
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1410": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11622,
        11651
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1411": {
      "op": "PUSH4",
      "value": "0x8F0E615"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1418": {
      "op": "SHL"
    },
    "1419": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11622,
        11651
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1420": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11622,
        11651
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1421": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11622,
        11651
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1423": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11622,
        11651
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1424": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11622,
        11651
      ],
      "op": "ADD",
      "path": "17"
    },
    "1425": {
      "op": "DUP4"
    },
    "1426": {
      "op": "SWAP1"
    },
    "1427": {
      "op": "MSTORE"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1430": {
      "op": "ADD"
    },
    "1431": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11622,
        11651
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "1434": {
      "op": "JUMP"
    },
    "1435": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11575,
        11674
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1436": {
      "op": "POP"
    },
    "1437": {
      "op": "POP"
    },
    "1438": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11419,
        11422
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 5,
      "value": "0x1"
    },
    "1440": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11419,
        11422
      ],
      "op": "ADD",
      "path": "17"
    },
    "1441": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11377,
        11692
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x53E"
    },
    "1444": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11377,
        11692
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1445": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11377,
        11692
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1446": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11377,
        11692
      ],
      "op": "POP",
      "path": "17"
    },
    "1447": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11344,
        12181
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x64D"
    },
    "1450": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11344,
        12181
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1451": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11344,
        12181
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1452": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11735,
        11744
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1454": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11730,
        12167
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1455": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11754,
        11770
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1456": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11750,
        11751
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1457": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11750,
        11770
      ],
      "op": "LT",
      "path": "17"
    },
    "1458": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11730,
        12167
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1459": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11730,
        12167
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x64B"
    },
    "1462": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11730,
        12167
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1463": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11799,
        11815
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1465": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11818,
        11828
      ],
      "op": "DUP9",
      "path": "17"
    },
    "1466": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11818,
        11828
      ],
      "op": "DUP9",
      "path": "17"
    },
    "1467": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11829,
        11830
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1468": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11818,
        11831
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1469": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11818,
        11831
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1470": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11818,
        11831
      ],
      "op": "LT",
      "path": "17"
    },
    "1471": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11818,
        11831
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5CA"
    },
    "1474": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11818,
        11831
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1475": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11818,
        11831
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5CA"
    },
    "1478": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11818,
        11831
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2612"
    },
    "1481": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "jump": "i",
      "offset": [
        11818,
        11831
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1482": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11818,
        11831
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1483": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11818,
        11831
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1484": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11818,
        11831
      ],
      "op": "POP",
      "path": "17"
    },
    "1485": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11818,
        11831
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1487": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11818,
        11831
      ],
      "op": "MUL",
      "path": "17"
    },
    "1488": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11818,
        11831
      ],
      "op": "ADD",
      "path": "17"
    },
    "1489": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11818,
        11831
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "1490": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11799,
        11831
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1491": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11799,
        11831
      ],
      "op": "POP",
      "path": "17"
    },
    "1492": {
      "offset": [
        1229,
        1242
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
    },
    "1525": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11857,
        11865
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 6
    },
    "1526": {
      "branch": 124,
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11857,
        11881
      ],
      "op": "SUB",
      "path": "17"
    },
    "1527": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11853,
        11957
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x613"
    },
    "1530": {
      "branch": 124,
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11853,
        11957
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1531": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11916,
        11934
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1533": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11916,
        11934
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1534": {
      "op": "PUSH4",
      "value": "0x1EAEBD5B"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1541": {
      "op": "SHL"
    },
    "1542": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11916,
        11934
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1543": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11916,
        11934
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1544": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11916,
        11934
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1546": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11916,
        11934
      ],
      "op": "ADD",
      "path": "17"
    },
    "1547": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11916,
        11934
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1549": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11916,
        11934
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1550": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11916,
        11934
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1551": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11916,
        11934
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1552": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11916,
        11934
      ],
      "op": "SUB",
      "path": "17"
    },
    "1553": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11916,
        11934
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1554": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11916,
        11934
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1555": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11853,
        11957
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1556": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11978,
        11988
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1558": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11991,
        12026
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x61F"
    },
    "1561": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11991,
        12012
      ],
      "op": "DUP6",
      "path": "17"
    },
    "1562": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12017,
        12025
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1563": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11991,
        12016
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1FAE"
    },
    "1566": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "jump": "i",
      "offset": [
        11991,
        12026
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1567": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11991,
        12026
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1568": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11978,
        12026
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1569": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11978,
        12026
      ],
      "op": "POP",
      "path": "17"
    },
    "1570": {
      "branch": 125,
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12053,
        12058
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 7
    },
    "1571": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12048,
        12149
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x641"
    },
    "1574": {
      "branch": 125,
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12048,
        12149
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1575": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12093,
        12126
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1577": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12093,
        12126
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1578": {
      "op": "PUSH3",
      "value": "0xC35F5"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "1584": {
      "op": "SHL"
    },
    "1585": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12093,
        12126
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1586": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12093,
        12126
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1587": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12093,
        12126
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1589": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12093,
        12126
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1590": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12093,
        12126
      ],
      "op": "ADD",
      "path": "17"
    },
    "1591": {
      "op": "DUP4"
    },
    "1592": {
      "op": "SWAP1"
    },
    "1593": {
      "op": "MSTORE"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1596": {
      "op": "ADD"
    },
    "1597": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12093,
        12126
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "1600": {
      "op": "JUMP"
    },
    "1601": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12048,
        12149
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1602": {
      "op": "POP"
    },
    "1603": {
      "op": "POP"
    },
    "1604": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11772,
        11775
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 8,
      "value": "0x1"
    },
    "1606": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11772,
        11775
      ],
      "op": "ADD",
      "path": "17"
    },
    "1607": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11730,
        12167
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5AE"
    },
    "1610": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11730,
        12167
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1611": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11730,
        12167
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1612": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11730,
        12167
      ],
      "op": "POP",
      "path": "17"
    },
    "1613": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        11344,
        12181
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1614": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12247,
        12255
      ],
      "op": "DUP5",
      "path": "17",
      "statement": 9
    },
    "1615": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12205,
        12256
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1616": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12205,
        12256
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1617": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12223,
        12233
      ],
      "op": "DUP9",
      "path": "17"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1624": {
      "op": "SHL"
    },
    "1625": {
      "op": "SUB"
    },
    "1626": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12205,
        12256
      ],
      "op": "AND",
      "path": "17"
    },
    "1627": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12205,
        12256
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x34E9F70C5A16A4DF2A396CF0CBC4735EB3C7FB6AE40AAA0B34BE7720121D1B96"
    },
    "1660": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12235,
        12245
      ],
      "op": "DUP10",
      "path": "17"
    },
    "1661": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12235,
        12245
      ],
      "op": "DUP10",
      "path": "17"
    },
    "1662": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12205,
        12256
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1664": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12205,
        12256
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1665": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12205,
        12256
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x68B"
    },
    "1668": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12205,
        12256
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1669": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12205,
        12256
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1670": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12205,
        12256
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1671": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12205,
        12256
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2628"
    },
    "1674": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "jump": "i",
      "offset": [
        12205,
        12256
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1675": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12205,
        12256
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1676": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12205,
        12256
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1678": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12205,
        12256
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1679": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12205,
        12256
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1680": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12205,
        12256
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1681": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12205,
        12256
      ],
      "op": "SUB",
      "path": "17"
    },
    "1682": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12205,
        12256
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1683": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        12205,
        12256
      ],
      "op": "LOG3",
      "path": "17"
    },
    "1684": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10887,
        12263
      ],
      "op": "POP",
      "path": "17"
    },
    "1685": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10887,
        12263
      ],
      "op": "POP",
      "path": "17"
    },
    "1686": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10887,
        12263
      ],
      "op": "POP",
      "path": "17"
    },
    "1687": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10735,
        12263
      ],
      "op": "POP",
      "path": "17"
    },
    "1688": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10735,
        12263
      ],
      "op": "POP",
      "path": "17"
    },
    "1689": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10735,
        12263
      ],
      "op": "POP",
      "path": "17"
    },
    "1690": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10735,
        12263
      ],
      "op": "POP",
      "path": "17"
    },
    "1691": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "offset": [
        10735,
        12263
      ],
      "op": "POP",
      "path": "17"
    },
    "1692": {
      "fn": "OperatorFilterRegistry.updateCodeHashes",
      "jump": "o",
      "offset": [
        10735,
        12263
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1693": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        14890,
        15615
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1694": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        14987,
        14997
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1695": {
      "offset": [
        1679,
        1689
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1702": {
      "op": "SHL"
    },
    "1703": {
      "op": "SUB"
    },
    "1704": {
      "offset": [
        1679,
        1697
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1705": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1679,
        1697
      ],
      "op": "AND",
      "path": "17"
    },
    "1706": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1679,
        1697
      ],
      "op": "EQ",
      "path": "17"
    },
    "1707": {
      "offset": [
        1675,
        2239
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x761"
    },
    "1710": {
      "offset": [
        1675,
        2239
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1711": {
      "offset": [
        1725,
        1729
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1718": {
      "op": "SHL"
    },
    "1719": {
      "op": "SUB"
    },
    "1720": {
      "offset": [
        1717,
        1736
      ],
      "op": "AND",
      "path": "17"
    },
    "1721": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1736
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8DA5CB5B"
    },
    "1726": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1728": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1729": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1730": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "1735": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "1736": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "1738": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "SHL",
      "path": "17"
    },
    "1739": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1740": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1741": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1743": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "1744": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1746": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1748": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1749": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1750": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1751": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "SUB",
      "path": "17"
    },
    "1752": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1753": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1754": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "GAS",
      "path": "17"
    },
    "1755": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "1756": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1757": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "1758": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "1759": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "1760": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1761": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1762": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x708"
    },
    "1765": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1766": {
      "op": "POP"
    },
    "1767": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1769": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1770": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1771": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "1773": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1774": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1775": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1776": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1779": {
      "op": "NOT"
    },
    "1780": {
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "1781": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1782": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "1783": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1784": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1785": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1786": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x705"
    },
    "1789": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1790": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1791": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "1792": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1793": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x25F5"
    },
    "1796": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1797": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1798": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "1800": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1801": {
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x736"
    },
    "1804": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1805": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1806": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1807": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1808": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1809": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x43C"
    },
    "1812": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1813": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1815": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1816": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1817": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "POP",
      "path": "17"
    },
    "1818": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "1820": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "NOT",
      "path": "17"
    },
    "1821": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3F"
    },
    "1823": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1824": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "1825": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "AND",
      "path": "17"
    },
    "1826": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1827": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "1828": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1830": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1831": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1832": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1833": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1834": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1835": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1837": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1839": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP5",
      "path": "17"
    },
    "1840": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "1841": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "1842": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x441"
    },
    "1845": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1846": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1847": {
      "offset": [
        1785,
        1795
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1854": {
      "op": "SHL"
    },
    "1855": {
      "op": "SUB"
    },
    "1856": {
      "offset": [
        1785,
        1804
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1857": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1785,
        1804
      ],
      "op": "AND",
      "path": "17"
    },
    "1858": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1785,
        1804
      ],
      "op": "EQ",
      "path": "17"
    },
    "1859": {
      "offset": [
        1781,
        1874
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x75F"
    },
    "1862": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1863": {
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1865": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1866": {
      "op": "PUSH4",
      "value": "0x1F9EBDFF"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1873": {
      "op": "SHL"
    },
    "1874": {
      "offset": [
        1835,
        1855
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1875": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1835,
        1855
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1876": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1878": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1835,
        1855
      ],
      "op": "ADD",
      "path": "17"
    },
    "1879": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1881": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1882": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1835,
        1855
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1883": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1884": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1835,
        1855
      ],
      "op": "SUB",
      "path": "17"
    },
    "1885": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1886": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        1835,
        1855
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1887": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1888": {
      "offset": [
        1739,
        1888
      ],
      "op": "POP",
      "path": "17"
    },
    "1889": {
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1890": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15027,
        15043
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 10
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1897": {
      "op": "SHL"
    },
    "1898": {
      "op": "SUB"
    },
    "1899": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15013,
        15043
      ],
      "op": "AND",
      "path": "17"
    },
    "1900": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15013,
        15023
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1907": {
      "op": "SHL"
    },
    "1908": {
      "op": "SUB"
    },
    "1909": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15013,
        15043
      ],
      "op": "AND",
      "path": "17"
    },
    "1910": {
      "branch": 126,
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15013,
        15043
      ],
      "op": "SUB",
      "path": "17"
    },
    "1911": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15009,
        15097
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x793"
    },
    "1914": {
      "branch": 126,
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15009,
        15097
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1915": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15066,
        15086
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1917": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15066,
        15086
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1918": {
      "op": "PUSH4",
      "value": "0x35956D7"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1925": {
      "op": "SHL"
    },
    "1926": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15066,
        15086
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1927": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15066,
        15086
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1928": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15066,
        15086
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1930": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15066,
        15086
      ],
      "op": "ADD",
      "path": "17"
    },
    "1931": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15066,
        15086
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1933": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15066,
        15086
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1934": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15066,
        15086
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1935": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15066,
        15086
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1936": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15066,
        15086
      ],
      "op": "SUB",
      "path": "17"
    },
    "1937": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15066,
        15086
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1938": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15066,
        15086
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1939": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15009,
        15097
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1946": {
      "op": "SHL"
    },
    "1947": {
      "op": "SUB"
    },
    "1948": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15129,
        15155
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1949": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15129,
        15155
      ],
      "op": "DUP5",
      "path": "17"
    },
    "1950": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15129,
        15155
      ],
      "op": "AND",
      "path": "17"
    },
    "1951": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15106,
        15126
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1953": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15129,
        15155
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1954": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15129,
        15155
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1955": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15129,
        15155
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1956": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15129,
        15143
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "1958": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15129,
        15155
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1960": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15129,
        15155
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1961": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15129,
        15155
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1963": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15129,
        15155
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1964": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15129,
        15155
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1965": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15129,
        15155
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1966": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15129,
        15155
      ],
      "op": "AND",
      "path": "17"
    },
    "1967": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15129,
        15155
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1968": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15165,
        15254
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 11,
      "value": "0x7D7"
    },
    "1971": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15165,
        15254
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1972": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15218,
        15243
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1974": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15218,
        15243
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1975": {
      "op": "PUSH4",
      "value": "0xBFC6C337"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1982": {
      "op": "SHL"
    },
    "1983": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15218,
        15243
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1984": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15218,
        15243
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1991": {
      "op": "SHL"
    },
    "1992": {
      "op": "SUB"
    },
    "1993": {
      "op": "DUP6"
    },
    "1994": {
      "op": "AND"
    },
    "1995": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15218,
        15243
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1997": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15218,
        15243
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1998": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15218,
        15243
      ],
      "op": "ADD",
      "path": "17"
    },
    "1999": {
      "op": "MSTORE"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2002": {
      "op": "ADD"
    },
    "2003": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15218,
        15243
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "2006": {
      "op": "JUMP"
    },
    "2007": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15165,
        15254
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2008": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15283,
        15293
      ],
      "op": "DUP4",
      "path": "17",
      "statement": 12
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2015": {
      "op": "SHL"
    },
    "2016": {
      "op": "SUB"
    },
    "2017": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15267,
        15293
      ],
      "op": "AND",
      "path": "17"
    },
    "2018": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15267,
        15279
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2025": {
      "op": "SHL"
    },
    "2026": {
      "op": "SUB"
    },
    "2027": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15267,
        15293
      ],
      "op": "AND",
      "path": "17"
    },
    "2028": {
      "branch": 127,
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15267,
        15293
      ],
      "op": "EQ",
      "path": "17"
    },
    "2029": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15263,
        15368
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x814"
    },
    "2032": {
      "branch": 127,
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15263,
        15368
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2033": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15316,
        15357
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2035": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15316,
        15357
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2036": {
      "op": "PUSH4",
      "value": "0x4AF4D69"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2043": {
      "op": "SHL"
    },
    "2044": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15316,
        15357
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2045": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15316,
        15357
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2052": {
      "op": "SHL"
    },
    "2053": {
      "op": "SUB"
    },
    "2054": {
      "op": "DUP3"
    },
    "2055": {
      "op": "AND"
    },
    "2056": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15316,
        15357
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2058": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15316,
        15357
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2059": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15316,
        15357
      ],
      "op": "ADD",
      "path": "17"
    },
    "2060": {
      "op": "MSTORE"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2063": {
      "op": "ADD"
    },
    "2064": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15316,
        15357
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "2067": {
      "op": "JUMP"
    },
    "2068": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15263,
        15368
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2075": {
      "op": "SHL"
    },
    "2076": {
      "op": "SUB"
    },
    "2077": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15410,
        15442
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2078": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15410,
        15442
      ],
      "op": "DUP5",
      "path": "17"
    },
    "2079": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15410,
        15442
      ],
      "op": "AND",
      "path": "17"
    },
    "2080": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15377,
        15407
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2082": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15410,
        15442
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2083": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15410,
        15442
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2084": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15410,
        15442
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2085": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15410,
        15424
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "2087": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15410,
        15442
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2089": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15410,
        15442
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2090": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15410,
        15442
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2092": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15410,
        15442
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2093": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15410,
        15442
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "2094": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15410,
        15442
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2095": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15410,
        15442
      ],
      "op": "AND",
      "path": "17"
    },
    "2096": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15410,
        15442
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2097": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15452,
        15557
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 13,
      "value": "0x858"
    },
    "2100": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15452,
        15557
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2101": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15515,
        15546
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2103": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15515,
        15546
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2104": {
      "op": "PUSH4",
      "value": "0xBFC6C337"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2111": {
      "op": "SHL"
    },
    "2112": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15515,
        15546
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2113": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15515,
        15546
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2120": {
      "op": "SHL"
    },
    "2121": {
      "op": "SUB"
    },
    "2122": {
      "op": "DUP6"
    },
    "2123": {
      "op": "AND"
    },
    "2124": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15515,
        15546
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2126": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15515,
        15546
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2127": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15515,
        15546
      ],
      "op": "ADD",
      "path": "17"
    },
    "2128": {
      "op": "MSTORE"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2131": {
      "op": "ADD"
    },
    "2132": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15515,
        15546
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "2135": {
      "op": "JUMP"
    },
    "2136": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15452,
        15557
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2137": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15566,
        15608
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 14,
      "value": "0x862"
    },
    "2140": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15579,
        15589
      ],
      "op": "DUP6",
      "path": "17"
    },
    "2141": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15591,
        15607
      ],
      "op": "DUP6",
      "path": "17"
    },
    "2142": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15566,
        15578
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1FBA"
    },
    "2145": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "jump": "i",
      "offset": [
        15566,
        15608
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2146": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        15566,
        15608
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2147": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        14999,
        15615
      ],
      "op": "POP",
      "path": "17"
    },
    "2148": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        14999,
        15615
      ],
      "op": "POP",
      "path": "17"
    },
    "2149": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        14890,
        15615
      ],
      "op": "POP",
      "path": "17"
    },
    "2150": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        14890,
        15615
      ],
      "op": "POP",
      "path": "17"
    },
    "2151": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "offset": [
        14890,
        15615
      ],
      "op": "POP",
      "path": "17"
    },
    "2152": {
      "fn": "OperatorFilterRegistry.copyEntriesOf",
      "jump": "o",
      "offset": [
        14890,
        15615
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2153": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2160": {
      "op": "SHL"
    },
    "2161": {
      "op": "SUB"
    },
    "2162": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20454,
        20480
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2163": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20454,
        20480
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2164": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20454,
        20480
      ],
      "op": "AND",
      "path": "17"
    },
    "2165": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20431,
        20451
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2167": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20454,
        20480
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2168": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20454,
        20480
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2169": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20454,
        20480
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2170": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20454,
        20468
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "2172": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20454,
        20480
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2174": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20454,
        20480
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2175": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20454,
        20480
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2177": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20454,
        20480
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2178": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20454,
        20480
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "2179": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20454,
        20480
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2180": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20403,
        20419
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "2182": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20403,
        20419
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2183": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20454,
        20480
      ],
      "op": "AND",
      "path": "17"
    },
    "2184": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20454,
        20480
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2185": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20494,
        20520
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2186": {
      "branch": 128,
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20494,
        20520
      ],
      "op": "EQ",
      "path": "17"
    },
    "2187": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20490,
        20596
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8B6"
    },
    "2190": {
      "branch": 128,
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20490,
        20596
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2197": {
      "op": "SHL"
    },
    "2198": {
      "op": "SUB"
    },
    "2199": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20543,
        20576
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 15
    },
    "2200": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20543,
        20576
      ],
      "op": "AND",
      "path": "17"
    },
    "2201": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20543,
        20576
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2203": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20543,
        20576
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2204": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20543,
        20576
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2205": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20543,
        20576
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2206": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20543,
        20562
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "2208": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20543,
        20576
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2210": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20543,
        20576
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2211": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20543,
        20576
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2213": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20543,
        20576
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2214": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20543,
        20576
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "2215": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20543,
        20585
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8AF"
    },
    "2218": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20543,
        20585
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2219": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20543,
        20583
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2113"
    },
    "2222": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "jump": "i",
      "offset": [
        20543,
        20585
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2223": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20543,
        20585
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2224": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20536,
        20585
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "2225": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20332,
        20659
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2226": {
      "op": "POP"
    },
    "2227": {
      "op": "POP"
    },
    "2228": {
      "op": "POP"
    },
    "2229": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "jump": "o",
      "offset": [
        20332,
        20659
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2230": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20490,
        20596
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2237": {
      "op": "SHL"
    },
    "2238": {
      "op": "SUB"
    },
    "2239": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20612,
        20643
      ],
      "op": "DUP4",
      "path": "17",
      "statement": 16
    },
    "2240": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20612,
        20643
      ],
      "op": "AND",
      "path": "17"
    },
    "2241": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20612,
        20643
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2243": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20612,
        20643
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2244": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20612,
        20643
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2245": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20612,
        20643
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2246": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20612,
        20631
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "2248": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20612,
        20643
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2250": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20612,
        20643
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2251": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20612,
        20643
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2253": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20612,
        20643
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2254": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20612,
        20643
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "2255": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20612,
        20652
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8AF"
    },
    "2258": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20612,
        20652
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2259": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "offset": [
        20612,
        20650
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2113"
    },
    "2262": {
      "fn": "OperatorFilterRegistry.filteredCodeHashes",
      "jump": "i",
      "offset": [
        20612,
        20652
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2263": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4243,
        4771
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2264": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4311,
        4321
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2265": {
      "offset": [
        1679,
        1689
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2272": {
      "op": "SHL"
    },
    "2273": {
      "op": "SUB"
    },
    "2274": {
      "offset": [
        1679,
        1697
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2275": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1679,
        1697
      ],
      "op": "AND",
      "path": "17"
    },
    "2276": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1679,
        1697
      ],
      "op": "EQ",
      "path": "17"
    },
    "2277": {
      "offset": [
        1675,
        2239
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x99B"
    },
    "2280": {
      "offset": [
        1675,
        2239
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2281": {
      "offset": [
        1725,
        1729
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2288": {
      "op": "SHL"
    },
    "2289": {
      "op": "SUB"
    },
    "2290": {
      "offset": [
        1717,
        1736
      ],
      "op": "AND",
      "path": "17"
    },
    "2291": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1736
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8DA5CB5B"
    },
    "2296": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2298": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2299": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2300": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "2305": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "2306": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "2308": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "SHL",
      "path": "17"
    },
    "2309": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2310": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2311": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2313": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "2314": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2316": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2318": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2319": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2320": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2321": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "SUB",
      "path": "17"
    },
    "2322": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2323": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2324": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "GAS",
      "path": "17"
    },
    "2325": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "2326": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2327": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "2328": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "2329": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "2330": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2331": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2332": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x942"
    },
    "2335": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2336": {
      "op": "POP"
    },
    "2337": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2339": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2340": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2341": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2343": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2344": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2345": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2346": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2349": {
      "op": "NOT"
    },
    "2350": {
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "2351": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2352": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "2353": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2354": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2355": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2356": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x93F"
    },
    "2359": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2360": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2361": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "2362": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2363": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x25F5"
    },
    "2366": {
      "fn": "OperatorFilterRegistry.unregister",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2367": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2368": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "2370": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2371": {
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x970"
    },
    "2374": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2375": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2376": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2377": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2378": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2379": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x43C"
    },
    "2382": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2383": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2385": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2386": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2387": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "POP",
      "path": "17"
    },
    "2388": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2390": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "NOT",
      "path": "17"
    },
    "2391": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3F"
    },
    "2393": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2394": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "2395": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "AND",
      "path": "17"
    },
    "2396": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2397": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "2398": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2400": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2401": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2402": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2403": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2404": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2405": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2407": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2409": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP5",
      "path": "17"
    },
    "2410": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "2411": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "2412": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x441"
    },
    "2415": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2416": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2417": {
      "offset": [
        1785,
        1795
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2424": {
      "op": "SHL"
    },
    "2425": {
      "op": "SUB"
    },
    "2426": {
      "offset": [
        1785,
        1804
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2427": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1785,
        1804
      ],
      "op": "AND",
      "path": "17"
    },
    "2428": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1785,
        1804
      ],
      "op": "EQ",
      "path": "17"
    },
    "2429": {
      "offset": [
        1781,
        1874
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x999"
    },
    "2432": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2433": {
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2435": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2436": {
      "op": "PUSH4",
      "value": "0x1F9EBDFF"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2443": {
      "op": "SHL"
    },
    "2444": {
      "offset": [
        1835,
        1855
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2445": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1835,
        1855
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2446": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2448": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1835,
        1855
      ],
      "op": "ADD",
      "path": "17"
    },
    "2449": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2451": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2452": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1835,
        1855
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2453": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2454": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1835,
        1855
      ],
      "op": "SUB",
      "path": "17"
    },
    "2455": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2456": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        1835,
        1855
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2457": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2458": {
      "offset": [
        1739,
        1888
      ],
      "op": "POP",
      "path": "17"
    },
    "2459": {
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2466": {
      "op": "SHL"
    },
    "2467": {
      "op": "SUB"
    },
    "2468": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4356,
        4382
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2469": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4356,
        4382
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2470": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4356,
        4382
      ],
      "op": "AND",
      "path": "17"
    },
    "2471": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4333,
        4353
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2473": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4356,
        4382
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2474": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4356,
        4382
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2475": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4356,
        4382
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2476": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4356,
        4370
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "2478": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4356,
        4382
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2480": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4356,
        4382
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2481": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4356,
        4382
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2483": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4356,
        4382
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2484": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4356,
        4382
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "2485": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4356,
        4382
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2486": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4356,
        4382
      ],
      "op": "AND",
      "path": "17"
    },
    "2487": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4356,
        4382
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2488": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4392,
        4481
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 17,
      "value": "0x9DF"
    },
    "2491": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4392,
        4481
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2492": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4445,
        4470
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2494": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4445,
        4470
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2495": {
      "op": "PUSH4",
      "value": "0xBFC6C337"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2502": {
      "op": "SHL"
    },
    "2503": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4445,
        4470
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2504": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4445,
        4470
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2511": {
      "op": "SHL"
    },
    "2512": {
      "op": "SUB"
    },
    "2513": {
      "op": "DUP5"
    },
    "2514": {
      "op": "AND"
    },
    "2515": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4445,
        4470
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2517": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4445,
        4470
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2518": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4445,
        4470
      ],
      "op": "ADD",
      "path": "17"
    },
    "2519": {
      "op": "MSTORE"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2522": {
      "op": "ADD"
    },
    "2523": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4445,
        4470
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "2526": {
      "op": "JUMP"
    },
    "2527": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4392,
        4481
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2528": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4510,
        4520
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2535": {
      "op": "SHL"
    },
    "2536": {
      "op": "SUB"
    },
    "2537": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4494,
        4520
      ],
      "op": "AND",
      "path": "17"
    },
    "2538": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4494,
        4506
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2545": {
      "op": "SHL"
    },
    "2546": {
      "op": "SUB"
    },
    "2547": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4494,
        4520
      ],
      "op": "AND",
      "path": "17"
    },
    "2548": {
      "branch": 129,
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4494,
        4520
      ],
      "op": "EQ",
      "path": "17"
    },
    "2549": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4490,
        4663
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA45"
    },
    "2552": {
      "branch": 129,
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4490,
        4663
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2559": {
      "op": "SHL"
    },
    "2560": {
      "op": "SUB"
    },
    "2561": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4536,
        4562
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 18
    },
    "2562": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4536,
        4562
      ],
      "op": "AND",
      "path": "17"
    },
    "2563": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4536,
        4562
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2565": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4536,
        4562
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2566": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4536,
        4562
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2567": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4536,
        4562
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2568": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4536,
        4548
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "2570": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4536,
        4562
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2572": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4536,
        4562
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2573": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4536,
        4562
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2575": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4536,
        4562
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2576": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4536,
        4562
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "2577": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4536,
        4581
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA1A"
    },
    "2580": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4536,
        4581
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2581": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4570,
        4580
      ],
      "op": "DUP5",
      "path": "17"
    },
    "2582": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4536,
        4569
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2120"
    },
    "2585": {
      "fn": "OperatorFilterRegistry.unregister",
      "jump": "i",
      "offset": [
        4536,
        4581
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2586": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4536,
        4581
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2587": {
      "op": "POP"
    },
    "2588": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4600,
        4652
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 19,
      "value": "0x40"
    },
    "2590": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4600,
        4652
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2591": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4646,
        4651
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2593": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4646,
        4651
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2600": {
      "op": "SHL"
    },
    "2601": {
      "op": "SUB"
    },
    "2602": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4600,
        4652
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2603": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4600,
        4652
      ],
      "op": "DUP5",
      "path": "17"
    },
    "2604": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4600,
        4652
      ],
      "op": "AND",
      "path": "17"
    },
    "2605": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4600,
        4652
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2606": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4600,
        4652
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2607": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4600,
        4652
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2608": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4600,
        4652
      ],
      "op": "AND",
      "path": "17"
    },
    "2609": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4600,
        4652
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2612": {
      "op": "DUP1"
    },
    "2613": {
      "op": "MLOAD"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2616": {
      "op": "PUSH2",
      "value": "0x2707"
    },
    "2619": {
      "op": "DUP4"
    },
    "2620": {
      "op": "CODECOPY"
    },
    "2621": {
      "op": "DUP2"
    },
    "2622": {
      "op": "MLOAD"
    },
    "2623": {
      "op": "SWAP2"
    },
    "2624": {
      "op": "MSTORE"
    },
    "2625": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4600,
        4652
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2626": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4646,
        4651
      ],
      "op": "DUP5",
      "path": "17"
    },
    "2627": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4646,
        4651
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2628": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4600,
        4652
      ],
      "op": "LOG4",
      "path": "17"
    },
    "2629": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4490,
        4663
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2636": {
      "op": "SHL"
    },
    "2637": {
      "op": "SUB"
    },
    "2638": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4672,
        4698
      ],
      "op": "DUP4",
      "path": "17",
      "statement": 20
    },
    "2639": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4672,
        4698
      ],
      "op": "AND",
      "path": "17"
    },
    "2640": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4709,
        4710
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2642": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4672,
        4698
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2643": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4672,
        4698
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2644": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4672,
        4698
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2645": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4672,
        4686
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "2647": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4672,
        4698
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2649": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4672,
        4698
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2650": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4672,
        4698
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2652": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4672,
        4698
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2653": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4672,
        4698
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2654": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4672,
        4698
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "2655": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4672,
        4711
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2656": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4672,
        4711
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2663": {
      "op": "SHL"
    },
    "2664": {
      "op": "SUB"
    },
    "2665": {
      "op": "NOT"
    },
    "2666": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4672,
        4711
      ],
      "op": "AND",
      "path": "17"
    },
    "2667": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4672,
        4711
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2668": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4672,
        4711
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "2669": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4726,
        4764
      ],
      "op": "MLOAD",
      "path": "17",
      "statement": 21
    },
    "2670": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4709,
        4710
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2671": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4709,
        4710
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2672": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4672,
        4698
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2675": {
      "op": "DUP1"
    },
    "2676": {
      "op": "MLOAD"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2679": {
      "op": "PUSH2",
      "value": "0x26E7"
    },
    "2682": {
      "op": "DUP4"
    },
    "2683": {
      "op": "CODECOPY"
    },
    "2684": {
      "op": "DUP2"
    },
    "2685": {
      "op": "MLOAD"
    },
    "2686": {
      "op": "SWAP2"
    },
    "2687": {
      "op": "MSTORE"
    },
    "2688": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4726,
        4764
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2689": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4709,
        4710
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2690": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4709,
        4710
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2691": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4726,
        4764
      ],
      "op": "LOG3",
      "path": "17"
    },
    "2692": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4323,
        4771
      ],
      "op": "POP",
      "path": "17"
    },
    "2693": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4243,
        4771
      ],
      "op": "POP",
      "path": "17"
    },
    "2694": {
      "fn": "OperatorFilterRegistry.unregister",
      "offset": [
        4243,
        4771
      ],
      "op": "POP",
      "path": "17"
    },
    "2695": {
      "fn": "OperatorFilterRegistry.unregister",
      "jump": "o",
      "offset": [
        4243,
        4771
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2696": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14144,
        14771
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2697": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14239,
        14249
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2698": {
      "offset": [
        1679,
        1689
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2705": {
      "op": "SHL"
    },
    "2706": {
      "op": "SUB"
    },
    "2707": {
      "offset": [
        1679,
        1697
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2708": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1679,
        1697
      ],
      "op": "AND",
      "path": "17"
    },
    "2709": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1679,
        1697
      ],
      "op": "EQ",
      "path": "17"
    },
    "2710": {
      "offset": [
        1675,
        2239
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB4C"
    },
    "2713": {
      "offset": [
        1675,
        2239
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2714": {
      "offset": [
        1725,
        1729
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2721": {
      "op": "SHL"
    },
    "2722": {
      "op": "SUB"
    },
    "2723": {
      "offset": [
        1717,
        1736
      ],
      "op": "AND",
      "path": "17"
    },
    "2724": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1736
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8DA5CB5B"
    },
    "2729": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2731": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2732": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2733": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "2738": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "2739": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "2741": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SHL",
      "path": "17"
    },
    "2742": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2743": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2744": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2746": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "2747": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2749": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2751": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2752": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2753": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2754": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SUB",
      "path": "17"
    },
    "2755": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2756": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2757": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "GAS",
      "path": "17"
    },
    "2758": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "2759": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2760": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "2761": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "2762": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "2763": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2764": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2765": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xAF3"
    },
    "2768": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2769": {
      "op": "POP"
    },
    "2770": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2772": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2773": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2774": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2776": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2777": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2778": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2779": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2782": {
      "op": "NOT"
    },
    "2783": {
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "2784": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2785": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "2786": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2787": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2788": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2789": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xAF0"
    },
    "2792": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2793": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2794": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "2795": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2796": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x25F5"
    },
    "2799": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2800": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2801": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "2803": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2804": {
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB21"
    },
    "2807": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2808": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2809": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2810": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2811": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2812": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x43C"
    },
    "2815": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2816": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2818": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2819": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2820": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "POP",
      "path": "17"
    },
    "2821": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2823": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "NOT",
      "path": "17"
    },
    "2824": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3F"
    },
    "2826": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2827": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "2828": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "AND",
      "path": "17"
    },
    "2829": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2830": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "2831": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2833": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2834": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2835": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2836": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2837": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2838": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2840": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2842": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP5",
      "path": "17"
    },
    "2843": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "2844": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "2845": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x441"
    },
    "2848": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2849": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2850": {
      "offset": [
        1785,
        1795
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2857": {
      "op": "SHL"
    },
    "2858": {
      "op": "SUB"
    },
    "2859": {
      "offset": [
        1785,
        1804
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2860": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1785,
        1804
      ],
      "op": "AND",
      "path": "17"
    },
    "2861": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1785,
        1804
      ],
      "op": "EQ",
      "path": "17"
    },
    "2862": {
      "offset": [
        1781,
        1874
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB4A"
    },
    "2865": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2866": {
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2868": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2869": {
      "op": "PUSH4",
      "value": "0x1F9EBDFF"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2876": {
      "op": "SHL"
    },
    "2877": {
      "offset": [
        1835,
        1855
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2878": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2879": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2881": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "ADD",
      "path": "17"
    },
    "2882": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2884": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2885": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2886": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2887": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "SUB",
      "path": "17"
    },
    "2888": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2889": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2890": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2891": {
      "offset": [
        1739,
        1888
      ],
      "op": "POP",
      "path": "17"
    },
    "2892": {
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2899": {
      "op": "SHL"
    },
    "2900": {
      "op": "SUB"
    },
    "2901": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14284,
        14310
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2902": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14284,
        14310
      ],
      "op": "DUP5",
      "path": "17"
    },
    "2903": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14284,
        14310
      ],
      "op": "AND",
      "path": "17"
    },
    "2904": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14261,
        14281
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2906": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14284,
        14310
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2907": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14284,
        14310
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2908": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14284,
        14310
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2909": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14284,
        14298
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "2911": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14284,
        14310
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2913": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14284,
        14310
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2914": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14284,
        14310
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2916": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14284,
        14310
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2917": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14284,
        14310
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "2918": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14284,
        14310
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2919": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14284,
        14310
      ],
      "op": "AND",
      "path": "17"
    },
    "2920": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14284,
        14310
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2921": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14320,
        14409
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 22,
      "value": "0xB90"
    },
    "2924": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14320,
        14409
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2925": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14373,
        14398
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2927": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14373,
        14398
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2928": {
      "op": "PUSH4",
      "value": "0xBFC6C337"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2935": {
      "op": "SHL"
    },
    "2936": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14373,
        14398
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2937": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14373,
        14398
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2944": {
      "op": "SHL"
    },
    "2945": {
      "op": "SUB"
    },
    "2946": {
      "op": "DUP6"
    },
    "2947": {
      "op": "AND"
    },
    "2948": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14373,
        14398
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2950": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14373,
        14398
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2951": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14373,
        14398
      ],
      "op": "ADD",
      "path": "17"
    },
    "2952": {
      "op": "MSTORE"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2955": {
      "op": "ADD"
    },
    "2956": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14373,
        14398
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "2959": {
      "op": "JUMP"
    },
    "2960": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14320,
        14409
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2961": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14438,
        14448
      ],
      "op": "DUP4",
      "path": "17",
      "statement": 23
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2968": {
      "op": "SHL"
    },
    "2969": {
      "op": "SUB"
    },
    "2970": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14422,
        14448
      ],
      "op": "AND",
      "path": "17"
    },
    "2971": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14422,
        14434
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2978": {
      "op": "SHL"
    },
    "2979": {
      "op": "SUB"
    },
    "2980": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14422,
        14448
      ],
      "op": "AND",
      "path": "17"
    },
    "2981": {
      "branch": 130,
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14422,
        14448
      ],
      "op": "SUB",
      "path": "17"
    },
    "2982": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14418,
        14497
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xBC2"
    },
    "2985": {
      "branch": 130,
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14418,
        14497
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2986": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14471,
        14486
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2988": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14471,
        14486
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2989": {
      "op": "PUSH4",
      "value": "0x46FCD85"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2996": {
      "op": "SHL"
    },
    "2997": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14471,
        14486
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2998": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14471,
        14486
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2999": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14471,
        14486
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "3001": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14471,
        14486
      ],
      "op": "ADD",
      "path": "17"
    },
    "3002": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14471,
        14486
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3004": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14471,
        14486
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3005": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14471,
        14486
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3006": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14471,
        14486
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3007": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14471,
        14486
      ],
      "op": "SUB",
      "path": "17"
    },
    "3008": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14471,
        14486
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3009": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14471,
        14486
      ],
      "op": "REVERT",
      "path": "17"
    },
    "3010": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14418,
        14497
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3017": {
      "op": "SHL"
    },
    "3018": {
      "op": "SUB"
    },
    "3019": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14506,
        14532
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 24
    },
    "3020": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14506,
        14532
      ],
      "op": "AND",
      "path": "17"
    },
    "3021": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14506,
        14532
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3023": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14506,
        14532
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3024": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14506,
        14532
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3025": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14506,
        14532
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3026": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14506,
        14518
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "3028": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14506,
        14532
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3030": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14506,
        14532
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3031": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14506,
        14532
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3033": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14506,
        14532
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3034": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14506,
        14532
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3035": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14506,
        14551
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xBE4"
    },
    "3038": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14506,
        14551
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3039": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14540,
        14550
      ],
      "op": "DUP6",
      "path": "17"
    },
    "3040": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14506,
        14539
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2120"
    },
    "3043": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "jump": "i",
      "offset": [
        14506,
        14551
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3044": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14506,
        14551
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3045": {
      "op": "POP"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3052": {
      "op": "SHL"
    },
    "3053": {
      "op": "SUB"
    },
    "3054": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14587
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 25
    },
    "3055": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14587
      ],
      "op": "DUP6",
      "path": "17"
    },
    "3056": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14587
      ],
      "op": "AND",
      "path": "17"
    },
    "3057": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14587
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3059": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14587
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3060": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14587
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3061": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14587
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3062": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14575
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "3064": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14587
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3066": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14587
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3067": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14587
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3069": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14587
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3070": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14587
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3071": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14587
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3072": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14600
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3073": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14600
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3080": {
      "op": "SHL"
    },
    "3081": {
      "op": "SUB"
    },
    "3082": {
      "op": "NOT"
    },
    "3083": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14600
      ],
      "op": "AND",
      "path": "17"
    },
    "3084": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14600
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3085": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14600
      ],
      "op": "OR",
      "path": "17"
    },
    "3086": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14600
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3087": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14600
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3088": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14615,
        14667
      ],
      "op": "MLOAD",
      "path": "17",
      "statement": 26
    },
    "3089": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14587
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3090": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14587
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3091": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14615,
        14667
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3092": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14615,
        14667
      ],
      "op": "AND",
      "path": "17"
    },
    "3093": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14615,
        14667
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3094": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14587
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3097": {
      "op": "DUP1"
    },
    "3098": {
      "op": "MLOAD"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3101": {
      "op": "PUSH2",
      "value": "0x2707"
    },
    "3104": {
      "op": "DUP4"
    },
    "3105": {
      "op": "CODECOPY"
    },
    "3106": {
      "op": "DUP2"
    },
    "3107": {
      "op": "MLOAD"
    },
    "3108": {
      "op": "SWAP2"
    },
    "3109": {
      "op": "MSTORE"
    },
    "3110": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14615,
        14667
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3111": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14587
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3112": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14561,
        14587
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3113": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14615,
        14667
      ],
      "op": "LOG4",
      "path": "17"
    },
    "3114": {
      "branch": 131,
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14681,
        14700
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3115": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14677,
        14765
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3116": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14677,
        14765
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC39"
    },
    "3119": {
      "branch": 131,
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14677,
        14765
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3120": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14716,
        14754
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 27,
      "value": "0xC39"
    },
    "3123": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14729,
        14739
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3124": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14741,
        14753
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3125": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14716,
        14728
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1FBA"
    },
    "3128": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "jump": "i",
      "offset": [
        14716,
        14754
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3129": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14716,
        14754
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3130": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14251,
        14771
      ],
      "op": "POP",
      "path": "17"
    },
    "3131": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14144,
        14771
      ],
      "op": "POP",
      "path": "17"
    },
    "3132": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14144,
        14771
      ],
      "op": "POP",
      "path": "17"
    },
    "3133": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "offset": [
        14144,
        14771
      ],
      "op": "POP",
      "path": "17"
    },
    "3134": {
      "fn": "OperatorFilterRegistry.unsubscribe",
      "jump": "o",
      "offset": [
        14144,
        14771
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3135": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17020,
        17353
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3142": {
      "op": "SHL"
    },
    "3143": {
      "op": "SUB"
    },
    "3144": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17134,
        17160
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 28
    },
    "3145": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17134,
        17160
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3146": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17134,
        17160
      ],
      "op": "AND",
      "path": "17"
    },
    "3147": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17087,
        17107
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3149": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17134,
        17160
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3150": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17134,
        17160
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3151": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17134,
        17160
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3152": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17134,
        17148
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "3154": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17134,
        17160
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3156": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17134,
        17160
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3157": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17134,
        17160
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3159": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17134,
        17160
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3160": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17134,
        17160
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3161": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17134,
        17160
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3162": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17134,
        17160
      ],
      "op": "AND",
      "path": "17"
    },
    "3163": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17134,
        17160
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3164": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17170,
        17347
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC83"
    },
    "3167": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17170,
        17347
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3168": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17223,
        17248
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3170": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17223,
        17248
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3171": {
      "op": "PUSH4",
      "value": "0xBFC6C337"
    },
    "3176": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3178": {
      "op": "SHL"
    },
    "3179": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17223,
        17248
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3180": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17223,
        17248
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3185": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3187": {
      "op": "SHL"
    },
    "3188": {
      "op": "SUB"
    },
    "3189": {
      "op": "DUP4"
    },
    "3190": {
      "op": "AND"
    },
    "3191": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17223,
        17248
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "3193": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17223,
        17248
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3194": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17223,
        17248
      ],
      "op": "ADD",
      "path": "17"
    },
    "3195": {
      "op": "MSTORE"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3198": {
      "op": "ADD"
    },
    "3199": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17223,
        17248
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "3202": {
      "op": "JUMP"
    },
    "3203": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17170,
        17347
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3204": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17285,
        17295
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3211": {
      "op": "SHL"
    },
    "3212": {
      "op": "SUB"
    },
    "3213": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17269,
        17295
      ],
      "op": "AND",
      "path": "17"
    },
    "3214": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17269,
        17281
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3221": {
      "op": "SHL"
    },
    "3222": {
      "op": "SUB"
    },
    "3223": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17269,
        17295
      ],
      "op": "AND",
      "path": "17"
    },
    "3224": {
      "branch": 132,
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17269,
        17295
      ],
      "op": "SUB",
      "path": "17"
    },
    "3225": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17265,
        17347
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCA0"
    },
    "3228": {
      "branch": 132,
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17265,
        17347
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3229": {
      "op": "POP"
    },
    "3230": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17334,
        17335
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 29,
      "value": "0x0"
    },
    "3232": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17265,
        17347
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3233": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17020,
        17353
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3234": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17020,
        17353
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3235": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "offset": [
        17020,
        17353
      ],
      "op": "POP",
      "path": "17"
    },
    "3236": {
      "fn": "OperatorFilterRegistry.subscriptionOf",
      "jump": "o",
      "offset": [
        17020,
        17353
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3237": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        20904,
        21237
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3244": {
      "op": "SHL"
    },
    "3245": {
      "op": "SUB"
    },
    "3246": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21032,
        21058
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3247": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21032,
        21058
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3248": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21032,
        21058
      ],
      "op": "AND",
      "path": "17"
    },
    "3249": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        20990,
        20997
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3251": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21032,
        21058
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3252": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21032,
        21058
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3253": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21032,
        21058
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3254": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21032,
        21046
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "3256": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21032,
        21058
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3258": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21032,
        21058
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3259": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21032,
        21058
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3261": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21032,
        21058
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3262": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21032,
        21058
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3263": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21032,
        21058
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3264": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        20990,
        20997
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3265": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        20990,
        20997
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3266": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21032,
        21058
      ],
      "op": "AND",
      "path": "17"
    },
    "3267": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21032,
        21058
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3268": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21072,
        21098
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3269": {
      "branch": 133,
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21072,
        21098
      ],
      "op": "EQ",
      "path": "17"
    },
    "3270": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21068,
        21174
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCF3"
    },
    "3273": {
      "branch": 133,
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21068,
        21174
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3280": {
      "op": "SHL"
    },
    "3281": {
      "op": "SUB"
    },
    "3282": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21121,
        21153
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 30
    },
    "3283": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21121,
        21153
      ],
      "op": "AND",
      "path": "17"
    },
    "3284": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21121,
        21139
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3286": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21121,
        21153
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3287": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21121,
        21153
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3288": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21121,
        21153
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3289": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21121,
        21153
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3291": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21121,
        21153
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3292": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21121,
        21153
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3293": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21121,
        21153
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3294": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21121,
        21153
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3296": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21121,
        21153
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3297": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21121,
        21153
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3298": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21121,
        21163
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCEB"
    },
    "3301": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21121,
        21163
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3302": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21157,
        21162
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3303": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21121,
        21156
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2135"
    },
    "3306": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "jump": "i",
      "offset": [
        21121,
        21163
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3307": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21121,
        21163
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3308": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21114,
        21163
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3309": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21114,
        21163
      ],
      "op": "POP",
      "path": "17"
    },
    "3310": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21114,
        21163
      ],
      "op": "POP",
      "path": "17"
    },
    "3311": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21114,
        21163
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD19"
    },
    "3314": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21114,
        21163
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3315": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21068,
        21174
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3322": {
      "op": "SHL"
    },
    "3323": {
      "op": "SUB"
    },
    "3324": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21190,
        21220
      ],
      "op": "DUP5",
      "path": "17",
      "statement": 31
    },
    "3325": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21190,
        21220
      ],
      "op": "AND",
      "path": "17"
    },
    "3326": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21190,
        21208
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3328": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21190,
        21220
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3329": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21190,
        21220
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3330": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21190,
        21220
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3331": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21190,
        21220
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3333": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21190,
        21220
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3334": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21190,
        21220
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3335": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21190,
        21220
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3336": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21190,
        21220
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3338": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21190,
        21220
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3339": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21190,
        21220
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3340": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21190,
        21230
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD15"
    },
    "3343": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21190,
        21230
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3344": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21224,
        21229
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3345": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21190,
        21223
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2135"
    },
    "3348": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "jump": "i",
      "offset": [
        21190,
        21230
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3349": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21190,
        21230
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3350": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21183,
        21230
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3351": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21183,
        21230
      ],
      "op": "POP",
      "path": "17"
    },
    "3352": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        21183,
        21230
      ],
      "op": "POP",
      "path": "17"
    },
    "3353": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        20904,
        21237
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3354": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        20904,
        21237
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3355": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        20904,
        21237
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3356": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        20904,
        21237
      ],
      "op": "POP",
      "path": "17"
    },
    "3357": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "offset": [
        20904,
        21237
      ],
      "op": "POP",
      "path": "17"
    },
    "3358": {
      "fn": "OperatorFilterRegistry.filteredOperatorAt",
      "jump": "o",
      "offset": [
        20904,
        21237
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3359": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3559,
        3851
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3360": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3625,
        3635
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3361": {
      "offset": [
        1679,
        1689
      ],
      "op": "CALLER",
      "path": "17"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3368": {
      "op": "SHL"
    },
    "3369": {
      "op": "SUB"
    },
    "3370": {
      "offset": [
        1679,
        1697
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3371": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1679,
        1697
      ],
      "op": "AND",
      "path": "17"
    },
    "3372": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1679,
        1697
      ],
      "op": "EQ",
      "path": "17"
    },
    "3373": {
      "offset": [
        1675,
        2239
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xDE3"
    },
    "3376": {
      "offset": [
        1675,
        2239
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3377": {
      "offset": [
        1725,
        1729
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3384": {
      "op": "SHL"
    },
    "3385": {
      "op": "SUB"
    },
    "3386": {
      "offset": [
        1717,
        1736
      ],
      "op": "AND",
      "path": "17"
    },
    "3387": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1736
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8DA5CB5B"
    },
    "3392": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3394": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3395": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3396": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "3401": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "3402": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "3404": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "SHL",
      "path": "17"
    },
    "3405": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3406": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3407": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "3409": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "3410": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3412": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3414": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3415": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3416": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3417": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "SUB",
      "path": "17"
    },
    "3418": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3419": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP7",
      "path": "17"
    },
    "3420": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "GAS",
      "path": "17"
    },
    "3421": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "3422": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3423": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "3424": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "3425": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "3426": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3427": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3428": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD8A"
    },
    "3431": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3432": {
      "op": "POP"
    },
    "3433": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3435": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3436": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3437": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "3439": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "3440": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3441": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3442": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "3443": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3445": {
      "op": "NOT"
    },
    "3446": {
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "3447": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3448": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "3449": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3450": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3451": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3452": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD87"
    },
    "3455": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3456": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3457": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "3458": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3459": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x25F5"
    },
    "3462": {
      "fn": "OperatorFilterRegistry.register",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3463": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3464": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "3466": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3467": {
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xDB8"
    },
    "3470": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3471": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "3472": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3473": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3474": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3475": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x43C"
    },
    "3478": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3479": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3481": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3482": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3483": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "POP",
      "path": "17"
    },
    "3484": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "3486": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "NOT",
      "path": "17"
    },
    "3487": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3F"
    },
    "3489": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "3490": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "3491": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "AND",
      "path": "17"
    },
    "3492": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3493": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "3494": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3496": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3497": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "3498": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3499": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3500": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "3501": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3503": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3505": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3506": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "3507": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "3508": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x441"
    },
    "3511": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3512": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3513": {
      "offset": [
        1785,
        1795
      ],
      "op": "CALLER",
      "path": "17"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3520": {
      "op": "SHL"
    },
    "3521": {
      "op": "SUB"
    },
    "3522": {
      "offset": [
        1785,
        1804
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3523": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1785,
        1804
      ],
      "op": "AND",
      "path": "17"
    },
    "3524": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1785,
        1804
      ],
      "op": "EQ",
      "path": "17"
    },
    "3525": {
      "offset": [
        1781,
        1874
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xDE1"
    },
    "3528": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3529": {
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3531": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3532": {
      "op": "PUSH4",
      "value": "0x1F9EBDFF"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3539": {
      "op": "SHL"
    },
    "3540": {
      "offset": [
        1835,
        1855
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3541": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1835,
        1855
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3542": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "3544": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1835,
        1855
      ],
      "op": "ADD",
      "path": "17"
    },
    "3545": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3547": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3548": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1835,
        1855
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3549": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3550": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1835,
        1855
      ],
      "op": "SUB",
      "path": "17"
    },
    "3551": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3552": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        1835,
        1855
      ],
      "op": "REVERT",
      "path": "17"
    },
    "3553": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3554": {
      "offset": [
        1739,
        1888
      ],
      "op": "POP",
      "path": "17"
    },
    "3555": {
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3562": {
      "op": "SHL"
    },
    "3563": {
      "op": "SUB"
    },
    "3564": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3651,
        3677
      ],
      "op": "DUP3",
      "path": "17",
      "statement": 32
    },
    "3565": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3651,
        3677
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3566": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3651,
        3677
      ],
      "op": "AND",
      "path": "17"
    },
    "3567": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3689,
        3690
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3569": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3651,
        3677
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3570": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3651,
        3677
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3571": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3651,
        3677
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3572": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3651,
        3665
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "3574": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3651,
        3677
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3576": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3651,
        3677
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3577": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3651,
        3677
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3579": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3651,
        3677
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3580": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3651,
        3677
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3581": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3651,
        3677
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3582": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3651,
        3677
      ],
      "op": "AND",
      "path": "17"
    },
    "3583": {
      "branch": 134,
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3651,
        3691
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3584": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3647,
        3744
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE1C"
    },
    "3587": {
      "branch": 134,
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3647,
        3744
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3588": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3714,
        3733
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3590": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3714,
        3733
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3591": {
      "op": "PUSH4",
      "value": "0xEA075BF"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3598": {
      "op": "SHL"
    },
    "3599": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3714,
        3733
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3600": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3714,
        3733
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3601": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3714,
        3733
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "3603": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3714,
        3733
      ],
      "op": "ADD",
      "path": "17"
    },
    "3604": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3714,
        3733
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3606": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3714,
        3733
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3607": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3714,
        3733
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3608": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3714,
        3733
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3609": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3714,
        3733
      ],
      "op": "SUB",
      "path": "17"
    },
    "3610": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3714,
        3733
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3611": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3714,
        3733
      ],
      "op": "REVERT",
      "path": "17"
    },
    "3612": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3647,
        3744
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3619": {
      "op": "SHL"
    },
    "3620": {
      "op": "SUB"
    },
    "3621": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3779
      ],
      "op": "DUP3",
      "path": "17",
      "statement": 33
    },
    "3622": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3779
      ],
      "op": "AND",
      "path": "17"
    },
    "3623": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3779
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3625": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3779
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3626": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3779
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3627": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3779
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3628": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3767
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "3630": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3779
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3632": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3779
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3633": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3779
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3635": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3779
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3636": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3779
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3637": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3779
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3638": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3792
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3639": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3792
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3646": {
      "op": "SHL"
    },
    "3647": {
      "op": "SUB"
    },
    "3648": {
      "op": "NOT"
    },
    "3649": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3792
      ],
      "op": "AND",
      "path": "17"
    },
    "3650": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3792
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3651": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3792
      ],
      "op": "OR",
      "path": "17"
    },
    "3652": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3792
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3653": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3792
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3654": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3807,
        3844
      ],
      "op": "MLOAD",
      "path": "17",
      "statement": 34
    },
    "3655": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3792
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "3657": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3792
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3658": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3753,
        3779
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3661": {
      "op": "DUP1"
    },
    "3662": {
      "op": "MLOAD"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3665": {
      "op": "PUSH2",
      "value": "0x26E7"
    },
    "3668": {
      "op": "DUP4"
    },
    "3669": {
      "op": "CODECOPY"
    },
    "3670": {
      "op": "DUP2"
    },
    "3671": {
      "op": "MLOAD"
    },
    "3672": {
      "op": "SWAP2"
    },
    "3673": {
      "op": "MSTORE"
    },
    "3674": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3807,
        3844
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3675": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3807,
        3844
      ],
      "op": "LOG3",
      "path": "17"
    },
    "3676": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3559,
        3851
      ],
      "op": "POP",
      "path": "17"
    },
    "3677": {
      "fn": "OperatorFilterRegistry.register",
      "offset": [
        3559,
        3851
      ],
      "op": "POP",
      "path": "17"
    },
    "3678": {
      "fn": "OperatorFilterRegistry.register",
      "jump": "o",
      "offset": [
        3559,
        3851
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3679": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17859,
        18006
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3686": {
      "op": "SHL"
    },
    "3687": {
      "op": "SUB"
    },
    "3688": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17965,
        17989
      ],
      "op": "DUP3",
      "path": "17",
      "statement": 35
    },
    "3689": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17965,
        17989
      ],
      "op": "AND",
      "path": "17"
    },
    "3690": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17939,
        17946
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3692": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17965,
        17989
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3693": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17965,
        17989
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3694": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17965,
        17989
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3695": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17965,
        17977
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "3697": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17965,
        17989
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3699": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17965,
        17989
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3700": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17965,
        17989
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3702": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17965,
        17989
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3703": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17965,
        17989
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3704": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17965,
        17999
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8AF"
    },
    "3707": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17965,
        17999
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3708": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17993,
        17998
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3709": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "offset": [
        17965,
        17992
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2135"
    },
    "3712": {
      "fn": "OperatorFilterRegistry.subscriberAt",
      "jump": "i",
      "offset": [
        17965,
        17999
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3713": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17519,
        17658
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3720": {
      "op": "SHL"
    },
    "3721": {
      "op": "SUB"
    },
    "3722": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17618,
        17642
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 36
    },
    "3723": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17618,
        17642
      ],
      "op": "AND",
      "path": "17"
    },
    "3724": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17618,
        17642
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3726": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17618,
        17642
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3727": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17618,
        17642
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3728": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17618,
        17642
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3729": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17618,
        17630
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "3731": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17618,
        17642
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3733": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17618,
        17642
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3734": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17618,
        17642
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3736": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17618,
        17642
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3737": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17618,
        17642
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3738": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17583,
        17599
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "3740": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17583,
        17599
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3741": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17618,
        17651
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD19"
    },
    "3744": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17618,
        17651
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3745": {
      "fn": "OperatorFilterRegistry.subscribers",
      "offset": [
        17618,
        17649
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2113"
    },
    "3748": {
      "fn": "OperatorFilterRegistry.subscribers",
      "jump": "i",
      "offset": [
        17618,
        17651
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3749": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19075,
        19492
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3756": {
      "op": "SHL"
    },
    "3757": {
      "op": "SUB"
    },
    "3758": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19267,
        19293
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3759": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19267,
        19293
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3760": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19267,
        19293
      ],
      "op": "AND",
      "path": "17"
    },
    "3761": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19174,
        19178
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3763": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19267,
        19293
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3764": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19267,
        19293
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3765": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19267,
        19293
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3766": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19267,
        19281
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "3768": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19267,
        19293
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3770": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19267,
        19293
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3771": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19267,
        19293
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3773": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19267,
        19293
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3774": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19267,
        19293
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3775": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19267,
        19293
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3776": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19174,
        19178
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3777": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19174,
        19178
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3778": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19209,
        19234
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3779": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19209,
        19234
      ],
      "op": "DUP6",
      "path": "17"
    },
    "3780": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19209,
        19234
      ],
      "op": "AND",
      "path": "17"
    },
    "3781": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19209,
        19234
      ],
      "op": "EXTCODEHASH",
      "path": "17"
    },
    "3782": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19209,
        19234
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3783": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19267,
        19293
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3784": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19267,
        19293
      ],
      "op": "AND",
      "path": "17"
    },
    "3785": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19267,
        19293
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3786": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19307,
        19333
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3787": {
      "branch": 135,
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19307,
        19333
      ],
      "op": "EQ",
      "path": "17"
    },
    "3788": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19303,
        19419
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xEFA"
    },
    "3791": {
      "branch": 135,
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19303,
        19419
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3798": {
      "op": "SHL"
    },
    "3799": {
      "op": "SUB"
    },
    "3800": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19356,
        19389
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 37
    },
    "3801": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19356,
        19389
      ],
      "op": "AND",
      "path": "17"
    },
    "3802": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19356,
        19389
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3804": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19356,
        19389
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3805": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19356,
        19389
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3806": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19356,
        19389
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3807": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19356,
        19375
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "3809": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19356,
        19389
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3811": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19356,
        19389
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3812": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19356,
        19389
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3814": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19356,
        19389
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3815": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19356,
        19389
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3816": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19356,
        19408
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xEF1"
    },
    "3819": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19356,
        19408
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3820": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19399,
        19407
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3821": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19356,
        19398
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2141"
    },
    "3824": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "jump": "i",
      "offset": [
        19356,
        19408
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3825": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19356,
        19408
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3826": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19349,
        19408
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3827": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19349,
        19408
      ],
      "op": "POP",
      "path": "17"
    },
    "3828": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19349,
        19408
      ],
      "op": "POP",
      "path": "17"
    },
    "3829": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19349,
        19408
      ],
      "op": "POP",
      "path": "17"
    },
    "3830": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19349,
        19408
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD19"
    },
    "3833": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19349,
        19408
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3834": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19303,
        19419
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3841": {
      "op": "SHL"
    },
    "3842": {
      "op": "SUB"
    },
    "3843": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19435,
        19466
      ],
      "op": "DUP6",
      "path": "17",
      "statement": 38
    },
    "3844": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19435,
        19466
      ],
      "op": "AND",
      "path": "17"
    },
    "3845": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19435,
        19466
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3847": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19435,
        19466
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3848": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19435,
        19466
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3849": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19435,
        19466
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3850": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19435,
        19454
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "3852": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19435,
        19466
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3854": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19435,
        19466
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3855": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19435,
        19466
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3857": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19435,
        19466
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3858": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19435,
        19466
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3859": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19435,
        19485
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF1C"
    },
    "3862": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19435,
        19485
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3863": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19476,
        19484
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3864": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19435,
        19475
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2141"
    },
    "3867": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "jump": "i",
      "offset": [
        19435,
        19485
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3868": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19435,
        19485
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3869": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19428,
        19485
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "3870": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "offset": [
        19075,
        19492
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "3871": {
      "op": "POP"
    },
    "3872": {
      "op": "POP"
    },
    "3873": {
      "op": "POP"
    },
    "3874": {
      "op": "POP"
    },
    "3875": {
      "op": "POP"
    },
    "3876": {
      "fn": "OperatorFilterRegistry.isCodeHashOfFiltered",
      "jump": "o",
      "offset": [
        19075,
        19492
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3877": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18587,
        18940
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3884": {
      "op": "SHL"
    },
    "3885": {
      "op": "SUB"
    },
    "3886": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18715,
        18741
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3887": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18715,
        18741
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3888": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18715,
        18741
      ],
      "op": "AND",
      "path": "17"
    },
    "3889": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18676,
        18680
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3891": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18715,
        18741
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3892": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18715,
        18741
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3893": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18715,
        18741
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3894": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18715,
        18729
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "3896": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18715,
        18741
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3898": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18715,
        18741
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3899": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18715,
        18741
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3901": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18715,
        18741
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3902": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18715,
        18741
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3903": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18715,
        18741
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3904": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18676,
        18680
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3905": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18676,
        18680
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3906": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18715,
        18741
      ],
      "op": "AND",
      "path": "17"
    },
    "3907": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18715,
        18741
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3908": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18755,
        18781
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3909": {
      "branch": 136,
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18755,
        18781
      ],
      "op": "EQ",
      "path": "17"
    },
    "3910": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18751,
        18867
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF6B"
    },
    "3913": {
      "branch": 136,
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18751,
        18867
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3918": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3920": {
      "op": "SHL"
    },
    "3921": {
      "op": "SUB"
    },
    "3922": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18804,
        18837
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 39
    },
    "3923": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18804,
        18837
      ],
      "op": "AND",
      "path": "17"
    },
    "3924": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18804,
        18837
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3926": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18804,
        18837
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3927": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18804,
        18837
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3928": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18804,
        18837
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3929": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18804,
        18823
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "3931": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18804,
        18837
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3933": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18804,
        18837
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3934": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18804,
        18837
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3936": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18804,
        18837
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3937": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18804,
        18837
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3938": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18804,
        18856
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCEB"
    },
    "3941": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18804,
        18856
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3942": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18847,
        18855
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3943": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18804,
        18846
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2141"
    },
    "3946": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "jump": "i",
      "offset": [
        18804,
        18856
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3947": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18751,
        18867
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3954": {
      "op": "SHL"
    },
    "3955": {
      "op": "SUB"
    },
    "3956": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18883,
        18914
      ],
      "op": "DUP5",
      "path": "17",
      "statement": 40
    },
    "3957": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18883,
        18914
      ],
      "op": "AND",
      "path": "17"
    },
    "3958": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18883,
        18914
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3960": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18883,
        18914
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3961": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18883,
        18914
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3962": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18883,
        18914
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3963": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18883,
        18902
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "3965": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18883,
        18914
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3967": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18883,
        18914
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3968": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18883,
        18914
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3970": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18883,
        18914
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3971": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18883,
        18914
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3972": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18883,
        18933
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD15"
    },
    "3975": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18883,
        18933
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3976": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18924,
        18932
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3977": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "offset": [
        18883,
        18923
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2141"
    },
    "3980": {
      "fn": "OperatorFilterRegistry.isCodeHashFiltered",
      "jump": "i",
      "offset": [
        18883,
        18933
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3981": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        7970,
        9010
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3982": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8091,
        8101
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3983": {
      "offset": [
        1679,
        1689
      ],
      "op": "CALLER",
      "path": "17"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3990": {
      "op": "SHL"
    },
    "3991": {
      "op": "SUB"
    },
    "3992": {
      "offset": [
        1679,
        1697
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3993": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1679,
        1697
      ],
      "op": "AND",
      "path": "17"
    },
    "3994": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1679,
        1697
      ],
      "op": "EQ",
      "path": "17"
    },
    "3995": {
      "offset": [
        1675,
        2239
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1051"
    },
    "3998": {
      "offset": [
        1675,
        2239
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3999": {
      "offset": [
        1725,
        1729
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4006": {
      "op": "SHL"
    },
    "4007": {
      "op": "SUB"
    },
    "4008": {
      "offset": [
        1717,
        1736
      ],
      "op": "AND",
      "path": "17"
    },
    "4009": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1736
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8DA5CB5B"
    },
    "4014": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4016": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4017": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4018": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "4023": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "4024": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "4026": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "SHL",
      "path": "17"
    },
    "4027": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4028": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4029": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4031": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "4032": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4034": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4036": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4037": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4038": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4039": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "SUB",
      "path": "17"
    },
    "4040": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4041": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP7",
      "path": "17"
    },
    "4042": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "GAS",
      "path": "17"
    },
    "4043": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "4044": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "4045": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "4046": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "4047": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "4048": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4049": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4050": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFF8"
    },
    "4053": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4054": {
      "op": "POP"
    },
    "4055": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4057": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4058": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4059": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "4061": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4062": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4063": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4064": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "4065": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4067": {
      "op": "NOT"
    },
    "4068": {
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "4069": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4070": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "4071": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4072": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "4073": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4074": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFF5"
    },
    "4077": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4078": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4079": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "4080": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4081": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x25F5"
    },
    "4084": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4085": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4086": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "4088": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4089": {
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1026"
    },
    "4092": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4093": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4094": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4095": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4096": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4097": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x43C"
    },
    "4100": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4101": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4103": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4104": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4105": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "POP",
      "path": "17"
    },
    "4106": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "4108": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "NOT",
      "path": "17"
    },
    "4109": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3F"
    },
    "4111": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4112": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "4113": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "AND",
      "path": "17"
    },
    "4114": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4115": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "4116": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4118": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4119": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4120": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4121": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4122": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4123": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4125": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4127": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP5",
      "path": "17"
    },
    "4128": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "4129": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "4130": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x441"
    },
    "4133": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4134": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4135": {
      "offset": [
        1785,
        1795
      ],
      "op": "CALLER",
      "path": "17"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4142": {
      "op": "SHL"
    },
    "4143": {
      "op": "SUB"
    },
    "4144": {
      "offset": [
        1785,
        1804
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4145": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1785,
        1804
      ],
      "op": "AND",
      "path": "17"
    },
    "4146": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1785,
        1804
      ],
      "op": "EQ",
      "path": "17"
    },
    "4147": {
      "offset": [
        1781,
        1874
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x104F"
    },
    "4150": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4151": {
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4153": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4154": {
      "op": "PUSH4",
      "value": "0x1F9EBDFF"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "4161": {
      "op": "SHL"
    },
    "4162": {
      "offset": [
        1835,
        1855
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4163": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1835,
        1855
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4164": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4166": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1835,
        1855
      ],
      "op": "ADD",
      "path": "17"
    },
    "4167": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4169": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4170": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1835,
        1855
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4171": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4172": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1835,
        1855
      ],
      "op": "SUB",
      "path": "17"
    },
    "4173": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4174": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        1835,
        1855
      ],
      "op": "REVERT",
      "path": "17"
    },
    "4175": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4176": {
      "offset": [
        1739,
        1888
      ],
      "op": "POP",
      "path": "17"
    },
    "4177": {
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4178": {
      "offset": [
        1229,
        1242
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
    },
    "4211": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8121,
        8129
      ],
      "op": "DUP4",
      "path": "17",
      "statement": 41
    },
    "4212": {
      "branch": 137,
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8121,
        8145
      ],
      "op": "SUB",
      "path": "17"
    },
    "4213": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8117,
        8197
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1091"
    },
    "4216": {
      "branch": 137,
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8117,
        8197
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4217": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8168,
        8186
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4219": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8168,
        8186
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4220": {
      "op": "PUSH4",
      "value": "0x1EAEBD5B"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "4227": {
      "op": "SHL"
    },
    "4228": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8168,
        8186
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4229": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8168,
        8186
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4230": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8168,
        8186
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4232": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8168,
        8186
      ],
      "op": "ADD",
      "path": "17"
    },
    "4233": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8168,
        8186
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4235": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8168,
        8186
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4236": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8168,
        8186
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4237": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8168,
        8186
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4238": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8168,
        8186
      ],
      "op": "SUB",
      "path": "17"
    },
    "4239": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8168,
        8186
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4240": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8168,
        8186
      ],
      "op": "REVERT",
      "path": "17"
    },
    "4241": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8117,
        8197
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4248": {
      "op": "SHL"
    },
    "4249": {
      "op": "SUB"
    },
    "4250": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8229,
        8255
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4251": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8229,
        8255
      ],
      "op": "DUP6",
      "path": "17"
    },
    "4252": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8229,
        8255
      ],
      "op": "AND",
      "path": "17"
    },
    "4253": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8206,
        8226
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4255": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8229,
        8255
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4256": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8229,
        8255
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4257": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8229,
        8255
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4258": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8229,
        8243
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "4260": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8229,
        8255
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4262": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8229,
        8255
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4263": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8229,
        8255
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4265": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8229,
        8255
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4266": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8229,
        8255
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4267": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8229,
        8255
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4268": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8229,
        8255
      ],
      "op": "AND",
      "path": "17"
    },
    "4269": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8229,
        8255
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4270": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8265,
        8354
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 42,
      "value": "0x10D5"
    },
    "4273": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8265,
        8354
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4274": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8318,
        8343
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4276": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8318,
        8343
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4277": {
      "op": "PUSH4",
      "value": "0xBFC6C337"
    },
    "4282": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4284": {
      "op": "SHL"
    },
    "4285": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8318,
        8343
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4286": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8318,
        8343
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4293": {
      "op": "SHL"
    },
    "4294": {
      "op": "SUB"
    },
    "4295": {
      "op": "DUP7"
    },
    "4296": {
      "op": "AND"
    },
    "4297": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8318,
        8343
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4299": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8318,
        8343
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4300": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8318,
        8343
      ],
      "op": "ADD",
      "path": "17"
    },
    "4301": {
      "op": "MSTORE"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4304": {
      "op": "ADD"
    },
    "4305": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8318,
        8343
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "4308": {
      "op": "JUMP"
    },
    "4309": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8265,
        8354
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4310": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8383,
        8393
      ],
      "op": "DUP5",
      "path": "17",
      "statement": 43
    },
    "4311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4317": {
      "op": "SHL"
    },
    "4318": {
      "op": "SUB"
    },
    "4319": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8367,
        8393
      ],
      "op": "AND",
      "path": "17"
    },
    "4320": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8367,
        8379
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4327": {
      "op": "SHL"
    },
    "4328": {
      "op": "SUB"
    },
    "4329": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8367,
        8393
      ],
      "op": "AND",
      "path": "17"
    },
    "4330": {
      "branch": 138,
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8367,
        8393
      ],
      "op": "EQ",
      "path": "17"
    },
    "4331": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8363,
        8468
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1112"
    },
    "4334": {
      "branch": 138,
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8363,
        8468
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4335": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8416,
        8457
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4337": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8416,
        8457
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4338": {
      "op": "PUSH4",
      "value": "0x4AF4D69"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4345": {
      "op": "SHL"
    },
    "4346": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8416,
        8457
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4347": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8416,
        8457
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4354": {
      "op": "SHL"
    },
    "4355": {
      "op": "SUB"
    },
    "4356": {
      "op": "DUP3"
    },
    "4357": {
      "op": "AND"
    },
    "4358": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8416,
        8457
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4360": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8416,
        8457
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4361": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8416,
        8457
      ],
      "op": "ADD",
      "path": "17"
    },
    "4362": {
      "op": "MSTORE"
    },
    "4363": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4365": {
      "op": "ADD"
    },
    "4366": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8416,
        8457
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "4369": {
      "op": "JUMP"
    },
    "4370": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8363,
        8468
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4377": {
      "op": "SHL"
    },
    "4378": {
      "op": "SUB"
    },
    "4379": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8534,
        8565
      ],
      "op": "DUP6",
      "path": "17"
    },
    "4380": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8534,
        8565
      ],
      "op": "AND",
      "path": "17"
    },
    "4381": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8477,
        8531
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4383": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8534,
        8565
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4384": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8534,
        8565
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4385": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8534,
        8565
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4386": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8534,
        8553
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "4388": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8534,
        8565
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4390": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8534,
        8565
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4391": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8534,
        8565
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4393": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8534,
        8565
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4394": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8534,
        8565
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4395": {
      "branch": 139,
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8581,
        8589
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4396": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8576,
        8942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1164"
    },
    "4399": {
      "branch": 139,
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8576,
        8942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4400": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8605,
        8617
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4402": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8620,
        8658
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x113B"
    },
    "4405": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8620,
        8641
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4406": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8649,
        8657
      ],
      "op": "DUP8",
      "path": "17"
    },
    "4407": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8620,
        8648
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1FA2"
    },
    "4410": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "jump": "i",
      "offset": [
        8620,
        8658
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4411": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8620,
        8658
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4412": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8605,
        8658
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4413": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8605,
        8658
      ],
      "op": "POP",
      "path": "17"
    },
    "4414": {
      "branch": 140,
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8677,
        8684
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 44
    },
    "4415": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8672,
        8755
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x115E"
    },
    "4418": {
      "branch": 140,
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8672,
        8755
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4419": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8711,
        8740
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4421": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8711,
        8740
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4422": {
      "op": "PUSH4",
      "value": "0x8F0E615"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "4429": {
      "op": "SHL"
    },
    "4430": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8711,
        8740
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4431": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8711,
        8740
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4432": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8711,
        8740
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4434": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8711,
        8740
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4435": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8711,
        8740
      ],
      "op": "ADD",
      "path": "17"
    },
    "4436": {
      "op": "DUP8"
    },
    "4437": {
      "op": "SWAP1"
    },
    "4438": {
      "op": "MSTORE"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4441": {
      "op": "ADD"
    },
    "4442": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8711,
        8740
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "4445": {
      "op": "JUMP"
    },
    "4446": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8672,
        8755
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4447": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8591,
        8765
      ],
      "op": "POP",
      "path": "17"
    },
    "4448": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8576,
        8942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1194"
    },
    "4451": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8576,
        8942
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4452": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8576,
        8942
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4453": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8785,
        8795
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4455": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8798,
        8833
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1170"
    },
    "4458": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8798,
        8819
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4459": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8824,
        8832
      ],
      "op": "DUP8",
      "path": "17"
    },
    "4460": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8798,
        8823
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1FAE"
    },
    "4463": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "jump": "i",
      "offset": [
        8798,
        8833
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4464": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8798,
        8833
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4465": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8785,
        8833
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4466": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8785,
        8833
      ],
      "op": "POP",
      "path": "17"
    },
    "4467": {
      "branch": 141,
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8852,
        8857
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 45
    },
    "4468": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8847,
        8932
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1192"
    },
    "4471": {
      "branch": 141,
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8847,
        8932
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4472": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8884,
        8917
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4474": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8884,
        8917
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4475": {
      "op": "PUSH3",
      "value": "0xC35F5"
    },
    "4479": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "4481": {
      "op": "SHL"
    },
    "4482": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8884,
        8917
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4483": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8884,
        8917
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4484": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8884,
        8917
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4486": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8884,
        8917
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4487": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8884,
        8917
      ],
      "op": "ADD",
      "path": "17"
    },
    "4488": {
      "op": "DUP8"
    },
    "4489": {
      "op": "SWAP1"
    },
    "4490": {
      "op": "MSTORE"
    },
    "4491": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4493": {
      "op": "ADD"
    },
    "4494": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8884,
        8917
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "4497": {
      "op": "JUMP"
    },
    "4498": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8847,
        8932
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4499": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8771,
        8942
      ],
      "op": "POP",
      "path": "17"
    },
    "4500": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8576,
        8942
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4501": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8994,
        9002
      ],
      "op": "DUP4",
      "path": "17",
      "statement": 46
    },
    "4502": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8956,
        9003
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4503": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8956,
        9003
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4504": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8984,
        8992
      ],
      "op": "DUP6",
      "path": "17"
    },
    "4505": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8972,
        8982
      ],
      "op": "DUP8",
      "path": "17"
    },
    "4506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4512": {
      "op": "SHL"
    },
    "4513": {
      "op": "SUB"
    },
    "4514": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8956,
        9003
      ],
      "op": "AND",
      "path": "17"
    },
    "4515": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8956,
        9003
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0xB8036058BAFEA884AABC446CA15619FD86F5464A4AD96F64164AD6F77444354D"
    },
    "4548": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8956,
        9003
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4550": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8956,
        9003
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4551": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8956,
        9003
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4553": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8956,
        9003
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4554": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8956,
        9003
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4555": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8956,
        9003
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4556": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8956,
        9003
      ],
      "op": "SUB",
      "path": "17"
    },
    "4557": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8956,
        9003
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4558": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8956,
        9003
      ],
      "op": "LOG4",
      "path": "17"
    },
    "4559": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8107,
        9010
      ],
      "op": "POP",
      "path": "17"
    },
    "4560": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        8107,
        9010
      ],
      "op": "POP",
      "path": "17"
    },
    "4561": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        7970,
        9010
      ],
      "op": "POP",
      "path": "17"
    },
    "4562": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        7970,
        9010
      ],
      "op": "POP",
      "path": "17"
    },
    "4563": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        7970,
        9010
      ],
      "op": "POP",
      "path": "17"
    },
    "4564": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "offset": [
        7970,
        9010
      ],
      "op": "POP",
      "path": "17"
    },
    "4565": {
      "fn": "OperatorFilterRegistry.updateCodeHash",
      "jump": "o",
      "offset": [
        7970,
        9010
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4566": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        4920,
        5837
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4567": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5020,
        5030
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4568": {
      "offset": [
        1679,
        1689
      ],
      "op": "CALLER",
      "path": "17"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4575": {
      "op": "SHL"
    },
    "4576": {
      "op": "SUB"
    },
    "4577": {
      "offset": [
        1679,
        1697
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4578": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1679,
        1697
      ],
      "op": "AND",
      "path": "17"
    },
    "4579": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1679,
        1697
      ],
      "op": "EQ",
      "path": "17"
    },
    "4580": {
      "offset": [
        1675,
        2239
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x129A"
    },
    "4583": {
      "offset": [
        1675,
        2239
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4584": {
      "offset": [
        1725,
        1729
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4591": {
      "op": "SHL"
    },
    "4592": {
      "op": "SUB"
    },
    "4593": {
      "offset": [
        1717,
        1736
      ],
      "op": "AND",
      "path": "17"
    },
    "4594": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1736
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8DA5CB5B"
    },
    "4599": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4601": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4602": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4603": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "4608": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "4609": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "4611": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SHL",
      "path": "17"
    },
    "4612": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4613": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4614": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4616": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "4617": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4619": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4621": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4622": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4623": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4624": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SUB",
      "path": "17"
    },
    "4625": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4626": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP7",
      "path": "17"
    },
    "4627": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "GAS",
      "path": "17"
    },
    "4628": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "4629": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "4630": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "4631": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "4632": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "4633": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4634": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4635": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1241"
    },
    "4638": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4639": {
      "op": "POP"
    },
    "4640": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4642": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4643": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4644": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "4646": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4647": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4648": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4649": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "4650": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4652": {
      "op": "NOT"
    },
    "4653": {
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "4654": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4655": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "4656": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4657": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "4658": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4659": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x123E"
    },
    "4662": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4663": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4664": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "4665": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4666": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x25F5"
    },
    "4669": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4670": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4671": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "4673": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4674": {
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x126F"
    },
    "4677": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4678": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4679": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4680": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4681": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4682": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x43C"
    },
    "4685": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4686": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4688": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4689": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4690": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "POP",
      "path": "17"
    },
    "4691": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "4693": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "NOT",
      "path": "17"
    },
    "4694": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3F"
    },
    "4696": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4697": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "4698": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "AND",
      "path": "17"
    },
    "4699": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4700": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "4701": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4703": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4704": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4705": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4706": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4707": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4708": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4710": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4712": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP5",
      "path": "17"
    },
    "4713": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "4714": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "4715": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x441"
    },
    "4718": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4719": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4720": {
      "offset": [
        1785,
        1795
      ],
      "op": "CALLER",
      "path": "17"
    },
    "4721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4727": {
      "op": "SHL"
    },
    "4728": {
      "op": "SUB"
    },
    "4729": {
      "offset": [
        1785,
        1804
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4730": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1785,
        1804
      ],
      "op": "AND",
      "path": "17"
    },
    "4731": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1785,
        1804
      ],
      "op": "EQ",
      "path": "17"
    },
    "4732": {
      "offset": [
        1781,
        1874
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1298"
    },
    "4735": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4736": {
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4738": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4739": {
      "op": "PUSH4",
      "value": "0x1F9EBDFF"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "4746": {
      "op": "SHL"
    },
    "4747": {
      "offset": [
        1835,
        1855
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4748": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4749": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4751": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "ADD",
      "path": "17"
    },
    "4752": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4754": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4755": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4756": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4757": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "SUB",
      "path": "17"
    },
    "4758": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4759": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "REVERT",
      "path": "17"
    },
    "4760": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4761": {
      "offset": [
        1739,
        1888
      ],
      "op": "POP",
      "path": "17"
    },
    "4762": {
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4769": {
      "op": "SHL"
    },
    "4770": {
      "op": "SUB"
    },
    "4771": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5065,
        5091
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4772": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5065,
        5091
      ],
      "op": "DUP5",
      "path": "17"
    },
    "4773": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5065,
        5091
      ],
      "op": "AND",
      "path": "17"
    },
    "4774": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5042,
        5062
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4776": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5065,
        5091
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4777": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5065,
        5091
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4778": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5065,
        5091
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4779": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5065,
        5079
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "4781": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5065,
        5091
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4783": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5065,
        5091
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4784": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5065,
        5091
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4786": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5065,
        5091
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4787": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5065,
        5091
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4788": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5065,
        5091
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4789": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5065,
        5091
      ],
      "op": "AND",
      "path": "17"
    },
    "4790": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5105,
        5131
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 47
    },
    "4791": {
      "branch": 142,
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5105,
        5131
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4792": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5101,
        5184
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x12D4"
    },
    "4795": {
      "branch": 142,
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5101,
        5184
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4796": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5154,
        5173
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4798": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5154,
        5173
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4799": {
      "op": "PUSH4",
      "value": "0xEA075BF"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4806": {
      "op": "SHL"
    },
    "4807": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5154,
        5173
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4808": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5154,
        5173
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4809": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5154,
        5173
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4811": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5154,
        5173
      ],
      "op": "ADD",
      "path": "17"
    },
    "4812": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5154,
        5173
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4814": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5154,
        5173
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4815": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5154,
        5173
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4816": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5154,
        5173
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4817": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5154,
        5173
      ],
      "op": "SUB",
      "path": "17"
    },
    "4818": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5154,
        5173
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4819": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5154,
        5173
      ],
      "op": "REVERT",
      "path": "17"
    },
    "4820": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5101,
        5184
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4821": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5211,
        5223
      ],
      "op": "DUP3",
      "path": "17",
      "statement": 48
    },
    "4822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4828": {
      "op": "SHL"
    },
    "4829": {
      "op": "SUB"
    },
    "4830": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5197,
        5223
      ],
      "op": "AND",
      "path": "17"
    },
    "4831": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5197,
        5207
      ],
      "op": "DUP5",
      "path": "17"
    },
    "4832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4838": {
      "op": "SHL"
    },
    "4839": {
      "op": "SUB"
    },
    "4840": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5197,
        5223
      ],
      "op": "AND",
      "path": "17"
    },
    "4841": {
      "branch": 143,
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5197,
        5223
      ],
      "op": "SUB",
      "path": "17"
    },
    "4842": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5193,
        5280
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1306"
    },
    "4845": {
      "branch": 143,
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5193,
        5280
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4846": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5246,
        5269
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4848": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5246,
        5269
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4849": {
      "op": "PUSH4",
      "value": "0x347F118F"
    },
    "4854": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4856": {
      "op": "SHL"
    },
    "4857": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5246,
        5269
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4858": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5246,
        5269
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4859": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5246,
        5269
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4861": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5246,
        5269
      ],
      "op": "ADD",
      "path": "17"
    },
    "4862": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5246,
        5269
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4864": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5246,
        5269
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4865": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5246,
        5269
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4866": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5246,
        5269
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4867": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5246,
        5269
      ],
      "op": "SUB",
      "path": "17"
    },
    "4868": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5246,
        5269
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4869": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5246,
        5269
      ],
      "op": "REVERT",
      "path": "17"
    },
    "4870": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5193,
        5280
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4877": {
      "op": "SHL"
    },
    "4878": {
      "op": "SUB"
    },
    "4879": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5324,
        5352
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4880": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5324,
        5352
      ],
      "op": "DUP5",
      "path": "17"
    },
    "4881": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5324,
        5352
      ],
      "op": "AND",
      "path": "17"
    },
    "4882": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5289,
        5321
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4884": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5324,
        5352
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4885": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5324,
        5352
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4886": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5324,
        5352
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4887": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5324,
        5338
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "4889": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5324,
        5352
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4891": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5324,
        5352
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4892": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5324,
        5352
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4894": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5324,
        5352
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4895": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5324,
        5352
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4896": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5324,
        5352
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4897": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5324,
        5352
      ],
      "op": "AND",
      "path": "17"
    },
    "4898": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5324,
        5352
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4899": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5362,
        5465
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 49,
      "value": "0x134A"
    },
    "4902": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5362,
        5465
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4903": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5427,
        5454
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4905": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5427,
        5454
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4906": {
      "op": "PUSH4",
      "value": "0xBFC6C337"
    },
    "4911": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4913": {
      "op": "SHL"
    },
    "4914": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5427,
        5454
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4915": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5427,
        5454
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4922": {
      "op": "SHL"
    },
    "4923": {
      "op": "SUB"
    },
    "4924": {
      "op": "DUP6"
    },
    "4925": {
      "op": "AND"
    },
    "4926": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5427,
        5454
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4928": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5427,
        5454
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4929": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5427,
        5454
      ],
      "op": "ADD",
      "path": "17"
    },
    "4930": {
      "op": "MSTORE"
    },
    "4931": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4933": {
      "op": "ADD"
    },
    "4934": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5427,
        5454
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "4937": {
      "op": "JUMP"
    },
    "4938": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5362,
        5465
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4939": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5506,
        5518
      ],
      "op": "DUP4",
      "path": "17",
      "statement": 50
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4944": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4946": {
      "op": "SHL"
    },
    "4947": {
      "op": "SUB"
    },
    "4948": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5478,
        5518
      ],
      "op": "AND",
      "path": "17"
    },
    "4949": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5478,
        5502
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4956": {
      "op": "SHL"
    },
    "4957": {
      "op": "SUB"
    },
    "4958": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5478,
        5518
      ],
      "op": "AND",
      "path": "17"
    },
    "4959": {
      "branch": 144,
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5478,
        5518
      ],
      "op": "EQ",
      "path": "17"
    },
    "4960": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5474,
        5609
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1387"
    },
    "4963": {
      "branch": 144,
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5474,
        5609
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4964": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5541,
        5598
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4966": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5541,
        5598
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4967": {
      "op": "PUSH4",
      "value": "0x1DA39527"
    },
    "4972": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4974": {
      "op": "SHL"
    },
    "4975": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5541,
        5598
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4976": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5541,
        5598
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4983": {
      "op": "SHL"
    },
    "4984": {
      "op": "SUB"
    },
    "4985": {
      "op": "DUP6"
    },
    "4986": {
      "op": "AND"
    },
    "4987": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5541,
        5598
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4989": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5541,
        5598
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4990": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5541,
        5598
      ],
      "op": "ADD",
      "path": "17"
    },
    "4991": {
      "op": "MSTORE"
    },
    "4992": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4994": {
      "op": "ADD"
    },
    "4995": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5541,
        5598
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "4998": {
      "op": "JUMP"
    },
    "4999": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5474,
        5609
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5006": {
      "op": "SHL"
    },
    "5007": {
      "op": "SUB"
    },
    "5008": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5645
      ],
      "op": "DUP6",
      "path": "17",
      "statement": 51
    },
    "5009": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5645
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5010": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5645
      ],
      "op": "AND",
      "path": "17"
    },
    "5011": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5645
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5013": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5645
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5014": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5645
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5015": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5645
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5016": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5633
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "5018": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5645
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5020": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5645
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5021": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5645
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5022": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5645
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5023": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5645
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5025": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5645
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5026": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5645
      ],
      "op": "DUP4",
      "path": "17"
    },
    "5027": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5645
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "5028": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5660
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5029": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5660
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5036": {
      "op": "SHL"
    },
    "5037": {
      "op": "SUB"
    },
    "5038": {
      "op": "NOT"
    },
    "5039": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5660
      ],
      "op": "AND",
      "path": "17"
    },
    "5040": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5660
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "5041": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5660
      ],
      "op": "DUP10",
      "path": "17"
    },
    "5042": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5660
      ],
      "op": "AND",
      "path": "17"
    },
    "5043": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5660
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "5044": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5660
      ],
      "op": "DUP6",
      "path": "17"
    },
    "5045": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5660
      ],
      "op": "OR",
      "path": "17"
    },
    "5046": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5660
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5047": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5660
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "5048": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5670,
        5696
      ],
      "op": "SWAP3",
      "path": "17",
      "statement": 52
    },
    "5049": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5670,
        5696
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5050": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5670,
        5696
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5051": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5670,
        5682
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "5053": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5670,
        5696
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5054": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5670,
        5696
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5055": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5670,
        5696
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "5056": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5670,
        5712
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x13C9"
    },
    "5059": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5670,
        5712
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5060": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5619,
        5645
      ],
      "op": "DUP7",
      "path": "17"
    },
    "5061": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5670,
        5700
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2159"
    },
    "5064": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "jump": "i",
      "offset": [
        5670,
        5712
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5065": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5670,
        5712
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5066": {
      "op": "POP"
    },
    "5067": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5727,
        5764
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 53,
      "value": "0x40"
    },
    "5069": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5727,
        5764
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5070": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5759,
        5763
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "5072": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5759,
        5763
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5077": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5079": {
      "op": "SHL"
    },
    "5080": {
      "op": "SUB"
    },
    "5081": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5727,
        5764
      ],
      "op": "DUP8",
      "path": "17"
    },
    "5082": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5727,
        5764
      ],
      "op": "AND",
      "path": "17"
    },
    "5083": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5727,
        5764
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5086": {
      "op": "DUP1"
    },
    "5087": {
      "op": "MLOAD"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5090": {
      "op": "PUSH2",
      "value": "0x26E7"
    },
    "5093": {
      "op": "DUP4"
    },
    "5094": {
      "op": "CODECOPY"
    },
    "5095": {
      "op": "DUP2"
    },
    "5096": {
      "op": "MLOAD"
    },
    "5097": {
      "op": "SWAP2"
    },
    "5098": {
      "op": "MSTORE"
    },
    "5099": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5727,
        5764
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5100": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5727,
        5764
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5102": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5727,
        5764
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5103": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5727,
        5764
      ],
      "op": "LOG3",
      "path": "17"
    },
    "5104": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5779,
        5830
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 54,
      "value": "0x40"
    },
    "5106": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5779,
        5830
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5107": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5825,
        5829
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "5109": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5825,
        5829
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5116": {
      "op": "SHL"
    },
    "5117": {
      "op": "SUB"
    },
    "5118": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5779,
        5830
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5119": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5779,
        5830
      ],
      "op": "DUP8",
      "path": "17"
    },
    "5120": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5779,
        5830
      ],
      "op": "AND",
      "path": "17"
    },
    "5121": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5779,
        5830
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5122": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5779,
        5830
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5123": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5779,
        5830
      ],
      "op": "DUP9",
      "path": "17"
    },
    "5124": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5779,
        5830
      ],
      "op": "AND",
      "path": "17"
    },
    "5125": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5779,
        5830
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5128": {
      "op": "DUP1"
    },
    "5129": {
      "op": "MLOAD"
    },
    "5130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5132": {
      "op": "PUSH2",
      "value": "0x2707"
    },
    "5135": {
      "op": "DUP4"
    },
    "5136": {
      "op": "CODECOPY"
    },
    "5137": {
      "op": "DUP2"
    },
    "5138": {
      "op": "MLOAD"
    },
    "5139": {
      "op": "SWAP2"
    },
    "5140": {
      "op": "MSTORE"
    },
    "5141": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5779,
        5830
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5142": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5779,
        5830
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5144": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5779,
        5830
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5145": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5779,
        5830
      ],
      "op": "LOG4",
      "path": "17"
    },
    "5146": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5032,
        5837
      ],
      "op": "POP",
      "path": "17"
    },
    "5147": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        5032,
        5837
      ],
      "op": "POP",
      "path": "17"
    },
    "5148": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        4920,
        5837
      ],
      "op": "POP",
      "path": "17"
    },
    "5149": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        4920,
        5837
      ],
      "op": "POP",
      "path": "17"
    },
    "5150": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "offset": [
        4920,
        5837
      ],
      "op": "POP",
      "path": "17"
    },
    "5151": {
      "fn": "OperatorFilterRegistry.registerAndSubscribe",
      "jump": "o",
      "offset": [
        4920,
        5837
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5152": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6019,
        6754
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5153": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6141,
        6151
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5154": {
      "offset": [
        1679,
        1689
      ],
      "op": "CALLER",
      "path": "17"
    },
    "5155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5161": {
      "op": "SHL"
    },
    "5162": {
      "op": "SUB"
    },
    "5163": {
      "offset": [
        1679,
        1697
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5164": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1679,
        1697
      ],
      "op": "AND",
      "path": "17"
    },
    "5165": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1679,
        1697
      ],
      "op": "EQ",
      "path": "17"
    },
    "5166": {
      "offset": [
        1675,
        2239
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x14E4"
    },
    "5169": {
      "offset": [
        1675,
        2239
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5170": {
      "offset": [
        1725,
        1729
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5177": {
      "op": "SHL"
    },
    "5178": {
      "op": "SUB"
    },
    "5179": {
      "offset": [
        1717,
        1736
      ],
      "op": "AND",
      "path": "17"
    },
    "5180": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1736
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8DA5CB5B"
    },
    "5185": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5187": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5188": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5189": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "5194": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "5195": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "5197": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "SHL",
      "path": "17"
    },
    "5198": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5199": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5200": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "5202": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "5203": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5205": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5207": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5208": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5209": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP4",
      "path": "17"
    },
    "5210": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "SUB",
      "path": "17"
    },
    "5211": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5212": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP7",
      "path": "17"
    },
    "5213": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "GAS",
      "path": "17"
    },
    "5214": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "5215": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "5216": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "5217": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "5218": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "5219": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5220": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "5221": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x148B"
    },
    "5224": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5225": {
      "op": "POP"
    },
    "5226": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5228": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5229": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5230": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "5232": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "5233": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5234": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5235": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "5236": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5238": {
      "op": "NOT"
    },
    "5239": {
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "5240": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5241": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "5242": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5243": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "5244": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5245": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1488"
    },
    "5248": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5249": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5250": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "5251": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5252": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x25F5"
    },
    "5255": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5256": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5257": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "5259": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5260": {
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x14B9"
    },
    "5263": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5264": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "5265": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5266": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5267": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "5268": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x43C"
    },
    "5271": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5272": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5274": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5275": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5276": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "POP",
      "path": "17"
    },
    "5277": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "5279": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "NOT",
      "path": "17"
    },
    "5280": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3F"
    },
    "5282": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "5283": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "5284": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "AND",
      "path": "17"
    },
    "5285": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5286": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "5287": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5289": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5290": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "5291": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5292": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5293": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "5294": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5296": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5298": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP5",
      "path": "17"
    },
    "5299": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "5300": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "5301": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x441"
    },
    "5304": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5305": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5306": {
      "offset": [
        1785,
        1795
      ],
      "op": "CALLER",
      "path": "17"
    },
    "5307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5313": {
      "op": "SHL"
    },
    "5314": {
      "op": "SUB"
    },
    "5315": {
      "offset": [
        1785,
        1804
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5316": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1785,
        1804
      ],
      "op": "AND",
      "path": "17"
    },
    "5317": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1785,
        1804
      ],
      "op": "EQ",
      "path": "17"
    },
    "5318": {
      "offset": [
        1781,
        1874
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x14E2"
    },
    "5321": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5322": {
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5324": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5325": {
      "op": "PUSH4",
      "value": "0x1F9EBDFF"
    },
    "5330": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "5332": {
      "op": "SHL"
    },
    "5333": {
      "offset": [
        1835,
        1855
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5334": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1835,
        1855
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5335": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "5337": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1835,
        1855
      ],
      "op": "ADD",
      "path": "17"
    },
    "5338": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5340": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5341": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1835,
        1855
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5342": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5343": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1835,
        1855
      ],
      "op": "SUB",
      "path": "17"
    },
    "5344": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5345": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        1835,
        1855
      ],
      "op": "REVERT",
      "path": "17"
    },
    "5346": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5347": {
      "offset": [
        1739,
        1888
      ],
      "op": "POP",
      "path": "17"
    },
    "5348": {
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5349": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6191,
        6201
      ],
      "op": "DUP3",
      "path": "17",
      "statement": 55
    },
    "5350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5356": {
      "op": "SHL"
    },
    "5357": {
      "op": "SUB"
    },
    "5358": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6171,
        6201
      ],
      "op": "AND",
      "path": "17"
    },
    "5359": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6171,
        6187
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5366": {
      "op": "SHL"
    },
    "5367": {
      "op": "SUB"
    },
    "5368": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6171,
        6201
      ],
      "op": "AND",
      "path": "17"
    },
    "5369": {
      "branch": 145,
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6171,
        6201
      ],
      "op": "SUB",
      "path": "17"
    },
    "5370": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6167,
        6255
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1516"
    },
    "5373": {
      "branch": 145,
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6167,
        6255
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5374": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6224,
        6244
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5376": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6224,
        6244
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5377": {
      "op": "PUSH4",
      "value": "0x35956D7"
    },
    "5382": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "5384": {
      "op": "SHL"
    },
    "5385": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6224,
        6244
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5386": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6224,
        6244
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5387": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6224,
        6244
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "5389": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6224,
        6244
      ],
      "op": "ADD",
      "path": "17"
    },
    "5390": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6224,
        6244
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5392": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6224,
        6244
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5393": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6224,
        6244
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5394": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6224,
        6244
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5395": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6224,
        6244
      ],
      "op": "SUB",
      "path": "17"
    },
    "5396": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6224,
        6244
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5397": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6224,
        6244
      ],
      "op": "REVERT",
      "path": "17"
    },
    "5398": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6167,
        6255
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5405": {
      "op": "SHL"
    },
    "5406": {
      "op": "SUB"
    },
    "5407": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6287,
        6313
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5408": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6287,
        6313
      ],
      "op": "DUP5",
      "path": "17"
    },
    "5409": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6287,
        6313
      ],
      "op": "AND",
      "path": "17"
    },
    "5410": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6264,
        6284
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5412": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6287,
        6313
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5413": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6287,
        6313
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5414": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6287,
        6313
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5415": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6287,
        6301
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "5417": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6287,
        6313
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5419": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6287,
        6313
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5420": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6287,
        6313
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5422": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6287,
        6313
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5423": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6287,
        6313
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "5424": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6287,
        6313
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "5425": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6287,
        6313
      ],
      "op": "AND",
      "path": "17"
    },
    "5426": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6327,
        6353
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 56
    },
    "5427": {
      "branch": 146,
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6327,
        6353
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "5428": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6323,
        6406
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1550"
    },
    "5431": {
      "branch": 146,
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6323,
        6406
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5432": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6376,
        6395
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5434": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6376,
        6395
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5435": {
      "op": "PUSH4",
      "value": "0xEA075BF"
    },
    "5440": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5442": {
      "op": "SHL"
    },
    "5443": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6376,
        6395
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5444": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6376,
        6395
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5445": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6376,
        6395
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "5447": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6376,
        6395
      ],
      "op": "ADD",
      "path": "17"
    },
    "5448": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6376,
        6395
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5450": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6376,
        6395
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5451": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6376,
        6395
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5452": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6376,
        6395
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5453": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6376,
        6395
      ],
      "op": "SUB",
      "path": "17"
    },
    "5454": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6376,
        6395
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5455": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6376,
        6395
      ],
      "op": "REVERT",
      "path": "17"
    },
    "5456": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6323,
        6406
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5463": {
      "op": "SHL"
    },
    "5464": {
      "op": "SUB"
    },
    "5465": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6448,
        6480
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5466": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6448,
        6480
      ],
      "op": "DUP5",
      "path": "17"
    },
    "5467": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6448,
        6480
      ],
      "op": "AND",
      "path": "17"
    },
    "5468": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6415,
        6445
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5470": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6448,
        6480
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5471": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6448,
        6480
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5472": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6448,
        6480
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5473": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6448,
        6462
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "5475": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6448,
        6480
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5477": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6448,
        6480
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5478": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6448,
        6480
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5480": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6448,
        6480
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5481": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6448,
        6480
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "5482": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6448,
        6480
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "5483": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6448,
        6480
      ],
      "op": "AND",
      "path": "17"
    },
    "5484": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6448,
        6480
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5485": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6490,
        6595
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 57,
      "value": "0x1594"
    },
    "5488": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6490,
        6595
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5489": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6553,
        6584
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5491": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6553,
        6584
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5492": {
      "op": "PUSH4",
      "value": "0xBFC6C337"
    },
    "5497": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5499": {
      "op": "SHL"
    },
    "5500": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6553,
        6584
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5501": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6553,
        6584
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5508": {
      "op": "SHL"
    },
    "5509": {
      "op": "SUB"
    },
    "5510": {
      "op": "DUP6"
    },
    "5511": {
      "op": "AND"
    },
    "5512": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6553,
        6584
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "5514": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6553,
        6584
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5515": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6553,
        6584
      ],
      "op": "ADD",
      "path": "17"
    },
    "5516": {
      "op": "MSTORE"
    },
    "5517": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5519": {
      "op": "ADD"
    },
    "5520": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6553,
        6584
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "5523": {
      "op": "JUMP"
    },
    "5524": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6490,
        6595
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5531": {
      "op": "SHL"
    },
    "5532": {
      "op": "SUB"
    },
    "5533": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6630
      ],
      "op": "DUP6",
      "path": "17",
      "statement": 58
    },
    "5534": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6630
      ],
      "op": "AND",
      "path": "17"
    },
    "5535": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6630
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5537": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6630
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5538": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6630
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5539": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6630
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5540": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6618
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "5542": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6630
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5544": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6630
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5545": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6630
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5547": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6630
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5548": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6630
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5549": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6630
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "5550": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6643
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5551": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6643
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "5552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5558": {
      "op": "SHL"
    },
    "5559": {
      "op": "SUB"
    },
    "5560": {
      "op": "NOT"
    },
    "5561": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6643
      ],
      "op": "AND",
      "path": "17"
    },
    "5562": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6643
      ],
      "op": "DUP5",
      "path": "17"
    },
    "5563": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6643
      ],
      "op": "OR",
      "path": "17"
    },
    "5564": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6643
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5565": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6643
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "5566": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6658,
        6695
      ],
      "op": "MLOAD",
      "path": "17",
      "statement": 59
    },
    "5567": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6643
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "5569": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6643
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "5570": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6604,
        6630
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5573": {
      "op": "DUP1"
    },
    "5574": {
      "op": "MLOAD"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5577": {
      "op": "PUSH2",
      "value": "0x26E7"
    },
    "5580": {
      "op": "DUP4"
    },
    "5581": {
      "op": "CODECOPY"
    },
    "5582": {
      "op": "DUP2"
    },
    "5583": {
      "op": "MLOAD"
    },
    "5584": {
      "op": "SWAP2"
    },
    "5585": {
      "op": "MSTORE"
    },
    "5586": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6658,
        6695
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5587": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6658,
        6695
      ],
      "op": "LOG3",
      "path": "17"
    },
    "5588": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6705,
        6747
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 60,
      "value": "0x862"
    },
    "5591": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6718,
        6728
      ],
      "op": "DUP6",
      "path": "17"
    },
    "5592": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6730,
        6746
      ],
      "op": "DUP6",
      "path": "17"
    },
    "5593": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "offset": [
        6705,
        6717
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1FBA"
    },
    "5596": {
      "fn": "OperatorFilterRegistry.registerAndCopyEntries",
      "jump": "i",
      "offset": [
        6705,
        6747
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5597": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9178,
        10565
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5598": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9312,
        9322
      ],
      "op": "DUP4",
      "path": "17"
    },
    "5599": {
      "offset": [
        1679,
        1689
      ],
      "op": "CALLER",
      "path": "17"
    },
    "5600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5606": {
      "op": "SHL"
    },
    "5607": {
      "op": "SUB"
    },
    "5608": {
      "offset": [
        1679,
        1697
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5609": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1679,
        1697
      ],
      "op": "AND",
      "path": "17"
    },
    "5610": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1679,
        1697
      ],
      "op": "EQ",
      "path": "17"
    },
    "5611": {
      "offset": [
        1675,
        2239
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x16A1"
    },
    "5614": {
      "offset": [
        1675,
        2239
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5615": {
      "offset": [
        1725,
        1729
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5622": {
      "op": "SHL"
    },
    "5623": {
      "op": "SUB"
    },
    "5624": {
      "offset": [
        1717,
        1736
      ],
      "op": "AND",
      "path": "17"
    },
    "5625": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1736
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8DA5CB5B"
    },
    "5630": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5632": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5633": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5634": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "5639": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "5640": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "5642": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "SHL",
      "path": "17"
    },
    "5643": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5644": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5645": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "5647": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "5648": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5650": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5652": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5653": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5654": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP4",
      "path": "17"
    },
    "5655": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "SUB",
      "path": "17"
    },
    "5656": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5657": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP7",
      "path": "17"
    },
    "5658": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "GAS",
      "path": "17"
    },
    "5659": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "5660": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "5661": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "5662": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "5663": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "5664": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5665": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "5666": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1648"
    },
    "5669": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5670": {
      "op": "POP"
    },
    "5671": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5673": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5674": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5675": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "5677": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "5678": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5679": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5680": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "5681": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5683": {
      "op": "NOT"
    },
    "5684": {
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "5685": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5686": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "5687": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5688": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "5689": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5690": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1645"
    },
    "5693": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5694": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5695": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "5696": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5697": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x25F5"
    },
    "5700": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5701": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5702": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "5704": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5705": {
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1676"
    },
    "5708": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5709": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "5710": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5711": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5712": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "5713": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x43C"
    },
    "5716": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5717": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5719": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5720": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5721": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "POP",
      "path": "17"
    },
    "5722": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "5724": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "NOT",
      "path": "17"
    },
    "5725": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3F"
    },
    "5727": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "5728": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "5729": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "AND",
      "path": "17"
    },
    "5730": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5731": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "5732": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5734": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5735": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "5736": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5737": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5738": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "5739": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5741": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5743": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP5",
      "path": "17"
    },
    "5744": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "5745": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "5746": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x441"
    },
    "5749": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5750": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5751": {
      "offset": [
        1785,
        1795
      ],
      "op": "CALLER",
      "path": "17"
    },
    "5752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5758": {
      "op": "SHL"
    },
    "5759": {
      "op": "SUB"
    },
    "5760": {
      "offset": [
        1785,
        1804
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5761": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1785,
        1804
      ],
      "op": "AND",
      "path": "17"
    },
    "5762": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1785,
        1804
      ],
      "op": "EQ",
      "path": "17"
    },
    "5763": {
      "offset": [
        1781,
        1874
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x169F"
    },
    "5766": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5767": {
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5769": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5770": {
      "op": "PUSH4",
      "value": "0x1F9EBDFF"
    },
    "5775": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "5777": {
      "op": "SHL"
    },
    "5778": {
      "offset": [
        1835,
        1855
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5779": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1835,
        1855
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5780": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "5782": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1835,
        1855
      ],
      "op": "ADD",
      "path": "17"
    },
    "5783": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5785": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5786": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1835,
        1855
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5787": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5788": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1835,
        1855
      ],
      "op": "SUB",
      "path": "17"
    },
    "5789": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5790": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        1835,
        1855
      ],
      "op": "REVERT",
      "path": "17"
    },
    "5791": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5792": {
      "offset": [
        1739,
        1888
      ],
      "op": "POP",
      "path": "17"
    },
    "5793": {
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5800": {
      "op": "SHL"
    },
    "5801": {
      "op": "SUB"
    },
    "5802": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9361,
        9387
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5803": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9361,
        9387
      ],
      "op": "DUP7",
      "path": "17"
    },
    "5804": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9361,
        9387
      ],
      "op": "AND",
      "path": "17"
    },
    "5805": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9338,
        9358
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5807": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9361,
        9387
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5808": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9361,
        9387
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5809": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9361,
        9387
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5810": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9361,
        9375
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "5812": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9361,
        9387
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5814": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9361,
        9387
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5815": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9361,
        9387
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5817": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9361,
        9387
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5818": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9361,
        9387
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "5819": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9361,
        9387
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "5820": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9361,
        9387
      ],
      "op": "AND",
      "path": "17"
    },
    "5821": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9361,
        9387
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5822": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9397,
        9486
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 61,
      "value": "0x16E5"
    },
    "5825": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9397,
        9486
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5826": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9450,
        9475
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5828": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9450,
        9475
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5829": {
      "op": "PUSH4",
      "value": "0xBFC6C337"
    },
    "5834": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5836": {
      "op": "SHL"
    },
    "5837": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9450,
        9475
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5838": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9450,
        9475
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5845": {
      "op": "SHL"
    },
    "5846": {
      "op": "SUB"
    },
    "5847": {
      "op": "DUP8"
    },
    "5848": {
      "op": "AND"
    },
    "5849": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9450,
        9475
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "5851": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9450,
        9475
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5852": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9450,
        9475
      ],
      "op": "ADD",
      "path": "17"
    },
    "5853": {
      "op": "MSTORE"
    },
    "5854": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5856": {
      "op": "ADD"
    },
    "5857": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9450,
        9475
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "5860": {
      "op": "JUMP"
    },
    "5861": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9397,
        9486
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5862": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9515,
        9525
      ],
      "op": "DUP6",
      "path": "17",
      "statement": 62
    },
    "5863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5869": {
      "op": "SHL"
    },
    "5870": {
      "op": "SUB"
    },
    "5871": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9499,
        9525
      ],
      "op": "AND",
      "path": "17"
    },
    "5872": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9499,
        9511
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5879": {
      "op": "SHL"
    },
    "5880": {
      "op": "SUB"
    },
    "5881": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9499,
        9525
      ],
      "op": "AND",
      "path": "17"
    },
    "5882": {
      "branch": 147,
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9499,
        9525
      ],
      "op": "EQ",
      "path": "17"
    },
    "5883": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9495,
        9600
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1722"
    },
    "5886": {
      "branch": 147,
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9495,
        9600
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5887": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9548,
        9589
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5889": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9548,
        9589
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5890": {
      "op": "PUSH4",
      "value": "0x4AF4D69"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5897": {
      "op": "SHL"
    },
    "5898": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9548,
        9589
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5899": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9548,
        9589
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5906": {
      "op": "SHL"
    },
    "5907": {
      "op": "SUB"
    },
    "5908": {
      "op": "DUP3"
    },
    "5909": {
      "op": "AND"
    },
    "5910": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9548,
        9589
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "5912": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9548,
        9589
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5913": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9548,
        9589
      ],
      "op": "ADD",
      "path": "17"
    },
    "5914": {
      "op": "MSTORE"
    },
    "5915": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5917": {
      "op": "ADD"
    },
    "5918": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9548,
        9589
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "5921": {
      "op": "JUMP"
    },
    "5922": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9495,
        9600
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5929": {
      "op": "SHL"
    },
    "5930": {
      "op": "SUB"
    },
    "5931": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9665,
        9695
      ],
      "op": "DUP7",
      "path": "17"
    },
    "5932": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9665,
        9695
      ],
      "op": "AND",
      "path": "17"
    },
    "5933": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9609,
        9662
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5935": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9665,
        9695
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5936": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9665,
        9695
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5937": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9665,
        9695
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5938": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9665,
        9695
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5940": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9665,
        9695
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5941": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9665,
        9695
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5942": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9665,
        9695
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5943": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9665,
        9695
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5945": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9665,
        9695
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5946": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9665,
        9695
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "5947": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9731,
        9740
      ],
      "op": "DUP5",
      "path": "17"
    },
    "5948": {
      "branch": 148,
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9786,
        9794
      ],
      "op": "DUP5",
      "path": "17"
    },
    "5949": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9781,
        10485
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x17BD"
    },
    "5952": {
      "branch": 148,
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9781,
        10485
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5953": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9819,
        9828
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5955": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9814,
        10125
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5956": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9838,
        9853
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5957": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9834,
        9835
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5958": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9834,
        9853
      ],
      "op": "LT",
      "path": "17"
    },
    "5959": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9814,
        10125
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "5960": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9814,
        10125
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x17B7"
    },
    "5963": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9814,
        10125
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5964": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9882,
        9898
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5966": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9910
      ],
      "op": "DUP9",
      "path": "17"
    },
    "5967": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9910
      ],
      "op": "DUP9",
      "path": "17"
    },
    "5968": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9911,
        9912
      ],
      "op": "DUP4",
      "path": "17"
    },
    "5969": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5970": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5971": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "LT",
      "path": "17"
    },
    "5972": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x175F"
    },
    "5975": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5976": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x175F"
    },
    "5979": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2612"
    },
    "5982": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "jump": "i",
      "offset": [
        9901,
        9913
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5983": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5984": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5985": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "POP",
      "path": "17"
    },
    "5986": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5988": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "MUL",
      "path": "17"
    },
    "5989": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "ADD",
      "path": "17"
    },
    "5990": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5992": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5993": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "ADD",
      "path": "17"
    },
    "5994": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5995": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1774"
    },
    "5998": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5999": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6000": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2476"
    },
    "6003": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "jump": "i",
      "offset": [
        9901,
        9913
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6004": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9901,
        9913
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6005": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9882,
        9913
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6006": {
      "op": "POP"
    },
    "6007": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9935,
        9947
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6009": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9950,
        9987
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1782"
    },
    "6012": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9950,
        9970
      ],
      "op": "DUP6",
      "path": "17"
    },
    "6013": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9882,
        9913
      ],
      "op": "DUP4",
      "path": "17"
    },
    "6014": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9950,
        9977
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2120"
    },
    "6017": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "jump": "i",
      "offset": [
        9950,
        9987
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6018": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9950,
        9987
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6019": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9935,
        9987
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6020": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9935,
        9987
      ],
      "op": "POP",
      "path": "17"
    },
    "6021": {
      "branch": 149,
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10014,
        10021
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 63
    },
    "6022": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10009,
        10107
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x17AD"
    },
    "6025": {
      "branch": 149,
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10009,
        10107
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6026": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10056,
        10084
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6028": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10056,
        10084
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6029": {
      "op": "PUSH4",
      "value": "0x22A92E07"
    },
    "6034": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6036": {
      "op": "SHL"
    },
    "6037": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10056,
        10084
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6038": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10056,
        10084
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6045": {
      "op": "SHL"
    },
    "6046": {
      "op": "SUB"
    },
    "6047": {
      "op": "DUP4"
    },
    "6048": {
      "op": "AND"
    },
    "6049": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10056,
        10084
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "6051": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10056,
        10084
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6052": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10056,
        10084
      ],
      "op": "ADD",
      "path": "17"
    },
    "6053": {
      "op": "MSTORE"
    },
    "6054": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6056": {
      "op": "ADD"
    },
    "6057": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10056,
        10084
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "6060": {
      "op": "JUMP"
    },
    "6061": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10009,
        10107
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6062": {
      "op": "POP"
    },
    "6063": {
      "op": "POP"
    },
    "6064": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9855,
        9858
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 64,
      "value": "0x1"
    },
    "6066": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9855,
        9858
      ],
      "op": "ADD",
      "path": "17"
    },
    "6067": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9814,
        10125
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1743"
    },
    "6070": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9814,
        10125
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6071": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9814,
        10125
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6072": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9814,
        10125
      ],
      "op": "POP",
      "path": "17"
    },
    "6073": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9781,
        10485
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1836"
    },
    "6076": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9781,
        10485
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6077": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9781,
        10485
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6078": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10168,
        10177
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6080": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10163,
        10471
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6081": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10187,
        10202
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6082": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10183,
        10184
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6083": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10183,
        10202
      ],
      "op": "LT",
      "path": "17"
    },
    "6084": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10163,
        10471
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "6085": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10163,
        10471
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1834"
    },
    "6088": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10163,
        10471
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6089": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10231,
        10247
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6091": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10259
      ],
      "op": "DUP9",
      "path": "17"
    },
    "6092": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10259
      ],
      "op": "DUP9",
      "path": "17"
    },
    "6093": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10260,
        10261
      ],
      "op": "DUP4",
      "path": "17"
    },
    "6094": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6095": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6096": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "LT",
      "path": "17"
    },
    "6097": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x17DC"
    },
    "6100": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6101": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x17DC"
    },
    "6104": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2612"
    },
    "6107": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "jump": "i",
      "offset": [
        10250,
        10262
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6108": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6109": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6110": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "POP",
      "path": "17"
    },
    "6111": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "6113": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "MUL",
      "path": "17"
    },
    "6114": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "ADD",
      "path": "17"
    },
    "6115": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "6117": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6118": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "ADD",
      "path": "17"
    },
    "6119": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6120": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x17F1"
    },
    "6123": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6124": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6125": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2476"
    },
    "6128": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "jump": "i",
      "offset": [
        10250,
        10262
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6129": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10250,
        10262
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6130": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10231,
        10262
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6131": {
      "op": "POP"
    },
    "6132": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10284,
        10294
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6134": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10297,
        10331
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x17FF"
    },
    "6137": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10297,
        10317
      ],
      "op": "DUP6",
      "path": "17"
    },
    "6138": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10231,
        10262
      ],
      "op": "DUP4",
      "path": "17"
    },
    "6139": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10297,
        10321
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2159"
    },
    "6142": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "jump": "i",
      "offset": [
        10297,
        10331
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6143": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10297,
        10331
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6144": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10284,
        10331
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6145": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10284,
        10331
      ],
      "op": "POP",
      "path": "17"
    },
    "6146": {
      "branch": 150,
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10358,
        10363
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 65
    },
    "6147": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10353,
        10453
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x182A"
    },
    "6150": {
      "branch": 150,
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10353,
        10453
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6151": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10398,
        10430
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6153": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10398,
        10430
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6154": {
      "op": "PUSH4",
      "value": "0x2ED108D"
    },
    "6159": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "6161": {
      "op": "SHL"
    },
    "6162": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10398,
        10430
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6163": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10398,
        10430
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6170": {
      "op": "SHL"
    },
    "6171": {
      "op": "SUB"
    },
    "6172": {
      "op": "DUP4"
    },
    "6173": {
      "op": "AND"
    },
    "6174": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10398,
        10430
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "6176": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10398,
        10430
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6177": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10398,
        10430
      ],
      "op": "ADD",
      "path": "17"
    },
    "6178": {
      "op": "MSTORE"
    },
    "6179": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6181": {
      "op": "ADD"
    },
    "6182": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10398,
        10430
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "6185": {
      "op": "JUMP"
    },
    "6186": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10353,
        10453
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6187": {
      "op": "POP"
    },
    "6188": {
      "op": "POP"
    },
    "6189": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10204,
        10207
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 66,
      "value": "0x1"
    },
    "6191": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10204,
        10207
      ],
      "op": "ADD",
      "path": "17"
    },
    "6192": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10163,
        10471
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x17C0"
    },
    "6195": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10163,
        10471
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6196": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10163,
        10471
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6197": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10163,
        10471
      ],
      "op": "POP",
      "path": "17"
    },
    "6198": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        9781,
        10485
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6199": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10549,
        10557
      ],
      "op": "DUP5",
      "path": "17",
      "statement": 67
    },
    "6200": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10509,
        10558
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "6201": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10509,
        10558
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "6202": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10526,
        10536
      ],
      "op": "DUP9",
      "path": "17"
    },
    "6203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6207": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6209": {
      "op": "SHL"
    },
    "6210": {
      "op": "SUB"
    },
    "6211": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10509,
        10558
      ],
      "op": "AND",
      "path": "17"
    },
    "6212": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10509,
        10558
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x2B85AFDACB82D5512C6F05566B3018677FFCBD7E5F75E498BC64081131CBD6C"
    },
    "6245": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10538,
        10547
      ],
      "op": "DUP10",
      "path": "17"
    },
    "6246": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10538,
        10547
      ],
      "op": "DUP10",
      "path": "17"
    },
    "6247": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10509,
        10558
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6249": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10509,
        10558
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6250": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10509,
        10558
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x68B"
    },
    "6253": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10509,
        10558
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "6254": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10509,
        10558
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6255": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10509,
        10558
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6256": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "offset": [
        10509,
        10558
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2661"
    },
    "6259": {
      "fn": "OperatorFilterRegistry.updateOperators",
      "jump": "i",
      "offset": [
        10509,
        10558
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6260": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        6894,
        7839
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6261": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7015,
        7025
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6262": {
      "offset": [
        1679,
        1689
      ],
      "op": "CALLER",
      "path": "17"
    },
    "6263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6269": {
      "op": "SHL"
    },
    "6270": {
      "op": "SUB"
    },
    "6271": {
      "offset": [
        1679,
        1697
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6272": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1679,
        1697
      ],
      "op": "AND",
      "path": "17"
    },
    "6273": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1679,
        1697
      ],
      "op": "EQ",
      "path": "17"
    },
    "6274": {
      "offset": [
        1675,
        2239
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1938"
    },
    "6277": {
      "offset": [
        1675,
        2239
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6278": {
      "offset": [
        1725,
        1729
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6285": {
      "op": "SHL"
    },
    "6286": {
      "op": "SUB"
    },
    "6287": {
      "offset": [
        1717,
        1736
      ],
      "op": "AND",
      "path": "17"
    },
    "6288": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1736
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8DA5CB5B"
    },
    "6293": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6295": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6296": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6297": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "6302": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "6303": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "6305": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "SHL",
      "path": "17"
    },
    "6306": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6307": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6308": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "6310": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "6311": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "6313": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6315": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6316": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6317": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP4",
      "path": "17"
    },
    "6318": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "SUB",
      "path": "17"
    },
    "6319": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6320": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP7",
      "path": "17"
    },
    "6321": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "GAS",
      "path": "17"
    },
    "6322": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "6323": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "6324": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "6325": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "6326": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "6327": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6328": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "6329": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x18DF"
    },
    "6332": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6333": {
      "op": "POP"
    },
    "6334": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6336": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6337": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6338": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "6340": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "6341": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6342": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6343": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "6344": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6346": {
      "op": "NOT"
    },
    "6347": {
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "6348": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6349": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "6350": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6351": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "6352": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6353": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x18DC"
    },
    "6356": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6357": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6358": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "6359": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6360": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x25F5"
    },
    "6363": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6364": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6365": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "6367": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6368": {
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x190D"
    },
    "6371": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6372": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "6373": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6374": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6375": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "6376": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x43C"
    },
    "6379": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6380": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6382": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6383": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6384": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "POP",
      "path": "17"
    },
    "6385": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "6387": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "NOT",
      "path": "17"
    },
    "6388": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3F"
    },
    "6390": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "6391": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "6392": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "AND",
      "path": "17"
    },
    "6393": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6394": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "6395": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6397": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6398": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "6399": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6400": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6401": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "6402": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6404": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "6406": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP5",
      "path": "17"
    },
    "6407": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "6408": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "6409": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x441"
    },
    "6412": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6413": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6414": {
      "offset": [
        1785,
        1795
      ],
      "op": "CALLER",
      "path": "17"
    },
    "6415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6419": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6421": {
      "op": "SHL"
    },
    "6422": {
      "op": "SUB"
    },
    "6423": {
      "offset": [
        1785,
        1804
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6424": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1785,
        1804
      ],
      "op": "AND",
      "path": "17"
    },
    "6425": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1785,
        1804
      ],
      "op": "EQ",
      "path": "17"
    },
    "6426": {
      "offset": [
        1781,
        1874
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1936"
    },
    "6429": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6430": {
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6432": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6433": {
      "op": "PUSH4",
      "value": "0x1F9EBDFF"
    },
    "6438": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "6440": {
      "op": "SHL"
    },
    "6441": {
      "offset": [
        1835,
        1855
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6442": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1835,
        1855
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6443": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "6445": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1835,
        1855
      ],
      "op": "ADD",
      "path": "17"
    },
    "6446": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6448": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6449": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1835,
        1855
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6450": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6451": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1835,
        1855
      ],
      "op": "SUB",
      "path": "17"
    },
    "6452": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6453": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        1835,
        1855
      ],
      "op": "REVERT",
      "path": "17"
    },
    "6454": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6455": {
      "offset": [
        1739,
        1888
      ],
      "op": "POP",
      "path": "17"
    },
    "6456": {
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6463": {
      "op": "SHL"
    },
    "6464": {
      "op": "SUB"
    },
    "6465": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7064,
        7090
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6466": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7064,
        7090
      ],
      "op": "DUP6",
      "path": "17"
    },
    "6467": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7064,
        7090
      ],
      "op": "AND",
      "path": "17"
    },
    "6468": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7041,
        7061
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6470": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7064,
        7090
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6471": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7064,
        7090
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6472": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7064,
        7090
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6473": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7064,
        7078
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "6475": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7064,
        7090
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "6477": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7064,
        7090
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6478": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7064,
        7090
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6480": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7064,
        7090
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6481": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7064,
        7090
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "6482": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7064,
        7090
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6483": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7064,
        7090
      ],
      "op": "AND",
      "path": "17"
    },
    "6484": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7064,
        7090
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6485": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7100,
        7189
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 68,
      "value": "0x197C"
    },
    "6488": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7100,
        7189
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6489": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7153,
        7178
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6491": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7153,
        7178
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6492": {
      "op": "PUSH4",
      "value": "0xBFC6C337"
    },
    "6497": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6499": {
      "op": "SHL"
    },
    "6500": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7153,
        7178
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6501": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7153,
        7178
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6508": {
      "op": "SHL"
    },
    "6509": {
      "op": "SUB"
    },
    "6510": {
      "op": "DUP7"
    },
    "6511": {
      "op": "AND"
    },
    "6512": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7153,
        7178
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "6514": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7153,
        7178
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6515": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7153,
        7178
      ],
      "op": "ADD",
      "path": "17"
    },
    "6516": {
      "op": "MSTORE"
    },
    "6517": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6519": {
      "op": "ADD"
    },
    "6520": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7153,
        7178
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "6523": {
      "op": "JUMP"
    },
    "6524": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7100,
        7189
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6525": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7218,
        7228
      ],
      "op": "DUP5",
      "path": "17",
      "statement": 69
    },
    "6526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6532": {
      "op": "SHL"
    },
    "6533": {
      "op": "SUB"
    },
    "6534": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7202,
        7228
      ],
      "op": "AND",
      "path": "17"
    },
    "6535": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7202,
        7214
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6542": {
      "op": "SHL"
    },
    "6543": {
      "op": "SUB"
    },
    "6544": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7202,
        7228
      ],
      "op": "AND",
      "path": "17"
    },
    "6545": {
      "branch": 151,
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7202,
        7228
      ],
      "op": "EQ",
      "path": "17"
    },
    "6546": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7198,
        7303
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x19B9"
    },
    "6549": {
      "branch": 151,
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7198,
        7303
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6550": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7251,
        7292
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6552": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7251,
        7292
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6553": {
      "op": "PUSH4",
      "value": "0x4AF4D69"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6560": {
      "op": "SHL"
    },
    "6561": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7251,
        7292
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6562": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7251,
        7292
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6567": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6569": {
      "op": "SHL"
    },
    "6570": {
      "op": "SUB"
    },
    "6571": {
      "op": "DUP3"
    },
    "6572": {
      "op": "AND"
    },
    "6573": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7251,
        7292
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "6575": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7251,
        7292
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6576": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7251,
        7292
      ],
      "op": "ADD",
      "path": "17"
    },
    "6577": {
      "op": "MSTORE"
    },
    "6578": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6580": {
      "op": "ADD"
    },
    "6581": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7251,
        7292
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "6584": {
      "op": "JUMP"
    },
    "6585": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7198,
        7303
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6590": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6592": {
      "op": "SHL"
    },
    "6593": {
      "op": "SUB"
    },
    "6594": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7368,
        7398
      ],
      "op": "DUP6",
      "path": "17"
    },
    "6595": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7368,
        7398
      ],
      "op": "AND",
      "path": "17"
    },
    "6596": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7312,
        7365
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6598": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7368,
        7398
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6599": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7368,
        7398
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6600": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7368,
        7398
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6601": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7368,
        7398
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "6603": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7368,
        7398
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6604": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7368,
        7398
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6605": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7368,
        7398
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6606": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7368,
        7398
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6608": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7368,
        7398
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6609": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7368,
        7398
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "6610": {
      "branch": 152,
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7414,
        7422
      ],
      "op": "DUP4",
      "path": "17"
    },
    "6611": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7409,
        7771
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A13"
    },
    "6614": {
      "branch": 152,
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7409,
        7771
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6615": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7438,
        7450
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6617": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7453,
        7490
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x19E2"
    },
    "6620": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7453,
        7473
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6621": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7481,
        7489
      ],
      "op": "DUP8",
      "path": "17"
    },
    "6622": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7453,
        7480
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2120"
    },
    "6625": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "jump": "i",
      "offset": [
        7453,
        7490
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6626": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7453,
        7490
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6627": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7438,
        7490
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6628": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7438,
        7490
      ],
      "op": "POP",
      "path": "17"
    },
    "6629": {
      "branch": 153,
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7509,
        7516
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 70
    },
    "6630": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7504,
        7586
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A0D"
    },
    "6633": {
      "branch": 153,
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7504,
        7586
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6634": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7543,
        7571
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6636": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7543,
        7571
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6637": {
      "op": "PUSH4",
      "value": "0x22A92E07"
    },
    "6642": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6644": {
      "op": "SHL"
    },
    "6645": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7543,
        7571
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6646": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7543,
        7571
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6653": {
      "op": "SHL"
    },
    "6654": {
      "op": "SUB"
    },
    "6655": {
      "op": "DUP8"
    },
    "6656": {
      "op": "AND"
    },
    "6657": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7543,
        7571
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "6659": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7543,
        7571
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6660": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7543,
        7571
      ],
      "op": "ADD",
      "path": "17"
    },
    "6661": {
      "op": "MSTORE"
    },
    "6662": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6664": {
      "op": "ADD"
    },
    "6665": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7543,
        7571
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "6668": {
      "op": "JUMP"
    },
    "6669": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7504,
        7586
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6670": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7424,
        7596
      ],
      "op": "POP",
      "path": "17"
    },
    "6671": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7409,
        7771
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A4C"
    },
    "6674": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7409,
        7771
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6675": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7409,
        7771
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6676": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7616,
        7626
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6678": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7629,
        7663
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A1F"
    },
    "6681": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7629,
        7649
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6682": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7654,
        7662
      ],
      "op": "DUP8",
      "path": "17"
    },
    "6683": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7629,
        7653
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2159"
    },
    "6686": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "jump": "i",
      "offset": [
        7629,
        7663
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6687": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7629,
        7663
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6688": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7616,
        7663
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6689": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7616,
        7663
      ],
      "op": "POP",
      "path": "17"
    },
    "6690": {
      "branch": 154,
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7682,
        7687
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 71
    },
    "6691": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7677,
        7761
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A4A"
    },
    "6694": {
      "branch": 154,
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7677,
        7761
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6695": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7714,
        7746
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6697": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7714,
        7746
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6698": {
      "op": "PUSH4",
      "value": "0x2ED108D"
    },
    "6703": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "6705": {
      "op": "SHL"
    },
    "6706": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7714,
        7746
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6707": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7714,
        7746
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6714": {
      "op": "SHL"
    },
    "6715": {
      "op": "SUB"
    },
    "6716": {
      "op": "DUP8"
    },
    "6717": {
      "op": "AND"
    },
    "6718": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7714,
        7746
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "6720": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7714,
        7746
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6721": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7714,
        7746
      ],
      "op": "ADD",
      "path": "17"
    },
    "6722": {
      "op": "MSTORE"
    },
    "6723": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6725": {
      "op": "ADD"
    },
    "6726": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7714,
        7746
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "6729": {
      "op": "JUMP"
    },
    "6730": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7677,
        7761
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6731": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7602,
        7771
      ],
      "op": "POP",
      "path": "17"
    },
    "6732": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7409,
        7771
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6733": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7823,
        7831
      ],
      "op": "DUP4",
      "path": "17",
      "statement": 72
    },
    "6734": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7785,
        7832
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "6735": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7785,
        7832
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "6736": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7813,
        7821
      ],
      "op": "DUP6",
      "path": "17"
    },
    "6737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6743": {
      "op": "SHL"
    },
    "6744": {
      "op": "SUB"
    },
    "6745": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7785,
        7832
      ],
      "op": "AND",
      "path": "17"
    },
    "6746": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7801,
        7811
      ],
      "op": "DUP8",
      "path": "17"
    },
    "6747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6753": {
      "op": "SHL"
    },
    "6754": {
      "op": "SUB"
    },
    "6755": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7785,
        7832
      ],
      "op": "AND",
      "path": "17"
    },
    "6756": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7785,
        7832
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x2738289D9DEECDC30EB8FFC42876633CAECCA1FFA166E4EFA89F408E17373A1A"
    },
    "6789": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7785,
        7832
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6791": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7785,
        7832
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6792": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7785,
        7832
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6794": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7785,
        7832
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6795": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7785,
        7832
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6796": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7785,
        7832
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6797": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7785,
        7832
      ],
      "op": "SUB",
      "path": "17"
    },
    "6798": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7785,
        7832
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6799": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7785,
        7832
      ],
      "op": "LOG4",
      "path": "17"
    },
    "6800": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7031,
        7839
      ],
      "op": "POP",
      "path": "17"
    },
    "6801": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        7031,
        7839
      ],
      "op": "POP",
      "path": "17"
    },
    "6802": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        6894,
        7839
      ],
      "op": "POP",
      "path": "17"
    },
    "6803": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        6894,
        7839
      ],
      "op": "POP",
      "path": "17"
    },
    "6804": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        6894,
        7839
      ],
      "op": "POP",
      "path": "17"
    },
    "6805": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "offset": [
        6894,
        7839
      ],
      "op": "POP",
      "path": "17"
    },
    "6806": {
      "fn": "OperatorFilterRegistry.updateOperator",
      "jump": "o",
      "offset": [
        6894,
        7839
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6807": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21484,
        21819
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6814": {
      "op": "SHL"
    },
    "6815": {
      "op": "SUB"
    },
    "6816": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21612,
        21638
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6817": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21612,
        21638
      ],
      "op": "DUP4",
      "path": "17"
    },
    "6818": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21612,
        21638
      ],
      "op": "AND",
      "path": "17"
    },
    "6819": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21570,
        21577
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6821": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21612,
        21638
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6822": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21612,
        21638
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6823": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21612,
        21638
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6824": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21612,
        21626
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "6826": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21612,
        21638
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "6828": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21612,
        21638
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6829": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21612,
        21638
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6831": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21612,
        21638
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6832": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21612,
        21638
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "6833": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21612,
        21638
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6834": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21570,
        21577
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6835": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21570,
        21577
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "6836": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21612,
        21638
      ],
      "op": "AND",
      "path": "17"
    },
    "6837": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21612,
        21638
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6838": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21652,
        21678
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6839": {
      "branch": 155,
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21652,
        21678
      ],
      "op": "EQ",
      "path": "17"
    },
    "6840": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21648,
        21755
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1ADD"
    },
    "6843": {
      "branch": 155,
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21648,
        21755
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6850": {
      "op": "SHL"
    },
    "6851": {
      "op": "SUB"
    },
    "6852": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21701,
        21734
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 73
    },
    "6853": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21701,
        21734
      ],
      "op": "AND",
      "path": "17"
    },
    "6854": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21701,
        21734
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6856": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21701,
        21734
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6857": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21701,
        21734
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6858": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21701,
        21734
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6859": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21701,
        21720
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "6861": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21701,
        21734
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "6863": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21701,
        21734
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6864": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21701,
        21734
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6866": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21701,
        21734
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6867": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21701,
        21734
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "6868": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21701,
        21744
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCEB"
    },
    "6871": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21701,
        21744
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6872": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21738,
        21743
      ],
      "op": "DUP5",
      "path": "17"
    },
    "6873": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21701,
        21737
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2135"
    },
    "6876": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "jump": "i",
      "offset": [
        21701,
        21744
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6877": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21648,
        21755
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6884": {
      "op": "SHL"
    },
    "6885": {
      "op": "SUB"
    },
    "6886": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21771,
        21802
      ],
      "op": "DUP5",
      "path": "17",
      "statement": 74
    },
    "6887": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21771,
        21802
      ],
      "op": "AND",
      "path": "17"
    },
    "6888": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21771,
        21802
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6890": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21771,
        21802
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6891": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21771,
        21802
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6892": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21771,
        21802
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6893": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21771,
        21790
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "6895": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21771,
        21802
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "6897": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21771,
        21802
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6898": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21771,
        21802
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6900": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21771,
        21802
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6901": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21771,
        21802
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "6902": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21771,
        21812
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD15"
    },
    "6905": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21771,
        21812
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6906": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21806,
        21811
      ],
      "op": "DUP5",
      "path": "17"
    },
    "6907": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "offset": [
        21771,
        21805
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2135"
    },
    "6910": {
      "fn": "OperatorFilterRegistry.filteredCodeHashAt",
      "jump": "i",
      "offset": [
        21771,
        21812
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6911": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12689,
        13985
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6912": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12781,
        12791
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6913": {
      "offset": [
        1679,
        1689
      ],
      "op": "CALLER",
      "path": "17"
    },
    "6914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6918": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6920": {
      "op": "SHL"
    },
    "6921": {
      "op": "SUB"
    },
    "6922": {
      "offset": [
        1679,
        1697
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6923": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1679,
        1697
      ],
      "op": "AND",
      "path": "17"
    },
    "6924": {
      "branch": 156,
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1679,
        1697
      ],
      "op": "EQ",
      "path": "17"
    },
    "6925": {
      "offset": [
        1675,
        2239
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1BC3"
    },
    "6928": {
      "branch": 156,
      "offset": [
        1675,
        2239
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6929": {
      "offset": [
        1725,
        1729
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6936": {
      "op": "SHL"
    },
    "6937": {
      "op": "SUB"
    },
    "6938": {
      "offset": [
        1717,
        1736
      ],
      "op": "AND",
      "path": "17"
    },
    "6939": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1736
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8DA5CB5B"
    },
    "6944": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6946": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6947": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6948": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "6953": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "6954": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "6956": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SHL",
      "path": "17"
    },
    "6957": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6958": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6959": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "6961": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "6962": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "6964": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6966": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6967": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6968": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP4",
      "path": "17"
    },
    "6969": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SUB",
      "path": "17"
    },
    "6970": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6971": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP7",
      "path": "17"
    },
    "6972": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "GAS",
      "path": "17"
    },
    "6973": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "6974": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "6975": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "6976": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "6977": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "POP",
      "path": "17"
    },
    "6978": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6979": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "6980": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B6A"
    },
    "6983": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6984": {
      "op": "POP"
    },
    "6985": {
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6987": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6988": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6989": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "6991": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "6992": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6993": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6994": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "6995": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6997": {
      "op": "NOT"
    },
    "6998": {
      "offset": [
        1717,
        1738
      ],
      "op": "AND",
      "path": "17"
    },
    "6999": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7000": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "7001": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7002": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "7003": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7004": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B67"
    },
    "7007": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "7008": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7009": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "ADD",
      "path": "17"
    },
    "7010": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7011": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x25F5"
    },
    "7014": {
      "fn": "OperatorFilterRegistry.subscribe",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7015": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7016": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "7018": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7019": {
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B98"
    },
    "7022": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7023": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "7024": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7025": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7026": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "7027": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x43C"
    },
    "7030": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7031": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7033": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7034": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "7035": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "POP",
      "path": "17"
    },
    "7036": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "7038": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "NOT",
      "path": "17"
    },
    "7039": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3F"
    },
    "7041": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "7042": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "7043": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "AND",
      "path": "17"
    },
    "7044": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7045": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "7046": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7048": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7049": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "7050": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7051": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7052": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "7053": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7055": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "7057": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "DUP5",
      "path": "17"
    },
    "7058": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "ADD",
      "path": "17"
    },
    "7059": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "7060": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x441"
    },
    "7063": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7064": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7065": {
      "offset": [
        1785,
        1795
      ],
      "op": "CALLER",
      "path": "17"
    },
    "7066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7072": {
      "op": "SHL"
    },
    "7073": {
      "op": "SUB"
    },
    "7074": {
      "offset": [
        1785,
        1804
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7075": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1785,
        1804
      ],
      "op": "AND",
      "path": "17"
    },
    "7076": {
      "branch": 157,
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1785,
        1804
      ],
      "op": "EQ",
      "path": "17"
    },
    "7077": {
      "offset": [
        1781,
        1874
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1BC1"
    },
    "7080": {
      "branch": 157,
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7081": {
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7083": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7084": {
      "op": "PUSH4",
      "value": "0x1F9EBDFF"
    },
    "7089": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "7091": {
      "op": "SHL"
    },
    "7092": {
      "offset": [
        1835,
        1855
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7093": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7094": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "7096": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "ADD",
      "path": "17"
    },
    "7097": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7099": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7100": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7101": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "7102": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "SUB",
      "path": "17"
    },
    "7103": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7104": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        1835,
        1855
      ],
      "op": "REVERT",
      "path": "17"
    },
    "7105": {
      "offset": [
        1781,
        1874
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7106": {
      "offset": [
        1739,
        1888
      ],
      "op": "POP",
      "path": "17"
    },
    "7107": {
      "offset": [
        1713,
        2229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7108": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12821,
        12836
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 75
    },
    "7109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7115": {
      "op": "SHL"
    },
    "7116": {
      "op": "SUB"
    },
    "7117": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12807,
        12836
      ],
      "op": "AND",
      "path": "17"
    },
    "7118": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12807,
        12817
      ],
      "op": "DUP4",
      "path": "17"
    },
    "7119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7125": {
      "op": "SHL"
    },
    "7126": {
      "op": "SUB"
    },
    "7127": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12807,
        12836
      ],
      "op": "AND",
      "path": "17"
    },
    "7128": {
      "branch": 158,
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12807,
        12836
      ],
      "op": "SUB",
      "path": "17"
    },
    "7129": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12803,
        12893
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1BF5"
    },
    "7132": {
      "branch": 158,
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12803,
        12893
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7133": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12859,
        12882
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7135": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12859,
        12882
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7136": {
      "op": "PUSH4",
      "value": "0x347F118F"
    },
    "7141": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7143": {
      "op": "SHL"
    },
    "7144": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12859,
        12882
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7145": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12859,
        12882
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7146": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12859,
        12882
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "7148": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12859,
        12882
      ],
      "op": "ADD",
      "path": "17"
    },
    "7149": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12859,
        12882
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7151": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12859,
        12882
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7152": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12859,
        12882
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7153": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12859,
        12882
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "7154": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12859,
        12882
      ],
      "op": "SUB",
      "path": "17"
    },
    "7155": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12859,
        12882
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7156": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12859,
        12882
      ],
      "op": "REVERT",
      "path": "17"
    },
    "7157": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12803,
        12893
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7162": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7164": {
      "op": "SHL"
    },
    "7165": {
      "op": "SUB"
    },
    "7166": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12906,
        12935
      ],
      "op": "DUP3",
      "path": "17",
      "statement": 76
    },
    "7167": {
      "branch": 159,
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12906,
        12935
      ],
      "op": "AND",
      "path": "17"
    },
    "7168": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12902,
        12999
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1C1C"
    },
    "7171": {
      "branch": 159,
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12902,
        12999
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7172": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12958,
        12988
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7174": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12958,
        12988
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7175": {
      "op": "PUSH4",
      "value": "0xB05574D3"
    },
    "7180": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7182": {
      "op": "SHL"
    },
    "7183": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12958,
        12988
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7184": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12958,
        12988
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7185": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12958,
        12988
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "7187": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12958,
        12988
      ],
      "op": "ADD",
      "path": "17"
    },
    "7188": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12958,
        12988
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7190": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12958,
        12988
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7191": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12958,
        12988
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7192": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12958,
        12988
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "7193": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12958,
        12988
      ],
      "op": "SUB",
      "path": "17"
    },
    "7194": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12958,
        12988
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7195": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12958,
        12988
      ],
      "op": "REVERT",
      "path": "17"
    },
    "7196": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12902,
        12999
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7203": {
      "op": "SHL"
    },
    "7204": {
      "op": "SUB"
    },
    "7205": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13031,
        13057
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7206": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13031,
        13057
      ],
      "op": "DUP5",
      "path": "17"
    },
    "7207": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13031,
        13057
      ],
      "op": "AND",
      "path": "17"
    },
    "7208": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13008,
        13028
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7210": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13031,
        13057
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7211": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13031,
        13057
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7212": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13031,
        13057
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7213": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13031,
        13045
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "7215": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13031,
        13057
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "7217": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13031,
        13057
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7218": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13031,
        13057
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7220": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13031,
        13057
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7221": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13031,
        13057
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "7222": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13031,
        13057
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7223": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13031,
        13057
      ],
      "op": "AND",
      "path": "17"
    },
    "7224": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13031,
        13057
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7225": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13067,
        13156
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 77,
      "value": "0x1C60"
    },
    "7228": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13067,
        13156
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7229": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13120,
        13145
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7231": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13120,
        13145
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7232": {
      "op": "PUSH4",
      "value": "0xBFC6C337"
    },
    "7237": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7239": {
      "op": "SHL"
    },
    "7240": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13120,
        13145
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7241": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13120,
        13145
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7248": {
      "op": "SHL"
    },
    "7249": {
      "op": "SUB"
    },
    "7250": {
      "op": "DUP6"
    },
    "7251": {
      "op": "AND"
    },
    "7252": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13120,
        13145
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "7254": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13120,
        13145
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7255": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13120,
        13145
      ],
      "op": "ADD",
      "path": "17"
    },
    "7256": {
      "op": "MSTORE"
    },
    "7257": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7259": {
      "op": "ADD"
    },
    "7260": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13120,
        13145
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "7263": {
      "op": "JUMP"
    },
    "7264": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13067,
        13156
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7265": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13185,
        13200
      ],
      "op": "DUP3",
      "path": "17",
      "statement": 78
    },
    "7266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7272": {
      "op": "SHL"
    },
    "7273": {
      "op": "SUB"
    },
    "7274": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13169,
        13200
      ],
      "op": "AND",
      "path": "17"
    },
    "7275": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13169,
        13181
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7282": {
      "op": "SHL"
    },
    "7283": {
      "op": "SUB"
    },
    "7284": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13169,
        13200
      ],
      "op": "AND",
      "path": "17"
    },
    "7285": {
      "branch": 160,
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13169,
        13200
      ],
      "op": "SUB",
      "path": "17"
    },
    "7286": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13165,
        13268
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1C9D"
    },
    "7289": {
      "branch": 160,
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13165,
        13268
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7290": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13223,
        13257
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7292": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13223,
        13257
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7293": {
      "op": "PUSH4",
      "value": "0x73A41649"
    },
    "7298": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7300": {
      "op": "SHL"
    },
    "7301": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13223,
        13257
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7302": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13223,
        13257
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7309": {
      "op": "SHL"
    },
    "7310": {
      "op": "SUB"
    },
    "7311": {
      "op": "DUP5"
    },
    "7312": {
      "op": "AND"
    },
    "7313": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13223,
        13257
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "7315": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13223,
        13257
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7316": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13223,
        13257
      ],
      "op": "ADD",
      "path": "17"
    },
    "7317": {
      "op": "MSTORE"
    },
    "7318": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7320": {
      "op": "ADD"
    },
    "7321": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13223,
        13257
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "7324": {
      "op": "JUMP"
    },
    "7325": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13165,
        13268
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7332": {
      "op": "SHL"
    },
    "7333": {
      "op": "SUB"
    },
    "7334": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13315,
        13346
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7335": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13315,
        13346
      ],
      "op": "DUP5",
      "path": "17"
    },
    "7336": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13315,
        13346
      ],
      "op": "AND",
      "path": "17"
    },
    "7337": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13277,
        13312
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7339": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13315,
        13346
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7340": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13315,
        13346
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7341": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13315,
        13346
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7342": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13315,
        13329
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "7344": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13315,
        13346
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "7346": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13315,
        13346
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7347": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13315,
        13346
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7349": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13315,
        13346
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7350": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13315,
        13346
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "7351": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13315,
        13346
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7352": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13315,
        13346
      ],
      "op": "AND",
      "path": "17"
    },
    "7353": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13315,
        13346
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7354": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13356,
        13465
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 79,
      "value": "0x1CE1"
    },
    "7357": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13356,
        13465
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7358": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13424,
        13454
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7360": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13424,
        13454
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7361": {
      "op": "PUSH4",
      "value": "0xBFC6C337"
    },
    "7366": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7368": {
      "op": "SHL"
    },
    "7369": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13424,
        13454
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7370": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13424,
        13454
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7377": {
      "op": "SHL"
    },
    "7378": {
      "op": "SUB"
    },
    "7379": {
      "op": "DUP6"
    },
    "7380": {
      "op": "AND"
    },
    "7381": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13424,
        13454
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "7383": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13424,
        13454
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7384": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13424,
        13454
      ],
      "op": "ADD",
      "path": "17"
    },
    "7385": {
      "op": "MSTORE"
    },
    "7386": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7388": {
      "op": "ADD"
    },
    "7389": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13424,
        13454
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "7392": {
      "op": "JUMP"
    },
    "7393": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13356,
        13465
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7394": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13509,
        13524
      ],
      "op": "DUP4",
      "path": "17",
      "statement": 80
    },
    "7395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7401": {
      "op": "SHL"
    },
    "7402": {
      "op": "SUB"
    },
    "7403": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13478,
        13524
      ],
      "op": "AND",
      "path": "17"
    },
    "7404": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13478,
        13505
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7411": {
      "op": "SHL"
    },
    "7412": {
      "op": "SUB"
    },
    "7413": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13478,
        13524
      ],
      "op": "AND",
      "path": "17"
    },
    "7414": {
      "branch": 161,
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13478,
        13524
      ],
      "op": "EQ",
      "path": "17"
    },
    "7415": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13474,
        13618
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1D1E"
    },
    "7418": {
      "branch": 161,
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13474,
        13618
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7419": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13547,
        13607
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7421": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13547,
        13607
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7422": {
      "op": "PUSH4",
      "value": "0x1DA39527"
    },
    "7427": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "7429": {
      "op": "SHL"
    },
    "7430": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13547,
        13607
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7431": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13547,
        13607
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7438": {
      "op": "SHL"
    },
    "7439": {
      "op": "SUB"
    },
    "7440": {
      "op": "DUP6"
    },
    "7441": {
      "op": "AND"
    },
    "7442": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13547,
        13607
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "7444": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13547,
        13607
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7445": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13547,
        13607
      ],
      "op": "ADD",
      "path": "17"
    },
    "7446": {
      "op": "MSTORE"
    },
    "7447": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7449": {
      "op": "ADD"
    },
    "7450": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13547,
        13607
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "7453": {
      "op": "JUMP"
    },
    "7454": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13474,
        13618
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7455": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13648,
        13658
      ],
      "op": "DUP5",
      "path": "17"
    },
    "7456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7462": {
      "op": "SHL"
    },
    "7463": {
      "op": "SUB"
    },
    "7464": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13632,
        13658
      ],
      "op": "AND",
      "path": "17"
    },
    "7465": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13632,
        13644
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7472": {
      "op": "SHL"
    },
    "7473": {
      "op": "SUB"
    },
    "7474": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13632,
        13658
      ],
      "op": "AND",
      "path": "17"
    },
    "7475": {
      "branch": 162,
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13632,
        13658
      ],
      "op": "EQ",
      "path": "17"
    },
    "7476": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13628,
        13801
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1D84"
    },
    "7479": {
      "branch": 162,
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13628,
        13801
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7486": {
      "op": "SHL"
    },
    "7487": {
      "op": "SUB"
    },
    "7488": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13674,
        13700
      ],
      "op": "DUP3",
      "path": "17",
      "statement": 81
    },
    "7489": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13674,
        13700
      ],
      "op": "AND",
      "path": "17"
    },
    "7490": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13674,
        13700
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7492": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13674,
        13700
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7493": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13674,
        13700
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7494": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13674,
        13700
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7495": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13674,
        13686
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "7497": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13674,
        13700
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "7499": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13674,
        13700
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7500": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13674,
        13700
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7502": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13674,
        13700
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7503": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13674,
        13700
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "7504": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13674,
        13719
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1D59"
    },
    "7507": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13674,
        13719
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7508": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13708,
        13718
      ],
      "op": "DUP7",
      "path": "17"
    },
    "7509": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13674,
        13707
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2120"
    },
    "7512": {
      "fn": "OperatorFilterRegistry.subscribe",
      "jump": "i",
      "offset": [
        13674,
        13719
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7513": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13674,
        13719
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7514": {
      "op": "POP"
    },
    "7515": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13738,
        13790
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 82,
      "value": "0x40"
    },
    "7517": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13738,
        13790
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7518": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13784,
        13789
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7520": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13784,
        13789
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7527": {
      "op": "SHL"
    },
    "7528": {
      "op": "SUB"
    },
    "7529": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13738,
        13790
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7530": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13738,
        13790
      ],
      "op": "DUP6",
      "path": "17"
    },
    "7531": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13738,
        13790
      ],
      "op": "AND",
      "path": "17"
    },
    "7532": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13738,
        13790
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "7533": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13738,
        13790
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7534": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13738,
        13790
      ],
      "op": "DUP9",
      "path": "17"
    },
    "7535": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13738,
        13790
      ],
      "op": "AND",
      "path": "17"
    },
    "7536": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13738,
        13790
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7539": {
      "op": "DUP1"
    },
    "7540": {
      "op": "MLOAD"
    },
    "7541": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7543": {
      "op": "PUSH2",
      "value": "0x2707"
    },
    "7546": {
      "op": "DUP4"
    },
    "7547": {
      "op": "CODECOPY"
    },
    "7548": {
      "op": "DUP2"
    },
    "7549": {
      "op": "MLOAD"
    },
    "7550": {
      "op": "SWAP2"
    },
    "7551": {
      "op": "MSTORE"
    },
    "7552": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13738,
        13790
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7553": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13784,
        13789
      ],
      "op": "DUP5",
      "path": "17"
    },
    "7554": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13784,
        13789
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7555": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13738,
        13790
      ],
      "op": "LOG4",
      "path": "17"
    },
    "7556": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13628,
        13801
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7563": {
      "op": "SHL"
    },
    "7564": {
      "op": "SUB"
    },
    "7565": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13836
      ],
      "op": "DUP6",
      "path": "17",
      "statement": 83
    },
    "7566": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13836
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7567": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13836
      ],
      "op": "AND",
      "path": "17"
    },
    "7568": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13836
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7570": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13836
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7571": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13836
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7572": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13836
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7573": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13824
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "7575": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13836
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "7577": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13836
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7578": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13836
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7579": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13836
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7580": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13836
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7582": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13836
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7583": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13836
      ],
      "op": "DUP4",
      "path": "17"
    },
    "7584": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13836
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "7585": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13854
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7586": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13854
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7593": {
      "op": "SHL"
    },
    "7594": {
      "op": "SUB"
    },
    "7595": {
      "op": "NOT"
    },
    "7596": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13854
      ],
      "op": "AND",
      "path": "17"
    },
    "7597": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13854
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "7598": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13854
      ],
      "op": "DUP10",
      "path": "17"
    },
    "7599": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13854
      ],
      "op": "AND",
      "path": "17"
    },
    "7600": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13854
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "7601": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13854
      ],
      "op": "DUP6",
      "path": "17"
    },
    "7602": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13854
      ],
      "op": "OR",
      "path": "17"
    },
    "7603": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13854
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7604": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13854
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "7605": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13864,
        13893
      ],
      "op": "SWAP3",
      "path": "17",
      "statement": 84
    },
    "7606": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13864,
        13893
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7607": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13864,
        13893
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7608": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13864,
        13876
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "7610": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13864,
        13893
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7611": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13864,
        13893
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7612": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13864,
        13893
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "7613": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13864,
        13909
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DC6"
    },
    "7616": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13864,
        13909
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7617": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13810,
        13836
      ],
      "op": "DUP7",
      "path": "17"
    },
    "7618": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13864,
        13897
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2159"
    },
    "7621": {
      "fn": "OperatorFilterRegistry.subscribe",
      "jump": "i",
      "offset": [
        13864,
        13909
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7622": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13864,
        13909
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7623": {
      "op": "POP"
    },
    "7624": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13924,
        13978
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 85,
      "value": "0x40"
    },
    "7626": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13924,
        13978
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7627": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13973,
        13977
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "7629": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13973,
        13977
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7636": {
      "op": "SHL"
    },
    "7637": {
      "op": "SUB"
    },
    "7638": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13924,
        13978
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7639": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13924,
        13978
      ],
      "op": "DUP8",
      "path": "17"
    },
    "7640": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13924,
        13978
      ],
      "op": "AND",
      "path": "17"
    },
    "7641": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13924,
        13978
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "7642": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13924,
        13978
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7643": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13924,
        13978
      ],
      "op": "DUP9",
      "path": "17"
    },
    "7644": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13924,
        13978
      ],
      "op": "AND",
      "path": "17"
    },
    "7645": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13924,
        13978
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7648": {
      "op": "DUP1"
    },
    "7649": {
      "op": "MLOAD"
    },
    "7650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7652": {
      "op": "PUSH2",
      "value": "0x2707"
    },
    "7655": {
      "op": "DUP4"
    },
    "7656": {
      "op": "CODECOPY"
    },
    "7657": {
      "op": "DUP2"
    },
    "7658": {
      "op": "MLOAD"
    },
    "7659": {
      "op": "SWAP2"
    },
    "7660": {
      "op": "MSTORE"
    },
    "7661": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13924,
        13978
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7662": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13924,
        13978
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7664": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13924,
        13978
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7665": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        13924,
        13978
      ],
      "op": "LOG4",
      "path": "17"
    },
    "7666": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12793,
        13985
      ],
      "op": "POP",
      "path": "17"
    },
    "7667": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12793,
        13985
      ],
      "op": "POP",
      "path": "17"
    },
    "7668": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12689,
        13985
      ],
      "op": "POP",
      "path": "17"
    },
    "7669": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12689,
        13985
      ],
      "op": "POP",
      "path": "17"
    },
    "7670": {
      "fn": "OperatorFilterRegistry.subscribe",
      "offset": [
        12689,
        13985
      ],
      "op": "POP",
      "path": "17"
    },
    "7671": {
      "fn": "OperatorFilterRegistry.subscribe",
      "jump": "o",
      "offset": [
        12689,
        13985
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7672": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19821,
        20145
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7679": {
      "op": "SHL"
    },
    "7680": {
      "op": "SUB"
    },
    "7681": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19942,
        19968
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7682": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19942,
        19968
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7683": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19942,
        19968
      ],
      "op": "AND",
      "path": "17"
    },
    "7684": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19919,
        19939
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7686": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19942,
        19968
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7687": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19942,
        19968
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7688": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19942,
        19968
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7689": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19942,
        19956
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "7691": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19942,
        19968
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "7693": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19942,
        19968
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7694": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19942,
        19968
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7696": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19942,
        19968
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7697": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19942,
        19968
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "7698": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19942,
        19968
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7699": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19891,
        19907
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "7701": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19891,
        19907
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "7702": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19942,
        19968
      ],
      "op": "AND",
      "path": "17"
    },
    "7703": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19942,
        19968
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7704": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19982,
        20008
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7705": {
      "branch": 163,
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19982,
        20008
      ],
      "op": "EQ",
      "path": "17"
    },
    "7706": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19978,
        20083
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E3E"
    },
    "7709": {
      "branch": 163,
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19978,
        20083
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7716": {
      "op": "SHL"
    },
    "7717": {
      "op": "SUB"
    },
    "7718": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20031,
        20063
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 86
    },
    "7719": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20031,
        20063
      ],
      "op": "AND",
      "path": "17"
    },
    "7720": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20031,
        20049
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7722": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20031,
        20063
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7723": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20031,
        20063
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7724": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20031,
        20063
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7725": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20031,
        20063
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "7727": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20031,
        20063
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7728": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20031,
        20063
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7729": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20031,
        20063
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7730": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20031,
        20063
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7732": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20031,
        20063
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7733": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20031,
        20063
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "7734": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20031,
        20072
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8AF"
    },
    "7737": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20031,
        20072
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7738": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20031,
        20070
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2113"
    },
    "7741": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "jump": "i",
      "offset": [
        20031,
        20072
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7742": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        19978,
        20083
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7749": {
      "op": "SHL"
    },
    "7750": {
      "op": "SUB"
    },
    "7751": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20099,
        20129
      ],
      "op": "DUP4",
      "path": "17",
      "statement": 87
    },
    "7752": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20099,
        20129
      ],
      "op": "AND",
      "path": "17"
    },
    "7753": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20099,
        20117
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7755": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20099,
        20129
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7756": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20099,
        20129
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7757": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20099,
        20129
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7758": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20099,
        20129
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "7760": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20099,
        20129
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7761": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20099,
        20129
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7762": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20099,
        20129
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7763": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20099,
        20129
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7765": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20099,
        20129
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7766": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20099,
        20129
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "7767": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20099,
        20138
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8AF"
    },
    "7770": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20099,
        20138
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7771": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "offset": [
        20099,
        20136
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2113"
    },
    "7774": {
      "fn": "OperatorFilterRegistry.filteredOperators",
      "jump": "i",
      "offset": [
        20099,
        20138
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7775": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2467,
        3359
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7782": {
      "op": "SHL"
    },
    "7783": {
      "op": "SUB"
    },
    "7784": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2594,
        2620
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7785": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2594,
        2620
      ],
      "op": "DUP4",
      "path": "17"
    },
    "7786": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2594,
        2620
      ],
      "op": "AND",
      "path": "17"
    },
    "7787": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2555,
        2559
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7789": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2594,
        2620
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7790": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2594,
        2620
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7791": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2594,
        2620
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7792": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2594,
        2608
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "7794": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2594,
        2620
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "7796": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2594,
        2620
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7797": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2594,
        2620
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7799": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2594,
        2620
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7800": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2594,
        2620
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "7801": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2594,
        2620
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7802": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2555,
        2559
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7803": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2555,
        2559
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "7804": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2594,
        2620
      ],
      "op": "AND",
      "path": "17"
    },
    "7805": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2634,
        2660
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7806": {
      "branch": 164,
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2634,
        2660
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "7807": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2630,
        3332
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1F30"
    },
    "7810": {
      "branch": 164,
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2630,
        3332
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7817": {
      "op": "SHL"
    },
    "7818": {
      "op": "SUB"
    },
    "7819": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2835,
        2867
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 88
    },
    "7820": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2835,
        2867
      ],
      "op": "AND",
      "path": "17"
    },
    "7821": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2676,
        2729
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7823": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2835,
        2867
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7824": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2835,
        2867
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7825": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2835,
        2867
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7826": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2835,
        2867
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "7828": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2835,
        2867
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7829": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2835,
        2867
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7830": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2835,
        2867
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7831": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2835,
        2867
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7833": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2835,
        2867
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7834": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2835,
        2867
      ],
      "op": "DUP4",
      "path": "17"
    },
    "7835": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2835,
        2867
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "7836": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2905,
        2924
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 89,
      "value": "0x1"
    },
    "7838": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2905,
        2938
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7839": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2905,
        2938
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "7840": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2905,
        2938
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7841": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2905,
        2938
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7842": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2905,
        2938
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "7843": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2905,
        2938
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "7844": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2957,
        2996
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 90,
      "value": "0x1EAD"
    },
    "7847": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2835,
        2867
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7848": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2987,
        2995
      ],
      "op": "DUP7",
      "path": "17"
    },
    "7849": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2957,
        2986
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x216E"
    },
    "7852": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "jump": "i",
      "offset": [
        2957,
        2996
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7853": {
      "branch": 165,
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2957,
        2996
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7854": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2953,
        3063
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "7855": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2953,
        3063
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1ED6"
    },
    "7858": {
      "branch": 165,
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2953,
        3063
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7859": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3023,
        3048
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7861": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3023,
        3048
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7862": {
      "op": "PUSH4",
      "value": "0xA8CF495D"
    },
    "7867": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7869": {
      "op": "SHL"
    },
    "7870": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3023,
        3048
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7871": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3023,
        3048
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7878": {
      "op": "SHL"
    },
    "7879": {
      "op": "SUB"
    },
    "7880": {
      "op": "DUP7"
    },
    "7881": {
      "op": "AND"
    },
    "7882": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3023,
        3048
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "7884": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3023,
        3048
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7885": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3023,
        3048
      ],
      "op": "ADD",
      "path": "17"
    },
    "7886": {
      "op": "MSTORE"
    },
    "7887": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7889": {
      "op": "ADD"
    },
    "7890": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3023,
        3048
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "7893": {
      "op": "JUMP"
    },
    "7894": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2953,
        3063
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7899": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7901": {
      "op": "SHL"
    },
    "7902": {
      "op": "SUB"
    },
    "7903": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3080,
        3100
      ],
      "op": "DUP6",
      "path": "17"
    },
    "7904": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3080,
        3100
      ],
      "op": "AND",
      "path": "17"
    },
    "7905": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3080,
        3100
      ],
      "op": "EXTCODESIZE",
      "path": "17"
    },
    "7906": {
      "branch": 166,
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3080,
        3104
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "7907": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3076,
        3322
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1F2D"
    },
    "7910": {
      "branch": 166,
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3076,
        3322
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7915": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7917": {
      "op": "SHL"
    },
    "7918": {
      "op": "SUB"
    },
    "7919": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3143,
        3160
      ],
      "op": "DUP6",
      "path": "17"
    },
    "7920": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3143,
        3160
      ],
      "op": "AND",
      "path": "17"
    },
    "7921": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3143,
        3160
      ],
      "op": "EXTCODEHASH",
      "path": "17"
    },
    "7922": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3182,
        3222
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 91,
      "value": "0x1EFB"
    },
    "7925": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3182,
        3203
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7926": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3143,
        3160
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7927": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3182,
        3212
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2141"
    },
    "7930": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "jump": "i",
      "offset": [
        3182,
        3222
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7931": {
      "branch": 167,
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3182,
        3222
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7932": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3178,
        3308
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "7933": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3178,
        3308
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1F2B"
    },
    "7936": {
      "branch": 167,
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3178,
        3308
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7937": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3253,
        3289
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7939": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3253,
        3289
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7940": {
      "op": "PUSH4",
      "value": "0x5F3853A9"
    },
    "7945": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7947": {
      "op": "SHL"
    },
    "7948": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3253,
        3289
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7949": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3253,
        3289
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7956": {
      "op": "SHL"
    },
    "7957": {
      "op": "SUB"
    },
    "7958": {
      "op": "DUP8"
    },
    "7959": {
      "op": "AND"
    },
    "7960": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3253,
        3289
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "7962": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3253,
        3289
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7963": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3253,
        3289
      ],
      "op": "ADD",
      "path": "17"
    },
    "7964": {
      "op": "MSTORE"
    },
    "7965": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7967": {
      "op": "DUP2"
    },
    "7968": {
      "op": "ADD"
    },
    "7969": {
      "op": "DUP3"
    },
    "7970": {
      "op": "SWAP1"
    },
    "7971": {
      "op": "MSTORE"
    },
    "7972": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7974": {
      "op": "ADD"
    },
    "7975": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3253,
        3289
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "7978": {
      "op": "JUMP"
    },
    "7979": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3178,
        3308
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7980": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3106,
        3322
      ],
      "op": "POP",
      "path": "17"
    },
    "7981": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3076,
        3322
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7982": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2662,
        3332
      ],
      "op": "POP",
      "path": "17"
    },
    "7983": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2662,
        3332
      ],
      "op": "POP",
      "path": "17"
    },
    "7984": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2630,
        3332
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7985": {
      "op": "POP"
    },
    "7986": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3348,
        3352
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 92,
      "value": "0x1"
    },
    "7988": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        3348,
        3352
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "7989": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "offset": [
        2467,
        3359
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "7990": {
      "op": "POP"
    },
    "7991": {
      "op": "POP"
    },
    "7992": {
      "op": "POP"
    },
    "7993": {
      "fn": "OperatorFilterRegistry.isOperatorAllowed",
      "jump": "o",
      "offset": [
        2467,
        3359
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7994": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18120,
        18471
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8001": {
      "op": "SHL"
    },
    "8002": {
      "op": "SUB"
    },
    "8003": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18248,
        18274
      ],
      "op": "DUP1",
      "path": "17"
    },
    "8004": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18248,
        18274
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8005": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18248,
        18274
      ],
      "op": "AND",
      "path": "17"
    },
    "8006": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18209,
        18213
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8008": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18248,
        18274
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8009": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18248,
        18274
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8010": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18248,
        18274
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8011": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18248,
        18262
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "8013": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18248,
        18274
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "8015": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18248,
        18274
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8016": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18248,
        18274
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "8018": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18248,
        18274
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8019": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18248,
        18274
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "8020": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18248,
        18274
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8021": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18209,
        18213
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8022": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18209,
        18213
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "8023": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18248,
        18274
      ],
      "op": "AND",
      "path": "17"
    },
    "8024": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18248,
        18274
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8025": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18288,
        18314
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8026": {
      "branch": 168,
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18288,
        18314
      ],
      "op": "EQ",
      "path": "17"
    },
    "8027": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18284,
        18399
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1F80"
    },
    "8030": {
      "branch": 168,
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18284,
        18399
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8037": {
      "op": "SHL"
    },
    "8038": {
      "op": "SUB"
    },
    "8039": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18337,
        18369
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 93
    },
    "8040": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18337,
        18369
      ],
      "op": "AND",
      "path": "17"
    },
    "8041": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18337,
        18355
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8043": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18337,
        18369
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8044": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18337,
        18369
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8045": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18337,
        18369
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8046": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18337,
        18369
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "8048": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18337,
        18369
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8049": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18337,
        18369
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8050": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18337,
        18369
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8051": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18337,
        18369
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "8053": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18337,
        18369
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8054": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18337,
        18369
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "8055": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18337,
        18388
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCEB"
    },
    "8058": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18337,
        18388
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8059": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18379,
        18387
      ],
      "op": "DUP5",
      "path": "17"
    },
    "8060": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18337,
        18378
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x216E"
    },
    "8063": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "jump": "i",
      "offset": [
        18337,
        18388
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8064": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18284,
        18399
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8071": {
      "op": "SHL"
    },
    "8072": {
      "op": "SUB"
    },
    "8073": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18415,
        18445
      ],
      "op": "DUP5",
      "path": "17",
      "statement": 94
    },
    "8074": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18415,
        18445
      ],
      "op": "AND",
      "path": "17"
    },
    "8075": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18415,
        18433
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8077": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18415,
        18445
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8078": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18415,
        18445
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8079": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18415,
        18445
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8080": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18415,
        18445
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "8082": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18415,
        18445
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8083": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18415,
        18445
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8084": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18415,
        18445
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8085": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18415,
        18445
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "8087": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18415,
        18445
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8088": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18415,
        18445
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "8089": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18415,
        18464
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD15"
    },
    "8092": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18415,
        18464
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8093": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18455,
        18463
      ],
      "op": "DUP5",
      "path": "17"
    },
    "8094": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "offset": [
        18415,
        18454
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x216E"
    },
    "8097": {
      "fn": "OperatorFilterRegistry.isOperatorFiltered",
      "jump": "i",
      "offset": [
        18415,
        18464
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8098": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6202,
        6331
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8099": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6275,
        6279
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8101": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6298,
        6324
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 95,
      "value": "0x8AF"
    },
    "8104": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6306,
        6309
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8105": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6318,
        6323
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8106": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6298,
        6305
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2190"
    },
    "8109": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        6298,
        6324
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8110": {
      "fn": "EnumerableSet.add",
      "offset": [
        5911,
        6034
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8111": {
      "fn": "EnumerableSet.add",
      "offset": [
        5981,
        5985
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8113": {
      "fn": "EnumerableSet.add",
      "offset": [
        6004,
        6027
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 96,
      "value": "0x8AF"
    },
    "8116": {
      "fn": "EnumerableSet.add",
      "offset": [
        6009,
        6012
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8117": {
      "fn": "EnumerableSet.add",
      "offset": [
        6021,
        6026
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8118": {
      "fn": "EnumerableSet.add",
      "offset": [
        6004,
        6008
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2283"
    },
    "8121": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        6004,
        6027
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8122": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15709,
        16853
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8129": {
      "op": "SHL"
    },
    "8130": {
      "op": "SUB"
    },
    "8131": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15851,
        15887
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8132": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15851,
        15887
      ],
      "op": "AND",
      "path": "17"
    },
    "8133": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15795,
        15848
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8135": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15851,
        15887
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8136": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15851,
        15887
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8137": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15851,
        15887
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8138": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15851,
        15887
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "8140": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15851,
        15887
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8141": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15851,
        15887
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8142": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15851,
        15887
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8143": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15851,
        15887
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "8145": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15851,
        15887
      ],
      "op": "DUP1",
      "path": "17"
    },
    "8146": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15851,
        15887
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8147": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15851,
        15887
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "8148": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15954,
        15973
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "8150": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15954,
        15991
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8151": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15954,
        15991
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "8152": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15954,
        15991
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8153": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15954,
        15991
      ],
      "op": "DUP3",
      "path": "17"
    },
    "8154": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15954,
        15991
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "8155": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15851,
        15887
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8156": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15851,
        15887
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8157": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16035,
        16064
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1FE5"
    },
    "8160": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15851,
        15887
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8161": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16035,
        16062
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x22D2"
    },
    "8164": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "jump": "i",
      "offset": [
        16035,
        16064
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8165": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16035,
        16064
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8166": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16001,
        16064
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8167": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16001,
        16064
      ],
      "op": "POP",
      "path": "17"
    },
    "8168": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16074,
        16106
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8170": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16109,
        16139
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1FF2"
    },
    "8173": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16109,
        16130
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8174": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16109,
        16137
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x22D2"
    },
    "8177": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "jump": "i",
      "offset": [
        16109,
        16139
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8178": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16109,
        16139
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8179": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16074,
        16139
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8180": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16074,
        16139
      ],
      "op": "POP",
      "path": "17"
    },
    "8181": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16178,
        16187
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8183": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16173,
        16497
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8184": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16197,
        16220
      ],
      "op": "DUP3",
      "path": "17"
    },
    "8185": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16193,
        16194
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8186": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16193,
        16220
      ],
      "op": "LT",
      "path": "17"
    },
    "8187": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16173,
        16497
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8188": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16173,
        16497
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2080"
    },
    "8191": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16173,
        16497
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8192": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16245,
        16261
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8194": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16264,
        16290
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x200B"
    },
    "8197": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16264,
        16284
      ],
      "op": "DUP7",
      "path": "17"
    },
    "8198": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16288,
        16289
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8199": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16264,
        16287
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2135"
    },
    "8202": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "jump": "i",
      "offset": [
        16264,
        16290
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8203": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16264,
        16290
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8210": {
      "op": "SHL"
    },
    "8211": {
      "op": "SUB"
    },
    "8212": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16321,
        16351
      ],
      "op": "DUP10",
      "path": "17"
    },
    "8213": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16321,
        16351
      ],
      "op": "AND",
      "path": "17"
    },
    "8214": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16308,
        16318
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8216": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16321,
        16351
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8217": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16321,
        16351
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8218": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16321,
        16351
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8219": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16321,
        16351
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "8221": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16321,
        16351
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8222": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16321,
        16351
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8223": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16321,
        16351
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8224": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16321,
        16351
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "8226": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16321,
        16351
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8227": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16321,
        16351
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "8228": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16245,
        16290
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8229": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16245,
        16290
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "8230": {
      "op": "POP"
    },
    "8231": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16308,
        16318
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8232": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16321,
        16365
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2031"
    },
    "8235": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16321,
        16365
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8236": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16245,
        16290
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8237": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16321,
        16355
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2159"
    },
    "8240": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "jump": "i",
      "offset": [
        16321,
        16365
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8241": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16321,
        16365
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8242": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16308,
        16365
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8243": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16308,
        16365
      ],
      "op": "POP",
      "path": "17"
    },
    "8244": {
      "branch": 169,
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16387,
        16392
      ],
      "op": "DUP1",
      "path": "17"
    },
    "8245": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16383,
        16483
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8246": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16383,
        16483
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2076"
    },
    "8249": {
      "branch": 169,
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16383,
        16483
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8250": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16421,
        16464
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 97,
      "value": "0x40"
    },
    "8252": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16421,
        16464
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "8253": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16459,
        16463
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "8255": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16459,
        16463
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8262": {
      "op": "SHL"
    },
    "8263": {
      "op": "SUB"
    },
    "8264": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16421,
        16464
      ],
      "op": "DUP1",
      "path": "17"
    },
    "8265": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16421,
        16464
      ],
      "op": "DUP6",
      "path": "17"
    },
    "8266": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16421,
        16464
      ],
      "op": "AND",
      "path": "17"
    },
    "8267": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16421,
        16464
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8268": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16421,
        16464
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8269": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16421,
        16464
      ],
      "op": "DUP13",
      "path": "17"
    },
    "8270": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16421,
        16464
      ],
      "op": "AND",
      "path": "17"
    },
    "8271": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16421,
        16464
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8272": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16421,
        16464
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x2738289D9DEECDC30EB8FFC42876633CAECCA1FFA166E4EFA89F408E17373A1A"
    },
    "8305": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16421,
        16464
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8306": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16421,
        16464
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8308": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16421,
        16464
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8309": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16421,
        16464
      ],
      "op": "LOG4",
      "path": "17"
    },
    "8310": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16383,
        16483
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8311": {
      "op": "POP"
    },
    "8312": {
      "op": "POP"
    },
    "8313": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16222,
        16225
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 98,
      "value": "0x1"
    },
    "8315": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16222,
        16225
      ],
      "op": "ADD",
      "path": "17"
    },
    "8316": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16173,
        16497
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1FF7"
    },
    "8319": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16173,
        16497
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8320": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16173,
        16497
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8321": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16173,
        16497
      ],
      "op": "POP",
      "path": "17"
    },
    "8322": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16515,
        16524
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8324": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16510,
        16837
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8325": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16534,
        16558
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8326": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16530,
        16531
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8327": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16530,
        16558
      ],
      "op": "LT",
      "path": "17"
    },
    "8328": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16510,
        16837
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8329": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16510,
        16837
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x210A"
    },
    "8332": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16510,
        16837
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8333": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16583,
        16599
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8335": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16602,
        16629
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2098"
    },
    "8338": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16602,
        16623
      ],
      "op": "DUP6",
      "path": "17"
    },
    "8339": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16627,
        16628
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8340": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16602,
        16626
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2135"
    },
    "8343": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "jump": "i",
      "offset": [
        16602,
        16629
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8344": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16602,
        16629
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8351": {
      "op": "SHL"
    },
    "8352": {
      "op": "SUB"
    },
    "8353": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16660,
        16691
      ],
      "op": "DUP10",
      "path": "17"
    },
    "8354": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16660,
        16691
      ],
      "op": "AND",
      "path": "17"
    },
    "8355": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16647,
        16657
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8357": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16660,
        16691
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8358": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16660,
        16691
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8359": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16660,
        16691
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8360": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16660,
        16679
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "8362": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16660,
        16691
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "8364": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16660,
        16691
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8365": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16660,
        16691
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "8367": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16660,
        16691
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8368": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16660,
        16691
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "8369": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16583,
        16629
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8370": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16583,
        16629
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "8371": {
      "op": "POP"
    },
    "8372": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16647,
        16657
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8373": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16660,
        16705
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x20BE"
    },
    "8376": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16660,
        16705
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8377": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16583,
        16629
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8378": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16660,
        16695
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1FAE"
    },
    "8381": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "jump": "i",
      "offset": [
        16660,
        16705
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8382": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16660,
        16705
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8383": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16647,
        16705
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8384": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16647,
        16705
      ],
      "op": "POP",
      "path": "17"
    },
    "8385": {
      "branch": 170,
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16727,
        16732
      ],
      "op": "DUP1",
      "path": "17"
    },
    "8386": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16723,
        16823
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8387": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16723,
        16823
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2100"
    },
    "8390": {
      "branch": 170,
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16723,
        16823
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8391": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16761,
        16804
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 99,
      "value": "0x40"
    },
    "8393": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16761,
        16804
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "8394": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16799,
        16803
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "8396": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16799,
        16803
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8397": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16789,
        16797
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8398": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16789,
        16797
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8405": {
      "op": "SHL"
    },
    "8406": {
      "op": "SUB"
    },
    "8407": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16761,
        16804
      ],
      "op": "DUP13",
      "path": "17"
    },
    "8408": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16761,
        16804
      ],
      "op": "AND",
      "path": "17"
    },
    "8409": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16761,
        16804
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8410": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16761,
        16804
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0xB8036058BAFEA884AABC446CA15619FD86F5464A4AD96F64164AD6F77444354D"
    },
    "8443": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16761,
        16804
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8444": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16761,
        16804
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8446": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16761,
        16804
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8447": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16761,
        16804
      ],
      "op": "LOG4",
      "path": "17"
    },
    "8448": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16723,
        16823
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8449": {
      "op": "POP"
    },
    "8450": {
      "op": "POP"
    },
    "8451": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16560,
        16563
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 100,
      "value": "0x1"
    },
    "8453": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16560,
        16563
      ],
      "op": "ADD",
      "path": "17"
    },
    "8454": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16510,
        16837
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2084"
    },
    "8457": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16510,
        16837
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8458": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16510,
        16837
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8459": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        16510,
        16837
      ],
      "op": "POP",
      "path": "17"
    },
    "8460": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15785,
        16853
      ],
      "op": "POP",
      "path": "17"
    },
    "8461": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15785,
        16853
      ],
      "op": "POP",
      "path": "17"
    },
    "8462": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15785,
        16853
      ],
      "op": "POP",
      "path": "17"
    },
    "8463": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15785,
        16853
      ],
      "op": "POP",
      "path": "17"
    },
    "8464": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15709,
        16853
      ],
      "op": "POP",
      "path": "17"
    },
    "8465": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "offset": [
        15709,
        16853
      ],
      "op": "POP",
      "path": "17"
    },
    "8466": {
      "fn": "OperatorFilterRegistry._copyEntries",
      "jump": "o",
      "offset": [
        15709,
        16853
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8467": {
      "fn": "EnumerableSet.values",
      "offset": [
        7757,
        8057
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8468": {
      "fn": "EnumerableSet.values",
      "offset": [
        7820,
        7836
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "8470": {
      "fn": "EnumerableSet.values",
      "offset": [
        7848,
        7870
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8472": {
      "fn": "EnumerableSet.values",
      "offset": [
        7873,
        7892
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8AF"
    },
    "8475": {
      "fn": "EnumerableSet.values",
      "offset": [
        7881,
        7884
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8476": {
      "fn": "EnumerableSet.values",
      "offset": [
        7873,
        7880
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x22DC"
    },
    "8479": {
      "fn": "EnumerableSet.values",
      "jump": "i",
      "offset": [
        7873,
        7892
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8480": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8615,
        8771
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8481": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8688,
        8692
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8483": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8711,
        8764
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 101,
      "value": "0x8AF"
    },
    "8486": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8719,
        8722
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8493": {
      "op": "SHL"
    },
    "8494": {
      "op": "SUB"
    },
    "8495": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8739,
        8762
      ],
      "op": "DUP5",
      "path": "13"
    },
    "8496": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8739,
        8762
      ],
      "op": "AND",
      "path": "13"
    },
    "8497": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8711,
        8718
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2190"
    },
    "8500": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        8711,
        8764
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8501": {
      "fn": "EnumerableSet.at",
      "offset": [
        9555,
        9711
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8502": {
      "fn": "EnumerableSet.at",
      "offset": [
        9629,
        9636
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8504": {
      "fn": "EnumerableSet.at",
      "offset": [
        9679,
        9701
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 102,
      "value": "0x8AF"
    },
    "8507": {
      "fn": "EnumerableSet.at",
      "offset": [
        9683,
        9686
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8508": {
      "fn": "EnumerableSet.at",
      "offset": [
        9695,
        9700
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8509": {
      "fn": "EnumerableSet.at",
      "offset": [
        9679,
        9682
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2338"
    },
    "8512": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        9679,
        9701
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8513": {
      "fn": "EnumerableSet.contains",
      "offset": [
        6412,
        6550
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8514": {
      "fn": "EnumerableSet.contains",
      "offset": [
        6492,
        6496
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8516": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 103
    },
    "8517": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8518": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8519": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4355
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8521": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4355
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8522": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4355
      ],
      "op": "ADD",
      "path": "13"
    },
    "8523": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8525": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8526": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8528": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8529": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "8530": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8531": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4367
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8532": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4367
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8533": {
      "fn": "EnumerableSet.contains",
      "offset": [
        6515,
        6543
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 104,
      "value": "0x8AF"
    },
    "8536": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4247,
        4374
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8537": {
      "fn": "EnumerableSet.add",
      "offset": [
        8297,
        8447
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8538": {
      "fn": "EnumerableSet.add",
      "offset": [
        8367,
        8371
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8540": {
      "fn": "EnumerableSet.add",
      "offset": [
        8390,
        8440
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 105,
      "value": "0x8AF"
    },
    "8543": {
      "fn": "EnumerableSet.add",
      "offset": [
        8395,
        8398
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8550": {
      "op": "SHL"
    },
    "8551": {
      "op": "SUB"
    },
    "8552": {
      "fn": "EnumerableSet.add",
      "offset": [
        8415,
        8438
      ],
      "op": "DUP5",
      "path": "13"
    },
    "8553": {
      "fn": "EnumerableSet.add",
      "offset": [
        8415,
        8438
      ],
      "op": "AND",
      "path": "13"
    },
    "8554": {
      "fn": "EnumerableSet.add",
      "offset": [
        8390,
        8394
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2283"
    },
    "8557": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        8390,
        8440
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8558": {
      "fn": "EnumerableSet.contains",
      "offset": [
        8852,
        9017
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8563": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8565": {
      "op": "SHL"
    },
    "8566": {
      "op": "SUB"
    },
    "8567": {
      "fn": "EnumerableSet.contains",
      "offset": [
        8985,
        9008
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 106
    },
    "8568": {
      "fn": "EnumerableSet.contains",
      "offset": [
        8985,
        9008
      ],
      "op": "AND",
      "path": "13"
    },
    "8569": {
      "fn": "EnumerableSet.contains",
      "offset": [
        8932,
        8936
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8571": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8572": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8573": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8574": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4355
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8576": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4355
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8577": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4355
      ],
      "op": "ADD",
      "path": "13"
    },
    "8578": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8580": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8581": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8583": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8584": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "8585": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8586": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4367
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8587": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4367
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8588": {
      "fn": "EnumerableSet.contains",
      "offset": [
        8955,
        9010
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8AF"
    },
    "8591": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4247,
        4374
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8592": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2778,
        4166
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8593": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2844,
        2848
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8595": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2981,
        3000
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8596": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2981,
        3000
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8597": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2981,
        3000
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8598": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2981,
        2993
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8600": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2981,
        2993
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8601": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2981,
        2993
      ],
      "op": "ADD",
      "path": "13"
    },
    "8602": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2981,
        3000
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8604": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2981,
        3000
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8605": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2981,
        3000
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8607": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2981,
        3000
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8608": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2981,
        3000
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "8609": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2981,
        3000
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8610": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3015,
        3030
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8611": {
      "branch": 171,
      "fn": "EnumerableSet._remove",
      "offset": [
        3015,
        3030
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8612": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3011,
        4160
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2279"
    },
    "8615": {
      "branch": 171,
      "fn": "EnumerableSet._remove",
      "offset": [
        3011,
        4160
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8616": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3384,
        3405
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8618": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3408,
        3422
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x21B4"
    },
    "8621": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3421,
        3422
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8623": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3408,
        3418
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8624": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3408,
        3422
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x26AF"
    },
    "8627": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        3408,
        3422
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8628": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3408,
        3422
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8629": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3456,
        3474
      ],
      "op": "DUP6",
      "path": "13"
    },
    "8630": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3456,
        3474
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8631": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3384,
        3422
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8632": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3384,
        3422
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "8633": {
      "op": "POP"
    },
    "8634": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3436,
        3453
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8636": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3436,
        3453
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8637": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3456,
        3478
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x21C8"
    },
    "8640": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3456,
        3478
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8641": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3477,
        3478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8643": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3477,
        3478
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8644": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3456,
        3478
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x26AF"
    },
    "8647": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        3456,
        3478
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8648": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3456,
        3478
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8649": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3436,
        3478
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8650": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3436,
        3478
      ],
      "op": "POP",
      "path": "13"
    },
    "8651": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3510,
        3523
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8652": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3497,
        3506
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8653": {
      "branch": 172,
      "fn": "EnumerableSet._remove",
      "offset": [
        3497,
        3523
      ],
      "op": "EQ",
      "path": "13"
    },
    "8654": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3493,
        3891
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x222D"
    },
    "8657": {
      "branch": 172,
      "fn": "EnumerableSet._remove",
      "offset": [
        3493,
        3891
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8658": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3543,
        3560
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8660": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3563,
        3566
      ],
      "op": "DUP7",
      "path": "13"
    },
    "8661": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3563,
        3574
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8663": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3563,
        3574
      ],
      "op": "ADD",
      "path": "13"
    },
    "8664": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3575,
        3584
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8665": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3563,
        3585
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8666": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3563,
        3585
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8667": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3563,
        3585
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8668": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3563,
        3585
      ],
      "op": "LT",
      "path": "13"
    },
    "8669": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3563,
        3585
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x21E8"
    },
    "8672": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3563,
        3585
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8673": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3563,
        3585
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x21E8"
    },
    "8676": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3563,
        3585
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2612"
    },
    "8679": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        3563,
        3585
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8680": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3563,
        3585
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8681": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3563,
        3585
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8682": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3563,
        3585
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8684": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3563,
        3585
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8685": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3563,
        3585
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8687": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3563,
        3585
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8689": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3563,
        3585
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "8690": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3563,
        3585
      ],
      "op": "ADD",
      "path": "13"
    },
    "8691": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3563,
        3585
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8692": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3543,
        3585
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8693": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3543,
        3585
      ],
      "op": "POP",
      "path": "13"
    },
    "8694": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3714,
        3723
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 107
    },
    "8695": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3688
      ],
      "op": "DUP8",
      "path": "13"
    },
    "8696": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3696
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8698": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3696
      ],
      "op": "ADD",
      "path": "13"
    },
    "8699": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3697,
        3710
      ],
      "op": "DUP5",
      "path": "13"
    },
    "8700": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3711
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8701": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3711
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8702": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3711
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8703": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3711
      ],
      "op": "LT",
      "path": "13"
    },
    "8704": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3711
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x220B"
    },
    "8707": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3711
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8708": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3711
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x220B"
    },
    "8711": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3711
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2612"
    },
    "8714": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        3685,
        3711
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8715": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3711
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8716": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3711
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8718": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3711
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "8719": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3711
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8720": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3711
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8721": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3711
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8723": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3711
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8724": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3711
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8725": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3711
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "8726": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3711
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8727": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3711
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "8728": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3711
      ],
      "op": "ADD",
      "path": "13"
    },
    "8729": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3723
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "8730": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3723
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8731": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3723
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "8732": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3685,
        3723
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "8733": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3797,
        3820
      ],
      "op": "SWAP2",
      "path": "13",
      "statement": 108
    },
    "8734": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3797,
        3820
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8735": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3797,
        3820
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8736": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3797,
        3809
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8738": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3797,
        3809
      ],
      "op": "DUP9",
      "path": "13"
    },
    "8739": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3797,
        3809
      ],
      "op": "ADD",
      "path": "13"
    },
    "8740": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3797,
        3820
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8741": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3797,
        3820
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8742": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3797,
        3820
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8744": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3797,
        3820
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8745": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3797,
        3820
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "8746": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3797,
        3833
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8747": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3797,
        3833
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8748": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3797,
        3833
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "8749": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3493,
        3891
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8750": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "DUP6",
      "path": "13",
      "statement": 109
    },
    "8751": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8752": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3972
      ],
      "op": "DUP7",
      "path": "13"
    },
    "8753": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3972
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8754": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8755": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x223E"
    },
    "8758": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8759": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x223E"
    },
    "8762": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x26D0"
    },
    "8765": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        3969,
        3986
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8766": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8767": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8769": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8770": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "SUB",
      "path": "13"
    },
    "8771": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8772": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8773": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8774": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8776": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8777": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8779": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8781": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "8782": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "ADD",
      "path": "13"
    },
    "8783": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8785": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8786": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "8787": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8788": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3969,
        3986
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "8789": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4061,
        4064
      ],
      "op": "DUP6",
      "path": "13",
      "statement": 110
    },
    "8790": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4061,
        4073
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8792": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4061,
        4073
      ],
      "op": "ADD",
      "path": "13"
    },
    "8793": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4061,
        4080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8795": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4074,
        4079
      ],
      "op": "DUP7",
      "path": "13"
    },
    "8796": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4061,
        4080
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8797": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4061,
        4080
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8798": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4061,
        4080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8800": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4061,
        4080
      ],
      "op": "ADD",
      "path": "13"
    },
    "8801": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4061,
        4080
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8802": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4061,
        4080
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8803": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4061,
        4080
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8804": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4061,
        4080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8806": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4061,
        4080
      ],
      "op": "ADD",
      "path": "13"
    },
    "8807": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4061,
        4080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8809": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4061,
        4080
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "8810": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4054,
        4080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8812": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4054,
        4080
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8813": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4054,
        4080
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "8814": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4102,
        4106
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 111,
      "value": "0x1"
    },
    "8816": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4095,
        4106
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "8817": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4095,
        4106
      ],
      "op": "POP",
      "path": "13"
    },
    "8818": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4095,
        4106
      ],
      "op": "POP",
      "path": "13"
    },
    "8819": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4095,
        4106
      ],
      "op": "POP",
      "path": "13"
    },
    "8820": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4095,
        4106
      ],
      "op": "POP",
      "path": "13"
    },
    "8821": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4095,
        4106
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD19"
    },
    "8824": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4095,
        4106
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8825": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3011,
        4160
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8826": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4144,
        4149
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 112,
      "value": "0x0"
    },
    "8828": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4137,
        4149
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "8829": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4137,
        4149
      ],
      "op": "POP",
      "path": "13"
    },
    "8830": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4137,
        4149
      ],
      "op": "POP",
      "path": "13"
    },
    "8831": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4137,
        4149
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD19"
    },
    "8834": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4137,
        4149
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8835": {
      "fn": "EnumerableSet._add",
      "offset": [
        2206,
        2610
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8836": {
      "fn": "EnumerableSet._add",
      "offset": [
        2269,
        2273
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8838": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8839": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8840": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8841": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4355
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8843": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4355
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8844": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4355
      ],
      "op": "ADD",
      "path": "13"
    },
    "8845": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8847": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8848": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8850": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8851": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "8852": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4343,
        4362
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8853": {
      "fn": "EnumerableSet._add",
      "offset": [
        2285,
        2604
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x22CA"
    },
    "8856": {
      "fn": "EnumerableSet._add",
      "offset": [
        2285,
        2604
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8857": {
      "op": "POP"
    },
    "8858": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 113
    },
    "8859": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8860": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8862": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8863": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8864": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "ADD",
      "path": "13"
    },
    "8865": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "DUP5",
      "path": "13"
    },
    "8866": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "8867": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2338
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8869": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "DUP5",
      "path": "13"
    },
    "8870": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8871": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8872": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8874": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8875": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8876": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "8877": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8878": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "8879": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "ADD",
      "path": "13"
    },
    "8880": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "DUP5",
      "path": "13"
    },
    "8881": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8882": {
      "fn": "EnumerableSet._add",
      "offset": [
        2327,
        2350
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "8883": {
      "fn": "EnumerableSet._add",
      "offset": [
        2507,
        2525
      ],
      "op": "DUP5",
      "path": "13",
      "statement": 114
    },
    "8884": {
      "fn": "EnumerableSet._add",
      "offset": [
        2507,
        2525
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8885": {
      "fn": "EnumerableSet._add",
      "offset": [
        2485,
        2504
      ],
      "op": "DUP5",
      "path": "13"
    },
    "8886": {
      "fn": "EnumerableSet._add",
      "offset": [
        2485,
        2504
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8887": {
      "fn": "EnumerableSet._add",
      "offset": [
        2485,
        2504
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8888": {
      "fn": "EnumerableSet._add",
      "offset": [
        2485,
        2497
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8889": {
      "fn": "EnumerableSet._add",
      "offset": [
        2485,
        2497
      ],
      "op": "DUP7",
      "path": "13"
    },
    "8890": {
      "fn": "EnumerableSet._add",
      "offset": [
        2485,
        2497
      ],
      "op": "ADD",
      "path": "13"
    },
    "8891": {
      "fn": "EnumerableSet._add",
      "offset": [
        2485,
        2504
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8892": {
      "fn": "EnumerableSet._add",
      "offset": [
        2485,
        2504
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "8893": {
      "fn": "EnumerableSet._add",
      "offset": [
        2485,
        2504
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8894": {
      "fn": "EnumerableSet._add",
      "offset": [
        2485,
        2504
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8896": {
      "fn": "EnumerableSet._add",
      "offset": [
        2485,
        2504
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8897": {
      "fn": "EnumerableSet._add",
      "offset": [
        2485,
        2504
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "8898": {
      "fn": "EnumerableSet._add",
      "offset": [
        2485,
        2525
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "8899": {
      "fn": "EnumerableSet._add",
      "offset": [
        2485,
        2525
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8900": {
      "fn": "EnumerableSet._add",
      "offset": [
        2485,
        2525
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "8901": {
      "fn": "EnumerableSet._add",
      "offset": [
        2485,
        2525
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "8902": {
      "fn": "EnumerableSet._add",
      "offset": [
        2539,
        2550
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 115,
      "value": "0xD19"
    },
    "8905": {
      "fn": "EnumerableSet._add",
      "offset": [
        2539,
        2550
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8906": {
      "fn": "EnumerableSet._add",
      "offset": [
        2285,
        2604
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8907": {
      "op": "POP"
    },
    "8908": {
      "fn": "EnumerableSet._add",
      "offset": [
        2588,
        2593
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 116,
      "value": "0x0"
    },
    "8910": {
      "fn": "EnumerableSet._add",
      "offset": [
        2581,
        2593
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD19"
    },
    "8913": {
      "fn": "EnumerableSet._add",
      "offset": [
        2581,
        2593
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8914": {
      "fn": "EnumerableSet.length",
      "offset": [
        9098,
        9213
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8915": {
      "fn": "EnumerableSet.length",
      "offset": [
        9161,
        9168
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8917": {
      "fn": "EnumerableSet.length",
      "offset": [
        9187,
        9206
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 117,
      "value": "0xD19"
    },
    "8920": {
      "fn": "EnumerableSet.length",
      "offset": [
        9195,
        9198
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8921": {
      "fn": "EnumerableSet._length",
      "offset": [
        4537,
        4555
      ],
      "op": "SLOAD",
      "path": "13",
      "statement": 118
    },
    "8922": {
      "fn": "EnumerableSet._length",
      "offset": [
        4537,
        4555
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8923": {
      "fn": "EnumerableSet._length",
      "offset": [
        4455,
        4562
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8924": {
      "fn": "EnumerableSet._values",
      "offset": [
        5562,
        5671
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8925": {
      "fn": "EnumerableSet._values",
      "offset": [
        5618,
        5634
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "8927": {
      "fn": "EnumerableSet._values",
      "offset": [
        5653,
        5656
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 119
    },
    "8928": {
      "fn": "EnumerableSet._values",
      "offset": [
        5653,
        5664
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8930": {
      "fn": "EnumerableSet._values",
      "offset": [
        5653,
        5664
      ],
      "op": "ADD",
      "path": "13"
    },
    "8931": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8932": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8933": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8934": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8936": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "MUL",
      "path": "13"
    },
    "8937": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8939": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "ADD",
      "path": "13"
    },
    "8940": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8942": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "8943": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8944": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8945": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "ADD",
      "path": "13"
    },
    "8946": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8948": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8949": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8950": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "8951": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "8952": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8953": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8954": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8955": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8956": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8958": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "ADD",
      "path": "13"
    },
    "8959": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8960": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8961": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8962": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8963": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8964": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x232C"
    },
    "8967": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8968": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8970": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "MUL",
      "path": "13"
    },
    "8971": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8972": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "ADD",
      "path": "13"
    },
    "8973": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "8974": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8975": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8977": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8978": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8980": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8982": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "8983": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8984": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8985": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8986": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8987": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8988": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8989": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8991": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "ADD",
      "path": "13"
    },
    "8992": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8993": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8995": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "ADD",
      "path": "13"
    },
    "8996": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8997": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8998": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8999": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "GT",
      "path": "13"
    },
    "9000": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2318"
    },
    "9003": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "9004": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9005": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "POP",
      "path": "13"
    },
    "9006": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "POP",
      "path": "13"
    },
    "9007": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "POP",
      "path": "13"
    },
    "9008": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "POP",
      "path": "13"
    },
    "9009": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "POP",
      "path": "13"
    },
    "9010": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "9011": {
      "fn": "EnumerableSet._values",
      "offset": [
        5646,
        5664
      ],
      "op": "POP",
      "path": "13"
    },
    "9012": {
      "fn": "EnumerableSet._values",
      "offset": [
        5562,
        5671
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "9013": {
      "fn": "EnumerableSet._values",
      "offset": [
        5562,
        5671
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "9014": {
      "fn": "EnumerableSet._values",
      "offset": [
        5562,
        5671
      ],
      "op": "POP",
      "path": "13"
    },
    "9015": {
      "fn": "EnumerableSet._values",
      "jump": "o",
      "offset": [
        5562,
        5671
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9016": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        5022
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9017": {
      "fn": "EnumerableSet._at",
      "offset": [
        4971,
        4978
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "9019": {
      "fn": "EnumerableSet._at",
      "offset": [
        4997,
        5000
      ],
      "op": "DUP3",
      "path": "13",
      "statement": 120
    },
    "9020": {
      "fn": "EnumerableSet._at",
      "offset": [
        4997,
        5008
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "9022": {
      "fn": "EnumerableSet._at",
      "offset": [
        4997,
        5008
      ],
      "op": "ADD",
      "path": "13"
    },
    "9023": {
      "fn": "EnumerableSet._at",
      "offset": [
        5009,
        5014
      ],
      "op": "DUP3",
      "path": "13"
    },
    "9024": {
      "fn": "EnumerableSet._at",
      "offset": [
        4997,
        5015
      ],
      "op": "DUP2",
      "path": "13"
    },
    "9025": {
      "fn": "EnumerableSet._at",
      "offset": [
        4997,
        5015
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "9026": {
      "fn": "EnumerableSet._at",
      "offset": [
        4997,
        5015
      ],
      "op": "DUP2",
      "path": "13"
    },
    "9027": {
      "fn": "EnumerableSet._at",
      "offset": [
        4997,
        5015
      ],
      "op": "LT",
      "path": "13"
    },
    "9028": {
      "fn": "EnumerableSet._at",
      "offset": [
        4997,
        5015
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x234F"
    },
    "9031": {
      "fn": "EnumerableSet._at",
      "offset": [
        4997,
        5015
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "9032": {
      "fn": "EnumerableSet._at",
      "offset": [
        4997,
        5015
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x234F"
    },
    "9035": {
      "fn": "EnumerableSet._at",
      "offset": [
        4997,
        5015
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2612"
    },
    "9038": {
      "fn": "EnumerableSet._at",
      "jump": "i",
      "offset": [
        4997,
        5015
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9039": {
      "fn": "EnumerableSet._at",
      "offset": [
        4997,
        5015
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9040": {
      "fn": "EnumerableSet._at",
      "offset": [
        4997,
        5015
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "9041": {
      "fn": "EnumerableSet._at",
      "offset": [
        4997,
        5015
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "9043": {
      "fn": "EnumerableSet._at",
      "offset": [
        4997,
        5015
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "9044": {
      "fn": "EnumerableSet._at",
      "offset": [
        4997,
        5015
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "9046": {
      "fn": "EnumerableSet._at",
      "offset": [
        4997,
        5015
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "9048": {
      "fn": "EnumerableSet._at",
      "offset": [
        4997,
        5015
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "9049": {
      "fn": "EnumerableSet._at",
      "offset": [
        4997,
        5015
      ],
      "op": "ADD",
      "path": "13"
    },
    "9050": {
      "fn": "EnumerableSet._at",
      "offset": [
        4997,
        5015
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "9051": {
      "fn": "EnumerableSet._at",
      "offset": [
        4990,
        5015
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "9052": {
      "fn": "EnumerableSet._at",
      "offset": [
        4990,
        5015
      ],
      "op": "POP",
      "path": "13"
    },
    "9053": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        5022
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "9054": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        5022
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "9055": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        5022
      ],
      "op": "POP",
      "path": "13"
    },
    "9056": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        5022
      ],
      "op": "POP",
      "path": "13"
    },
    "9057": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4904,
        5022
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9058": {
      "op": "JUMPDEST"
    },
    "9059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9065": {
      "op": "SHL"
    },
    "9066": {
      "op": "SUB"
    },
    "9067": {
      "op": "DUP2"
    },
    "9068": {
      "op": "AND"
    },
    "9069": {
      "op": "DUP2"
    },
    "9070": {
      "op": "EQ"
    },
    "9071": {
      "op": "PUSH2",
      "value": "0x2377"
    },
    "9074": {
      "op": "JUMPI"
    },
    "9075": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9077": {
      "op": "DUP1"
    },
    "9078": {
      "op": "REVERT"
    },
    "9079": {
      "op": "JUMPDEST"
    },
    "9080": {
      "op": "POP"
    },
    "9081": {
      "jump": "o",
      "op": "JUMP"
    },
    "9082": {
      "op": "JUMPDEST"
    },
    "9083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9085": {
      "op": "DUP1"
    },
    "9086": {
      "op": "DUP4"
    },
    "9087": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9089": {
      "op": "DUP5"
    },
    "9090": {
      "op": "ADD"
    },
    "9091": {
      "op": "SLT"
    },
    "9092": {
      "op": "PUSH2",
      "value": "0x238C"
    },
    "9095": {
      "op": "JUMPI"
    },
    "9096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9098": {
      "op": "DUP1"
    },
    "9099": {
      "op": "REVERT"
    },
    "9100": {
      "op": "JUMPDEST"
    },
    "9101": {
      "op": "POP"
    },
    "9102": {
      "op": "DUP2"
    },
    "9103": {
      "op": "CALLDATALOAD"
    },
    "9104": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9113": {
      "op": "DUP2"
    },
    "9114": {
      "op": "GT"
    },
    "9115": {
      "op": "ISZERO"
    },
    "9116": {
      "op": "PUSH2",
      "value": "0x23A4"
    },
    "9119": {
      "op": "JUMPI"
    },
    "9120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9122": {
      "op": "DUP1"
    },
    "9123": {
      "op": "REVERT"
    },
    "9124": {
      "op": "JUMPDEST"
    },
    "9125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9127": {
      "op": "DUP4"
    },
    "9128": {
      "op": "ADD"
    },
    "9129": {
      "op": "SWAP2"
    },
    "9130": {
      "op": "POP"
    },
    "9131": {
      "op": "DUP4"
    },
    "9132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9134": {
      "op": "DUP3"
    },
    "9135": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9137": {
      "op": "SHL"
    },
    "9138": {
      "op": "DUP6"
    },
    "9139": {
      "op": "ADD"
    },
    "9140": {
      "op": "ADD"
    },
    "9141": {
      "op": "GT"
    },
    "9142": {
      "op": "ISZERO"
    },
    "9143": {
      "op": "PUSH2",
      "value": "0x23BF"
    },
    "9146": {
      "op": "JUMPI"
    },
    "9147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9149": {
      "op": "DUP1"
    },
    "9150": {
      "op": "REVERT"
    },
    "9151": {
      "op": "JUMPDEST"
    },
    "9152": {
      "op": "SWAP3"
    },
    "9153": {
      "op": "POP"
    },
    "9154": {
      "op": "SWAP3"
    },
    "9155": {
      "op": "SWAP1"
    },
    "9156": {
      "op": "POP"
    },
    "9157": {
      "jump": "o",
      "op": "JUMP"
    },
    "9158": {
      "op": "JUMPDEST"
    },
    "9159": {
      "op": "DUP1"
    },
    "9160": {
      "op": "CALLDATALOAD"
    },
    "9161": {
      "op": "DUP1"
    },
    "9162": {
      "op": "ISZERO"
    },
    "9163": {
      "op": "ISZERO"
    },
    "9164": {
      "op": "DUP2"
    },
    "9165": {
      "op": "EQ"
    },
    "9166": {
      "op": "PUSH2",
      "value": "0xCA0"
    },
    "9169": {
      "op": "JUMPI"
    },
    "9170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9172": {
      "op": "DUP1"
    },
    "9173": {
      "op": "REVERT"
    },
    "9174": {
      "op": "JUMPDEST"
    },
    "9175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9177": {
      "op": "DUP1"
    },
    "9178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9180": {
      "op": "DUP1"
    },
    "9181": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9183": {
      "op": "DUP6"
    },
    "9184": {
      "op": "DUP8"
    },
    "9185": {
      "op": "SUB"
    },
    "9186": {
      "op": "SLT"
    },
    "9187": {
      "op": "ISZERO"
    },
    "9188": {
      "op": "PUSH2",
      "value": "0x23EC"
    },
    "9191": {
      "op": "JUMPI"
    },
    "9192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9194": {
      "op": "DUP1"
    },
    "9195": {
      "op": "REVERT"
    },
    "9196": {
      "op": "JUMPDEST"
    },
    "9197": {
      "op": "DUP5"
    },
    "9198": {
      "op": "CALLDATALOAD"
    },
    "9199": {
      "op": "PUSH2",
      "value": "0x23F7"
    },
    "9202": {
      "op": "DUP2"
    },
    "9203": {
      "op": "PUSH2",
      "value": "0x2362"
    },
    "9206": {
      "jump": "i",
      "op": "JUMP"
    },
    "9207": {
      "op": "JUMPDEST"
    },
    "9208": {
      "op": "SWAP4"
    },
    "9209": {
      "op": "POP"
    },
    "9210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9212": {
      "op": "DUP6"
    },
    "9213": {
      "op": "ADD"
    },
    "9214": {
      "op": "CALLDATALOAD"
    },
    "9215": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9224": {
      "op": "DUP2"
    },
    "9225": {
      "op": "GT"
    },
    "9226": {
      "op": "ISZERO"
    },
    "9227": {
      "op": "PUSH2",
      "value": "0x2413"
    },
    "9230": {
      "op": "JUMPI"
    },
    "9231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9233": {
      "op": "DUP1"
    },
    "9234": {
      "op": "REVERT"
    },
    "9235": {
      "op": "JUMPDEST"
    },
    "9236": {
      "op": "PUSH2",
      "value": "0x241F"
    },
    "9239": {
      "op": "DUP8"
    },
    "9240": {
      "op": "DUP3"
    },
    "9241": {
      "op": "DUP9"
    },
    "9242": {
      "op": "ADD"
    },
    "9243": {
      "op": "PUSH2",
      "value": "0x237A"
    },
    "9246": {
      "jump": "i",
      "op": "JUMP"
    },
    "9247": {
      "op": "JUMPDEST"
    },
    "9248": {
      "op": "SWAP1"
    },
    "9249": {
      "op": "SWAP5"
    },
    "9250": {
      "op": "POP"
    },
    "9251": {
      "op": "SWAP3"
    },
    "9252": {
      "op": "POP"
    },
    "9253": {
      "op": "PUSH2",
      "value": "0x2432"
    },
    "9256": {
      "op": "SWAP1"
    },
    "9257": {
      "op": "POP"
    },
    "9258": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9260": {
      "op": "DUP7"
    },
    "9261": {
      "op": "ADD"
    },
    "9262": {
      "op": "PUSH2",
      "value": "0x23C6"
    },
    "9265": {
      "jump": "i",
      "op": "JUMP"
    },
    "9266": {
      "op": "JUMPDEST"
    },
    "9267": {
      "op": "SWAP1"
    },
    "9268": {
      "op": "POP"
    },
    "9269": {
      "op": "SWAP3"
    },
    "9270": {
      "op": "SWAP6"
    },
    "9271": {
      "op": "SWAP2"
    },
    "9272": {
      "op": "SWAP5"
    },
    "9273": {
      "op": "POP"
    },
    "9274": {
      "op": "SWAP3"
    },
    "9275": {
      "op": "POP"
    },
    "9276": {
      "jump": "o",
      "op": "JUMP"
    },
    "9277": {
      "op": "JUMPDEST"
    },
    "9278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9280": {
      "op": "DUP1"
    },
    "9281": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9283": {
      "op": "DUP4"
    },
    "9284": {
      "op": "DUP6"
    },
    "9285": {
      "op": "SUB"
    },
    "9286": {
      "op": "SLT"
    },
    "9287": {
      "op": "ISZERO"
    },
    "9288": {
      "op": "PUSH2",
      "value": "0x2450"
    },
    "9291": {
      "op": "JUMPI"
    },
    "9292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9294": {
      "op": "DUP1"
    },
    "9295": {
      "op": "REVERT"
    },
    "9296": {
      "op": "JUMPDEST"
    },
    "9297": {
      "op": "DUP3"
    },
    "9298": {
      "op": "CALLDATALOAD"
    },
    "9299": {
      "op": "PUSH2",
      "value": "0x245B"
    },
    "9302": {
      "op": "DUP2"
    },
    "9303": {
      "op": "PUSH2",
      "value": "0x2362"
    },
    "9306": {
      "jump": "i",
      "op": "JUMP"
    },
    "9307": {
      "op": "JUMPDEST"
    },
    "9308": {
      "op": "SWAP2"
    },
    "9309": {
      "op": "POP"
    },
    "9310": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9312": {
      "op": "DUP4"
    },
    "9313": {
      "op": "ADD"
    },
    "9314": {
      "op": "CALLDATALOAD"
    },
    "9315": {
      "op": "PUSH2",
      "value": "0x246B"
    },
    "9318": {
      "op": "DUP2"
    },
    "9319": {
      "op": "PUSH2",
      "value": "0x2362"
    },
    "9322": {
      "jump": "i",
      "op": "JUMP"
    },
    "9323": {
      "op": "JUMPDEST"
    },
    "9324": {
      "op": "DUP1"
    },
    "9325": {
      "op": "SWAP2"
    },
    "9326": {
      "op": "POP"
    },
    "9327": {
      "op": "POP"
    },
    "9328": {
      "op": "SWAP3"
    },
    "9329": {
      "op": "POP"
    },
    "9330": {
      "op": "SWAP3"
    },
    "9331": {
      "op": "SWAP1"
    },
    "9332": {
      "op": "POP"
    },
    "9333": {
      "jump": "o",
      "op": "JUMP"
    },
    "9334": {
      "op": "JUMPDEST"
    },
    "9335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9339": {
      "op": "DUP3"
    },
    "9340": {
      "op": "DUP5"
    },
    "9341": {
      "op": "SUB"
    },
    "9342": {
      "op": "SLT"
    },
    "9343": {
      "op": "ISZERO"
    },
    "9344": {
      "op": "PUSH2",
      "value": "0x2488"
    },
    "9347": {
      "op": "JUMPI"
    },
    "9348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9350": {
      "op": "DUP1"
    },
    "9351": {
      "op": "REVERT"
    },
    "9352": {
      "op": "JUMPDEST"
    },
    "9353": {
      "op": "DUP2"
    },
    "9354": {
      "op": "CALLDATALOAD"
    },
    "9355": {
      "op": "PUSH2",
      "value": "0x8AF"
    },
    "9358": {
      "op": "DUP2"
    },
    "9359": {
      "op": "PUSH2",
      "value": "0x2362"
    },
    "9362": {
      "jump": "i",
      "op": "JUMP"
    },
    "9363": {
      "op": "JUMPDEST"
    },
    "9364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9366": {
      "op": "DUP1"
    },
    "9367": {
      "op": "DUP3"
    },
    "9368": {
      "op": "MSTORE"
    },
    "9369": {
      "op": "DUP3"
    },
    "9370": {
      "op": "MLOAD"
    },
    "9371": {
      "op": "DUP3"
    },
    "9372": {
      "op": "DUP3"
    },
    "9373": {
      "op": "ADD"
    },
    "9374": {
      "op": "DUP2"
    },
    "9375": {
      "op": "SWAP1"
    },
    "9376": {
      "op": "MSTORE"
    },
    "9377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9379": {
      "op": "SWAP2"
    },
    "9380": {
      "op": "SWAP1"
    },
    "9381": {
      "op": "DUP5"
    },
    "9382": {
      "op": "DUP3"
    },
    "9383": {
      "op": "ADD"
    },
    "9384": {
      "op": "SWAP1"
    },
    "9385": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9387": {
      "op": "DUP6"
    },
    "9388": {
      "op": "ADD"
    },
    "9389": {
      "op": "SWAP1"
    },
    "9390": {
      "op": "DUP5"
    },
    "9391": {
      "op": "JUMPDEST"
    },
    "9392": {
      "op": "DUP2"
    },
    "9393": {
      "op": "DUP2"
    },
    "9394": {
      "op": "LT"
    },
    "9395": {
      "op": "ISZERO"
    },
    "9396": {
      "op": "PUSH2",
      "value": "0x24CB"
    },
    "9399": {
      "op": "JUMPI"
    },
    "9400": {
      "op": "DUP4"
    },
    "9401": {
      "op": "MLOAD"
    },
    "9402": {
      "op": "DUP4"
    },
    "9403": {
      "op": "MSTORE"
    },
    "9404": {
      "op": "SWAP3"
    },
    "9405": {
      "op": "DUP5"
    },
    "9406": {
      "op": "ADD"
    },
    "9407": {
      "op": "SWAP3"
    },
    "9408": {
      "op": "SWAP2"
    },
    "9409": {
      "op": "DUP5"
    },
    "9410": {
      "op": "ADD"
    },
    "9411": {
      "op": "SWAP2"
    },
    "9412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9414": {
      "op": "ADD"
    },
    "9415": {
      "op": "PUSH2",
      "value": "0x24AF"
    },
    "9418": {
      "op": "JUMP"
    },
    "9419": {
      "op": "JUMPDEST"
    },
    "9420": {
      "op": "POP"
    },
    "9421": {
      "op": "SWAP1"
    },
    "9422": {
      "op": "SWAP7"
    },
    "9423": {
      "op": "SWAP6"
    },
    "9424": {
      "op": "POP"
    },
    "9425": {
      "op": "POP"
    },
    "9426": {
      "op": "POP"
    },
    "9427": {
      "op": "POP"
    },
    "9428": {
      "op": "POP"
    },
    "9429": {
      "op": "POP"
    },
    "9430": {
      "jump": "o",
      "op": "JUMP"
    },
    "9431": {
      "op": "JUMPDEST"
    },
    "9432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9434": {
      "op": "DUP1"
    },
    "9435": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9437": {
      "op": "DUP4"
    },
    "9438": {
      "op": "DUP6"
    },
    "9439": {
      "op": "SUB"
    },
    "9440": {
      "op": "SLT"
    },
    "9441": {
      "op": "ISZERO"
    },
    "9442": {
      "op": "PUSH2",
      "value": "0x24EA"
    },
    "9445": {
      "op": "JUMPI"
    },
    "9446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9448": {
      "op": "DUP1"
    },
    "9449": {
      "op": "REVERT"
    },
    "9450": {
      "op": "JUMPDEST"
    },
    "9451": {
      "op": "DUP3"
    },
    "9452": {
      "op": "CALLDATALOAD"
    },
    "9453": {
      "op": "PUSH2",
      "value": "0x24F5"
    },
    "9456": {
      "op": "DUP2"
    },
    "9457": {
      "op": "PUSH2",
      "value": "0x2362"
    },
    "9460": {
      "jump": "i",
      "op": "JUMP"
    },
    "9461": {
      "op": "JUMPDEST"
    },
    "9462": {
      "op": "SWAP2"
    },
    "9463": {
      "op": "POP"
    },
    "9464": {
      "op": "PUSH2",
      "value": "0x2503"
    },
    "9467": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9469": {
      "op": "DUP5"
    },
    "9470": {
      "op": "ADD"
    },
    "9471": {
      "op": "PUSH2",
      "value": "0x23C6"
    },
    "9474": {
      "jump": "i",
      "op": "JUMP"
    },
    "9475": {
      "op": "JUMPDEST"
    },
    "9476": {
      "op": "SWAP1"
    },
    "9477": {
      "op": "POP"
    },
    "9478": {
      "op": "SWAP3"
    },
    "9479": {
      "op": "POP"
    },
    "9480": {
      "op": "SWAP3"
    },
    "9481": {
      "op": "SWAP1"
    },
    "9482": {
      "op": "POP"
    },
    "9483": {
      "jump": "o",
      "op": "JUMP"
    },
    "9484": {
      "op": "JUMPDEST"
    },
    "9485": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9487": {
      "op": "DUP1"
    },
    "9488": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9490": {
      "op": "DUP4"
    },
    "9491": {
      "op": "DUP6"
    },
    "9492": {
      "op": "SUB"
    },
    "9493": {
      "op": "SLT"
    },
    "9494": {
      "op": "ISZERO"
    },
    "9495": {
      "op": "PUSH2",
      "value": "0x251F"
    },
    "9498": {
      "op": "JUMPI"
    },
    "9499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9501": {
      "op": "DUP1"
    },
    "9502": {
      "op": "REVERT"
    },
    "9503": {
      "op": "JUMPDEST"
    },
    "9504": {
      "op": "DUP3"
    },
    "9505": {
      "op": "CALLDATALOAD"
    },
    "9506": {
      "op": "PUSH2",
      "value": "0x252A"
    },
    "9509": {
      "op": "DUP2"
    },
    "9510": {
      "op": "PUSH2",
      "value": "0x2362"
    },
    "9513": {
      "jump": "i",
      "op": "JUMP"
    },
    "9514": {
      "op": "JUMPDEST"
    },
    "9515": {
      "op": "SWAP5"
    },
    "9516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9518": {
      "op": "SWAP4"
    },
    "9519": {
      "op": "SWAP1"
    },
    "9520": {
      "op": "SWAP4"
    },
    "9521": {
      "op": "ADD"
    },
    "9522": {
      "op": "CALLDATALOAD"
    },
    "9523": {
      "op": "SWAP4"
    },
    "9524": {
      "op": "POP"
    },
    "9525": {
      "op": "POP"
    },
    "9526": {
      "op": "POP"
    },
    "9527": {
      "jump": "o",
      "op": "JUMP"
    },
    "9528": {
      "op": "JUMPDEST"
    },
    "9529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9531": {
      "op": "DUP1"
    },
    "9532": {
      "op": "DUP3"
    },
    "9533": {
      "op": "MSTORE"
    },
    "9534": {
      "op": "DUP3"
    },
    "9535": {
      "op": "MLOAD"
    },
    "9536": {
      "op": "DUP3"
    },
    "9537": {
      "op": "DUP3"
    },
    "9538": {
      "op": "ADD"
    },
    "9539": {
      "op": "DUP2"
    },
    "9540": {
      "op": "SWAP1"
    },
    "9541": {
      "op": "MSTORE"
    },
    "9542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9544": {
      "op": "SWAP2"
    },
    "9545": {
      "op": "SWAP1"
    },
    "9546": {
      "op": "DUP5"
    },
    "9547": {
      "op": "DUP3"
    },
    "9548": {
      "op": "ADD"
    },
    "9549": {
      "op": "SWAP1"
    },
    "9550": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9552": {
      "op": "DUP6"
    },
    "9553": {
      "op": "ADD"
    },
    "9554": {
      "op": "SWAP1"
    },
    "9555": {
      "op": "DUP5"
    },
    "9556": {
      "op": "JUMPDEST"
    },
    "9557": {
      "op": "DUP2"
    },
    "9558": {
      "op": "DUP2"
    },
    "9559": {
      "op": "LT"
    },
    "9560": {
      "op": "ISZERO"
    },
    "9561": {
      "op": "PUSH2",
      "value": "0x24CB"
    },
    "9564": {
      "op": "JUMPI"
    },
    "9565": {
      "op": "DUP4"
    },
    "9566": {
      "op": "MLOAD"
    },
    "9567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9573": {
      "op": "SHL"
    },
    "9574": {
      "op": "SUB"
    },
    "9575": {
      "op": "AND"
    },
    "9576": {
      "op": "DUP4"
    },
    "9577": {
      "op": "MSTORE"
    },
    "9578": {
      "op": "SWAP3"
    },
    "9579": {
      "op": "DUP5"
    },
    "9580": {
      "op": "ADD"
    },
    "9581": {
      "op": "SWAP3"
    },
    "9582": {
      "op": "SWAP2"
    },
    "9583": {
      "op": "DUP5"
    },
    "9584": {
      "op": "ADD"
    },
    "9585": {
      "op": "SWAP2"
    },
    "9586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9588": {
      "op": "ADD"
    },
    "9589": {
      "op": "PUSH2",
      "value": "0x2554"
    },
    "9592": {
      "op": "JUMP"
    },
    "9593": {
      "op": "JUMPDEST"
    },
    "9594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9596": {
      "op": "DUP1"
    },
    "9597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9599": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9601": {
      "op": "DUP5"
    },
    "9602": {
      "op": "DUP7"
    },
    "9603": {
      "op": "SUB"
    },
    "9604": {
      "op": "SLT"
    },
    "9605": {
      "op": "ISZERO"
    },
    "9606": {
      "op": "PUSH2",
      "value": "0x258E"
    },
    "9609": {
      "op": "JUMPI"
    },
    "9610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9612": {
      "op": "DUP1"
    },
    "9613": {
      "op": "REVERT"
    },
    "9614": {
      "op": "JUMPDEST"
    },
    "9615": {
      "op": "DUP4"
    },
    "9616": {
      "op": "CALLDATALOAD"
    },
    "9617": {
      "op": "PUSH2",
      "value": "0x2599"
    },
    "9620": {
      "op": "DUP2"
    },
    "9621": {
      "op": "PUSH2",
      "value": "0x2362"
    },
    "9624": {
      "jump": "i",
      "op": "JUMP"
    },
    "9625": {
      "op": "JUMPDEST"
    },
    "9626": {
      "op": "SWAP3"
    },
    "9627": {
      "op": "POP"
    },
    "9628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9630": {
      "op": "DUP5"
    },
    "9631": {
      "op": "ADD"
    },
    "9632": {
      "op": "CALLDATALOAD"
    },
    "9633": {
      "op": "SWAP2"
    },
    "9634": {
      "op": "POP"
    },
    "9635": {
      "op": "PUSH2",
      "value": "0x25AE"
    },
    "9638": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9640": {
      "op": "DUP6"
    },
    "9641": {
      "op": "ADD"
    },
    "9642": {
      "op": "PUSH2",
      "value": "0x23C6"
    },
    "9645": {
      "jump": "i",
      "op": "JUMP"
    },
    "9646": {
      "op": "JUMPDEST"
    },
    "9647": {
      "op": "SWAP1"
    },
    "9648": {
      "op": "POP"
    },
    "9649": {
      "op": "SWAP3"
    },
    "9650": {
      "op": "POP"
    },
    "9651": {
      "op": "SWAP3"
    },
    "9652": {
      "op": "POP"
    },
    "9653": {
      "op": "SWAP3"
    },
    "9654": {
      "jump": "o",
      "op": "JUMP"
    },
    "9655": {
      "op": "JUMPDEST"
    },
    "9656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9658": {
      "op": "DUP1"
    },
    "9659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9661": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9663": {
      "op": "DUP5"
    },
    "9664": {
      "op": "DUP7"
    },
    "9665": {
      "op": "SUB"
    },
    "9666": {
      "op": "SLT"
    },
    "9667": {
      "op": "ISZERO"
    },
    "9668": {
      "op": "PUSH2",
      "value": "0x25CC"
    },
    "9671": {
      "op": "JUMPI"
    },
    "9672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9674": {
      "op": "DUP1"
    },
    "9675": {
      "op": "REVERT"
    },
    "9676": {
      "op": "JUMPDEST"
    },
    "9677": {
      "op": "DUP4"
    },
    "9678": {
      "op": "CALLDATALOAD"
    },
    "9679": {
      "op": "PUSH2",
      "value": "0x25D7"
    },
    "9682": {
      "op": "DUP2"
    },
    "9683": {
      "op": "PUSH2",
      "value": "0x2362"
    },
    "9686": {
      "jump": "i",
      "op": "JUMP"
    },
    "9687": {
      "op": "JUMPDEST"
    },
    "9688": {
      "op": "SWAP3"
    },
    "9689": {
      "op": "POP"
    },
    "9690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9692": {
      "op": "DUP5"
    },
    "9693": {
      "op": "ADD"
    },
    "9694": {
      "op": "CALLDATALOAD"
    },
    "9695": {
      "op": "PUSH2",
      "value": "0x25E7"
    },
    "9698": {
      "op": "DUP2"
    },
    "9699": {
      "op": "PUSH2",
      "value": "0x2362"
    },
    "9702": {
      "jump": "i",
      "op": "JUMP"
    },
    "9703": {
      "op": "JUMPDEST"
    },
    "9704": {
      "op": "SWAP2"
    },
    "9705": {
      "op": "POP"
    },
    "9706": {
      "op": "PUSH2",
      "value": "0x25AE"
    },
    "9709": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9711": {
      "op": "DUP6"
    },
    "9712": {
      "op": "ADD"
    },
    "9713": {
      "op": "PUSH2",
      "value": "0x23C6"
    },
    "9716": {
      "jump": "i",
      "op": "JUMP"
    },
    "9717": {
      "op": "JUMPDEST"
    },
    "9718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9722": {
      "op": "DUP3"
    },
    "9723": {
      "op": "DUP5"
    },
    "9724": {
      "op": "SUB"
    },
    "9725": {
      "op": "SLT"
    },
    "9726": {
      "op": "ISZERO"
    },
    "9727": {
      "op": "PUSH2",
      "value": "0x2607"
    },
    "9730": {
      "op": "JUMPI"
    },
    "9731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9733": {
      "op": "DUP1"
    },
    "9734": {
      "op": "REVERT"
    },
    "9735": {
      "op": "JUMPDEST"
    },
    "9736": {
      "op": "DUP2"
    },
    "9737": {
      "op": "MLOAD"
    },
    "9738": {
      "op": "PUSH2",
      "value": "0x8AF"
    },
    "9741": {
      "op": "DUP2"
    },
    "9742": {
      "op": "PUSH2",
      "value": "0x2362"
    },
    "9745": {
      "jump": "i",
      "op": "JUMP"
    },
    "9746": {
      "op": "JUMPDEST"
    },
    "9747": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9752": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9754": {
      "op": "SHL"
    },
    "9755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9757": {
      "op": "MSTORE"
    },
    "9758": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "9760": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9762": {
      "op": "MSTORE"
    },
    "9763": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9767": {
      "op": "REVERT"
    },
    "9768": {
      "op": "JUMPDEST"
    },
    "9769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9771": {
      "op": "DUP1"
    },
    "9772": {
      "op": "DUP3"
    },
    "9773": {
      "op": "MSTORE"
    },
    "9774": {
      "op": "DUP2"
    },
    "9775": {
      "op": "ADD"
    },
    "9776": {
      "op": "DUP3"
    },
    "9777": {
      "op": "SWAP1"
    },
    "9778": {
      "op": "MSTORE"
    },
    "9779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9785": {
      "op": "PUSH1",
      "value": "0xFB"
    },
    "9787": {
      "op": "SHL"
    },
    "9788": {
      "op": "SUB"
    },
    "9789": {
      "op": "DUP4"
    },
    "9790": {
      "op": "GT"
    },
    "9791": {
      "op": "ISZERO"
    },
    "9792": {
      "op": "PUSH2",
      "value": "0x2648"
    },
    "9795": {
      "op": "JUMPI"
    },
    "9796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9798": {
      "op": "DUP1"
    },
    "9799": {
      "op": "REVERT"
    },
    "9800": {
      "op": "JUMPDEST"
    },
    "9801": {
      "op": "DUP3"
    },
    "9802": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9804": {
      "op": "SHL"
    },
    "9805": {
      "op": "DUP1"
    },
    "9806": {
      "op": "DUP6"
    },
    "9807": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9809": {
      "op": "DUP6"
    },
    "9810": {
      "op": "ADD"
    },
    "9811": {
      "op": "CALLDATACOPY"
    },
    "9812": {
      "op": "SWAP2"
    },
    "9813": {
      "op": "SWAP1"
    },
    "9814": {
      "op": "SWAP2"
    },
    "9815": {
      "op": "ADD"
    },
    "9816": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9818": {
      "op": "ADD"
    },
    "9819": {
      "op": "SWAP4"
    },
    "9820": {
      "op": "SWAP3"
    },
    "9821": {
      "op": "POP"
    },
    "9822": {
      "op": "POP"
    },
    "9823": {
      "op": "POP"
    },
    "9824": {
      "jump": "o",
      "op": "JUMP"
    },
    "9825": {
      "op": "JUMPDEST"
    },
    "9826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9828": {
      "op": "DUP1"
    },
    "9829": {
      "op": "DUP3"
    },
    "9830": {
      "op": "MSTORE"
    },
    "9831": {
      "op": "DUP2"
    },
    "9832": {
      "op": "DUP2"
    },
    "9833": {
      "op": "ADD"
    },
    "9834": {
      "op": "DUP4"
    },
    "9835": {
      "op": "SWAP1"
    },
    "9836": {
      "op": "MSTORE"
    },
    "9837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9839": {
      "op": "SWAP1"
    },
    "9840": {
      "op": "DUP5"
    },
    "9841": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9843": {
      "op": "DUP5"
    },
    "9844": {
      "op": "ADD"
    },
    "9845": {
      "op": "DUP4"
    },
    "9846": {
      "op": "JUMPDEST"
    },
    "9847": {
      "op": "DUP7"
    },
    "9848": {
      "op": "DUP2"
    },
    "9849": {
      "op": "LT"
    },
    "9850": {
      "op": "ISZERO"
    },
    "9851": {
      "op": "PUSH2",
      "value": "0x26A4"
    },
    "9854": {
      "op": "JUMPI"
    },
    "9855": {
      "op": "DUP3"
    },
    "9856": {
      "op": "CALLDATALOAD"
    },
    "9857": {
      "op": "PUSH2",
      "value": "0x2689"
    },
    "9860": {
      "op": "DUP2"
    },
    "9861": {
      "op": "PUSH2",
      "value": "0x2362"
    },
    "9864": {
      "jump": "i",
      "op": "JUMP"
    },
    "9865": {
      "op": "JUMPDEST"
    },
    "9866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9870": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9872": {
      "op": "SHL"
    },
    "9873": {
      "op": "SUB"
    },
    "9874": {
      "op": "AND"
    },
    "9875": {
      "op": "DUP3"
    },
    "9876": {
      "op": "MSTORE"
    },
    "9877": {
      "op": "SWAP2"
    },
    "9878": {
      "op": "DUP4"
    },
    "9879": {
      "op": "ADD"
    },
    "9880": {
      "op": "SWAP2"
    },
    "9881": {
      "op": "SWAP1"
    },
    "9882": {
      "op": "DUP4"
    },
    "9883": {
      "op": "ADD"
    },
    "9884": {
      "op": "SWAP1"
    },
    "9885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9887": {
      "op": "ADD"
    },
    "9888": {
      "op": "PUSH2",
      "value": "0x2676"
    },
    "9891": {
      "op": "JUMP"
    },
    "9892": {
      "op": "JUMPDEST"
    },
    "9893": {
      "op": "POP"
    },
    "9894": {
      "op": "SWAP7"
    },
    "9895": {
      "op": "SWAP6"
    },
    "9896": {
      "op": "POP"
    },
    "9897": {
      "op": "POP"
    },
    "9898": {
      "op": "POP"
    },
    "9899": {
      "op": "POP"
    },
    "9900": {
      "op": "POP"
    },
    "9901": {
      "op": "POP"
    },
    "9902": {
      "jump": "o",
      "op": "JUMP"
    },
    "9903": {
      "op": "JUMPDEST"
    },
    "9904": {
      "op": "DUP2"
    },
    "9905": {
      "op": "DUP2"
    },
    "9906": {
      "op": "SUB"
    },
    "9907": {
      "op": "DUP2"
    },
    "9908": {
      "op": "DUP2"
    },
    "9909": {
      "op": "GT"
    },
    "9910": {
      "op": "ISZERO"
    },
    "9911": {
      "op": "PUSH2",
      "value": "0xD19"
    },
    "9914": {
      "op": "JUMPI"
    },
    "9915": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9920": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9922": {
      "op": "SHL"
    },
    "9923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9925": {
      "op": "MSTORE"
    },
    "9926": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "9928": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9930": {
      "op": "MSTORE"
    },
    "9931": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9935": {
      "op": "REVERT"
    },
    "9936": {
      "op": "JUMPDEST"
    },
    "9937": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9942": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9944": {
      "op": "SHL"
    },
    "9945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9947": {
      "op": "MSTORE"
    },
    "9948": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "9950": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9952": {
      "op": "MSTORE"
    },
    "9953": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9957": {
      "op": "REVERT"
    }
  },
  "sha1": "063ef277099a436dd5322ee7af1871d824bcce58",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport {IOperatorFilterRegistry} from \"./IOperatorFilterRegistry.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {EnumerableSet} from \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport {OperatorFilterRegistryErrorsAndEvents} from \"./OperatorFilterRegistryErrorsAndEvents.sol\";\n\n/**\n * @title  OperatorFilterRegistry\n * @notice Borrows heavily from the QQL BlacklistOperatorFilter contract:\n *         https://github.com/qql-art/contracts/blob/main/contracts/BlacklistOperatorFilter.sol\n * @notice This contracts allows tokens or token owners to register specific addresses or codeHashes that may be\n * *       restricted according to the isOperatorAllowed function.\n */\ncontract OperatorFilterRegistry is IOperatorFilterRegistry, OperatorFilterRegistryErrorsAndEvents {\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using EnumerableSet for EnumerableSet.Bytes32Set;\n\n    /// @dev initialized accounts have a nonzero codehash (see https://eips.ethereum.org/EIPS/eip-1052)\n    /// Note that this will also be a smart contract's codehash when making calls from its constructor.\n    bytes32 constant EOA_CODEHASH = keccak256(\"\");\n\n    mapping(address => EnumerableSet.AddressSet) private _filteredOperators;\n    mapping(address => EnumerableSet.Bytes32Set) private _filteredCodeHashes;\n    mapping(address => address) private _registrations;\n    mapping(address => EnumerableSet.AddressSet) private _subscribers;\n\n    /**\n     * @notice restricts method caller to the address or EIP-173 \"owner()\"\n     */\n    modifier onlyAddressOrOwner(address addr) {\n        if (msg.sender != addr) {\n            try Ownable(addr).owner() returns (address owner) {\n                if (msg.sender != owner) {\n                    revert OnlyAddressOrOwner();\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert NotOwnable();\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n        _;\n    }\n\n    /**\n     * @notice Returns true if operator is not filtered for a given token, either by address or codeHash. Also returns\n     *         true if supplied registrant address is not registered.\n     */\n    function isOperatorAllowed(address registrant, address operator) external view returns (bool) {\n        address registration = _registrations[registrant];\n        if (registration != address(0)) {\n            EnumerableSet.AddressSet storage filteredOperatorsRef;\n            EnumerableSet.Bytes32Set storage filteredCodeHashesRef;\n\n            filteredOperatorsRef = _filteredOperators[registration];\n            filteredCodeHashesRef = _filteredCodeHashes[registration];\n\n            if (filteredOperatorsRef.contains(operator)) {\n                revert AddressFiltered(operator);\n            }\n            if (operator.code.length > 0) {\n                bytes32 codeHash = operator.codehash;\n                if (filteredCodeHashesRef.contains(codeHash)) {\n                    revert CodeHashFiltered(operator, codeHash);\n                }\n            }\n        }\n        return true;\n    }\n\n    //////////////////\n    // AUTH METHODS //\n    //////////////////\n\n    /**\n     * @notice Registers an address with the registry. May be called by address itself or by EIP-173 owner.\n     */\n    function register(address registrant) external onlyAddressOrOwner(registrant) {\n        if (_registrations[registrant] != address(0)) {\n            revert AlreadyRegistered();\n        }\n        _registrations[registrant] = registrant;\n        emit RegistrationUpdated(registrant, true);\n    }\n\n    /**\n     * @notice Unregisters an address with the registry and removes its subscription. May be called by address itself or by EIP-173 owner.\n     *         Note that this does not remove any filtered addresses or codeHashes.\n     *         Also note that any subscriptions to this registrant will still be active and follow the existing filtered addresses and codehashes.\n     */\n    function unregister(address registrant) external onlyAddressOrOwner(registrant) {\n        address registration = _registrations[registrant];\n        if (registration == address(0)) {\n            revert NotRegistered(registrant);\n        }\n        if (registration != registrant) {\n            _subscribers[registration].remove(registrant);\n            emit SubscriptionUpdated(registrant, registration, false);\n        }\n        _registrations[registrant] = address(0);\n        emit RegistrationUpdated(registrant, false);\n    }\n\n    /**\n     * @notice Registers an address with the registry and \"subscribes\" to another address's filtered operators and codeHashes.\n     */\n    function registerAndSubscribe(address registrant, address subscription) external onlyAddressOrOwner(registrant) {\n        address registration = _registrations[registrant];\n        if (registration != address(0)) {\n            revert AlreadyRegistered();\n        }\n        if (registrant == subscription) {\n            revert CannotSubscribeToSelf();\n        }\n        address subscriptionRegistration = _registrations[subscription];\n        if (subscriptionRegistration == address(0)) {\n            revert NotRegistered(subscription);\n        }\n        if (subscriptionRegistration != subscription) {\n            revert CannotSubscribeToRegistrantWithSubscription(subscription);\n        }\n\n        _registrations[registrant] = subscription;\n        _subscribers[subscription].add(registrant);\n        emit RegistrationUpdated(registrant, true);\n        emit SubscriptionUpdated(registrant, subscription, true);\n    }\n\n    /**\n     * @notice Registers an address with the registry and copies the filtered operators and codeHashes from another\n     *         address without subscribing.\n     */\n    function registerAndCopyEntries(address registrant, address registrantToCopy)\n        external\n        onlyAddressOrOwner(registrant)\n    {\n        if (registrantToCopy == registrant) {\n            revert CannotCopyFromSelf();\n        }\n        address registration = _registrations[registrant];\n        if (registration != address(0)) {\n            revert AlreadyRegistered();\n        }\n        address registrantRegistration = _registrations[registrantToCopy];\n        if (registrantRegistration == address(0)) {\n            revert NotRegistered(registrantToCopy);\n        }\n        _registrations[registrant] = registrant;\n        emit RegistrationUpdated(registrant, true);\n        _copyEntries(registrant, registrantToCopy);\n    }\n\n    /**\n     * @notice Update an operator address for a registered address - when filtered is true, the operator is filtered.\n     */\n    function updateOperator(address registrant, address operator, bool filtered)\n        external\n        onlyAddressOrOwner(registrant)\n    {\n        address registration = _registrations[registrant];\n        if (registration == address(0)) {\n            revert NotRegistered(registrant);\n        }\n        if (registration != registrant) {\n            revert CannotUpdateWhileSubscribed(registration);\n        }\n        EnumerableSet.AddressSet storage filteredOperatorsRef = _filteredOperators[registrant];\n\n        if (!filtered) {\n            bool removed = filteredOperatorsRef.remove(operator);\n            if (!removed) {\n                revert AddressNotFiltered(operator);\n            }\n        } else {\n            bool added = filteredOperatorsRef.add(operator);\n            if (!added) {\n                revert AddressAlreadyFiltered(operator);\n            }\n        }\n        emit OperatorUpdated(registrant, operator, filtered);\n    }\n\n    /**\n     * @notice Update a codeHash for a registered address - when filtered is true, the codeHash is filtered.\n     */\n    function updateCodeHash(address registrant, bytes32 codeHash, bool filtered)\n        external\n        onlyAddressOrOwner(registrant)\n    {\n        if (codeHash == EOA_CODEHASH) {\n            revert CannotFilterEOAs();\n        }\n        address registration = _registrations[registrant];\n        if (registration == address(0)) {\n            revert NotRegistered(registrant);\n        }\n        if (registration != registrant) {\n            revert CannotUpdateWhileSubscribed(registration);\n        }\n        EnumerableSet.Bytes32Set storage filteredCodeHashesRef = _filteredCodeHashes[registrant];\n\n        if (!filtered) {\n            bool removed = filteredCodeHashesRef.remove(codeHash);\n            if (!removed) {\n                revert CodeHashNotFiltered(codeHash);\n            }\n        } else {\n            bool added = filteredCodeHashesRef.add(codeHash);\n            if (!added) {\n                revert CodeHashAlreadyFiltered(codeHash);\n            }\n        }\n        emit CodeHashUpdated(registrant, codeHash, filtered);\n    }\n\n    /**\n     * @notice Update multiple operators for a registered address - when filtered is true, the operators will be filtered. Reverts on duplicates.\n     */\n    function updateOperators(address registrant, address[] calldata operators, bool filtered)\n        external\n        onlyAddressOrOwner(registrant)\n    {\n        address registration = _registrations[registrant];\n        if (registration == address(0)) {\n            revert NotRegistered(registrant);\n        }\n        if (registration != registrant) {\n            revert CannotUpdateWhileSubscribed(registration);\n        }\n        EnumerableSet.AddressSet storage filteredOperatorsRef = _filteredOperators[registrant];\n        uint256 operatorsLength = operators.length;\n        unchecked {\n            if (!filtered) {\n                for (uint256 i = 0; i < operatorsLength; ++i) {\n                    address operator = operators[i];\n                    bool removed = filteredOperatorsRef.remove(operator);\n                    if (!removed) {\n                        revert AddressNotFiltered(operator);\n                    }\n                }\n            } else {\n                for (uint256 i = 0; i < operatorsLength; ++i) {\n                    address operator = operators[i];\n                    bool added = filteredOperatorsRef.add(operator);\n                    if (!added) {\n                        revert AddressAlreadyFiltered(operator);\n                    }\n                }\n            }\n        }\n        emit OperatorsUpdated(registrant, operators, filtered);\n    }\n\n    /**\n     * @notice Update multiple codeHashes for a registered address - when filtered is true, the codeHashes will be filtered. Reverts on duplicates.\n     */\n    function updateCodeHashes(address registrant, bytes32[] calldata codeHashes, bool filtered)\n        external\n        onlyAddressOrOwner(registrant)\n    {\n        address registration = _registrations[registrant];\n        if (registration == address(0)) {\n            revert NotRegistered(registrant);\n        }\n        if (registration != registrant) {\n            revert CannotUpdateWhileSubscribed(registration);\n        }\n        EnumerableSet.Bytes32Set storage filteredCodeHashesRef = _filteredCodeHashes[registrant];\n        uint256 codeHashesLength = codeHashes.length;\n        unchecked {\n            if (!filtered) {\n                for (uint256 i = 0; i < codeHashesLength; ++i) {\n                    bytes32 codeHash = codeHashes[i];\n                    bool removed = filteredCodeHashesRef.remove(codeHash);\n                    if (!removed) {\n                        revert CodeHashNotFiltered(codeHash);\n                    }\n                }\n            } else {\n                for (uint256 i = 0; i < codeHashesLength; ++i) {\n                    bytes32 codeHash = codeHashes[i];\n                    if (codeHash == EOA_CODEHASH) {\n                        revert CannotFilterEOAs();\n                    }\n                    bool added = filteredCodeHashesRef.add(codeHash);\n                    if (!added) {\n                        revert CodeHashAlreadyFiltered(codeHash);\n                    }\n                }\n            }\n        }\n        emit CodeHashesUpdated(registrant, codeHashes, filtered);\n    }\n\n    /**\n     * @notice Subscribe an address to another registrant's filtered operators and codeHashes. Will remove previous\n     *         subscription if present.\n     *         Note that accounts with subscriptions may go on to subscribe to other accounts - in this case,\n     *         subscriptions will not be forwarded. Instead the former subscription's existing entries will still be\n     *         used.\n     */\n    function subscribe(address registrant, address newSubscription) external onlyAddressOrOwner(registrant) {\n        if (registrant == newSubscription) {\n            revert CannotSubscribeToSelf();\n        }\n        if (newSubscription == address(0)) {\n            revert CannotSubscribeToZeroAddress();\n        }\n        address registration = _registrations[registrant];\n        if (registration == address(0)) {\n            revert NotRegistered(registrant);\n        }\n        if (registration == newSubscription) {\n            revert AlreadySubscribed(newSubscription);\n        }\n        address newSubscriptionRegistration = _registrations[newSubscription];\n        if (newSubscriptionRegistration == address(0)) {\n            revert NotRegistered(newSubscription);\n        }\n        if (newSubscriptionRegistration != newSubscription) {\n            revert CannotSubscribeToRegistrantWithSubscription(newSubscription);\n        }\n\n        if (registration != registrant) {\n            _subscribers[registration].remove(registrant);\n            emit SubscriptionUpdated(registrant, registration, false);\n        }\n        _registrations[registrant] = newSubscription;\n        _subscribers[newSubscription].add(registrant);\n        emit SubscriptionUpdated(registrant, newSubscription, true);\n    }\n\n    /**\n     * @notice Unsubscribe an address from its current subscribed registrant, and optionally copy its filtered operators and codeHashes.\n     */\n    function unsubscribe(address registrant, bool copyExistingEntries) external onlyAddressOrOwner(registrant) {\n        address registration = _registrations[registrant];\n        if (registration == address(0)) {\n            revert NotRegistered(registrant);\n        }\n        if (registration == registrant) {\n            revert NotSubscribed();\n        }\n        _subscribers[registration].remove(registrant);\n        _registrations[registrant] = registrant;\n        emit SubscriptionUpdated(registrant, registration, false);\n        if (copyExistingEntries) {\n            _copyEntries(registrant, registration);\n        }\n    }\n\n    /**\n     * @notice Copy filtered operators and codeHashes from a different registrantToCopy to addr.\n     */\n    function copyEntriesOf(address registrant, address registrantToCopy) external onlyAddressOrOwner(registrant) {\n        if (registrant == registrantToCopy) {\n            revert CannotCopyFromSelf();\n        }\n        address registration = _registrations[registrant];\n        if (registration == address(0)) {\n            revert NotRegistered(registrant);\n        }\n        if (registration != registrant) {\n            revert CannotUpdateWhileSubscribed(registration);\n        }\n        address registrantRegistration = _registrations[registrantToCopy];\n        if (registrantRegistration == address(0)) {\n            revert NotRegistered(registrantToCopy);\n        }\n        _copyEntries(registrant, registrantToCopy);\n    }\n\n    /// @dev helper to copy entries from registrantToCopy to registrant and emit events\n    function _copyEntries(address registrant, address registrantToCopy) private {\n        EnumerableSet.AddressSet storage filteredOperatorsRef = _filteredOperators[registrantToCopy];\n        EnumerableSet.Bytes32Set storage filteredCodeHashesRef = _filteredCodeHashes[registrantToCopy];\n        uint256 filteredOperatorsLength = filteredOperatorsRef.length();\n        uint256 filteredCodeHashesLength = filteredCodeHashesRef.length();\n        unchecked {\n            for (uint256 i = 0; i < filteredOperatorsLength; ++i) {\n                address operator = filteredOperatorsRef.at(i);\n                bool added = _filteredOperators[registrant].add(operator);\n                if (added) {\n                    emit OperatorUpdated(registrant, operator, true);\n                }\n            }\n            for (uint256 i = 0; i < filteredCodeHashesLength; ++i) {\n                bytes32 codehash = filteredCodeHashesRef.at(i);\n                bool added = _filteredCodeHashes[registrant].add(codehash);\n                if (added) {\n                    emit CodeHashUpdated(registrant, codehash, true);\n                }\n            }\n        }\n    }\n\n    //////////////////\n    // VIEW METHODS //\n    //////////////////\n\n    /**\n     * @notice Get the subscription address of a given registrant, if any.\n     */\n    function subscriptionOf(address registrant) external view returns (address subscription) {\n        subscription = _registrations[registrant];\n        if (subscription == address(0)) {\n            revert NotRegistered(registrant);\n        } else if (subscription == registrant) {\n            subscription = address(0);\n        }\n    }\n\n    /**\n     * @notice Get the set of addresses subscribed to a given registrant.\n     *         Note that order is not guaranteed as updates are made.\n     */\n    function subscribers(address registrant) external view returns (address[] memory) {\n        return _subscribers[registrant].values();\n    }\n\n    /**\n     * @notice Get the subscriber at a given index in the set of addresses subscribed to a given registrant.\n     *         Note that order is not guaranteed as updates are made.\n     */\n    function subscriberAt(address registrant, uint256 index) external view returns (address) {\n        return _subscribers[registrant].at(index);\n    }\n\n    /**\n     * @notice Returns true if operator is filtered by a given address or its subscription.\n     */\n    function isOperatorFiltered(address registrant, address operator) external view returns (bool) {\n        address registration = _registrations[registrant];\n        if (registration != registrant) {\n            return _filteredOperators[registration].contains(operator);\n        }\n        return _filteredOperators[registrant].contains(operator);\n    }\n\n    /**\n     * @notice Returns true if a codeHash is filtered by a given address or its subscription.\n     */\n    function isCodeHashFiltered(address registrant, bytes32 codeHash) external view returns (bool) {\n        address registration = _registrations[registrant];\n        if (registration != registrant) {\n            return _filteredCodeHashes[registration].contains(codeHash);\n        }\n        return _filteredCodeHashes[registrant].contains(codeHash);\n    }\n\n    /**\n     * @notice Returns true if the hash of an address's code is filtered by a given address or its subscription.\n     */\n    function isCodeHashOfFiltered(address registrant, address operatorWithCode) external view returns (bool) {\n        bytes32 codeHash = operatorWithCode.codehash;\n        address registration = _registrations[registrant];\n        if (registration != registrant) {\n            return _filteredCodeHashes[registration].contains(codeHash);\n        }\n        return _filteredCodeHashes[registrant].contains(codeHash);\n    }\n\n    /**\n     * @notice Returns true if an address has registered\n     */\n    function isRegistered(address registrant) external view returns (bool) {\n        return _registrations[registrant] != address(0);\n    }\n\n    /**\n     * @notice Returns a list of filtered operators for a given address or its subscription.\n     */\n    function filteredOperators(address registrant) external view returns (address[] memory) {\n        address registration = _registrations[registrant];\n        if (registration != registrant) {\n            return _filteredOperators[registration].values();\n        }\n        return _filteredOperators[registrant].values();\n    }\n\n    /**\n     * @notice Returns the set of filtered codeHashes for a given address or its subscription.\n     *         Note that order is not guaranteed as updates are made.\n     */\n    function filteredCodeHashes(address registrant) external view returns (bytes32[] memory) {\n        address registration = _registrations[registrant];\n        if (registration != registrant) {\n            return _filteredCodeHashes[registration].values();\n        }\n        return _filteredCodeHashes[registrant].values();\n    }\n\n    /**\n     * @notice Returns the filtered operator at the given index of the set of filtered operators for a given address or\n     *         its subscription.\n     *         Note that order is not guaranteed as updates are made.\n     */\n    function filteredOperatorAt(address registrant, uint256 index) external view returns (address) {\n        address registration = _registrations[registrant];\n        if (registration != registrant) {\n            return _filteredOperators[registration].at(index);\n        }\n        return _filteredOperators[registrant].at(index);\n    }\n\n    /**\n     * @notice Returns the filtered codeHash at the given index of the list of filtered codeHashes for a given address or\n     *         its subscription.\n     *         Note that order is not guaranteed as updates are made.\n     */\n    function filteredCodeHashAt(address registrant, uint256 index) external view returns (bytes32) {\n        address registration = _registrations[registrant];\n        if (registration != registrant) {\n            return _filteredCodeHashes[registration].at(index);\n        }\n        return _filteredCodeHashes[registrant].at(index);\n    }\n\n    /// @dev Convenience method to compute the code hash of an arbitrary contract\n    function codeHashOf(address a) external view returns (bytes32) {\n        return a.codehash;\n    }\n}\n",
  "sourceMap": "776:21230:17:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/OperatorFilterRegistry.sol",
  "type": "contract"
}